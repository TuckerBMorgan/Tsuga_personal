{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0","program":"/Users/hiroko/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ndarray_stats","--edition=2018","/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=d794dd44369e92f2","-C","extra-filename=-d794dd44369e92f2","--out-dir","/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps","-L","dependency=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps","--extern","indexmap=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libindexmap-4de1d005a015f2eb.rmeta","--extern","itertools=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libitertools-25b9771b3cb61611.rmeta","--extern","ndarray=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libndarray-44fffb1b6f7655ab.rmeta","--extern","noisy_float=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libnoisy_float-a97323229cd7f3eb.rmeta","--extern","num_integer=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libnum_integer-e30bf0ba8736c514.rmeta","--extern","num_traits=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libnum_traits-1e38b1e98a32a0e4.rmeta","--extern","rand=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/librand-cce16aac135a488a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hiroko/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libndarray_stats-d794dd44369e92f2.rmeta"},"prelude":{"crate_id":{"name":"ndarray_stats","disambiguator":[6075962045457880009,17215839308939388237]},"crate_root":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src","external_crates":[{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17558105223599808375,8641134072992365986]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16391569226461738429,2396501197197794813]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15218473559130501536,10412498800867537882]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15002797972794468225,1552711559034990603]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4646254705103034450,52903416994518094]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12433302035576608964,14843331431738146314]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13168698047779456167,15405996809305099045]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1207314236617024250,12058638532209810988]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9504436150329069197,1560099004311970383]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3218777832644284082,1601517877419470567]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17216814665906341115,9093190657978815784]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11427017693389760726,5196118128760041763]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[12191498035001760627,7809175471304527825]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13343118316727369485,17294320461155615024]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[1642168034010785250,9564000522961009442]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":16,"id":{"name":"ndarray","disambiguator":[9676034677313661026,15675597330221326898]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":17,"id":{"name":"rawpointer","disambiguator":[1980235174997172969,2119124781958743329]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":18,"id":{"name":"num_traits","disambiguator":[232350437020485540,14986150533027908738]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/means.rs","num":19,"id":{"name":"num_integer","disambiguator":[13975095593645502028,2293873673250647163]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":20,"id":{"name":"rayon","disambiguator":[4613191972440160715,11941265620953829332]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":21,"id":{"name":"either","disambiguator":[4098593999036855744,6981551172028397142]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":22,"id":{"name":"rayon_core","disambiguator":[10541163034117822632,2007127896636369639]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":23,"id":{"name":"crossbeam_channel","disambiguator":[2052144082903411827,11013142710888669578]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":24,"id":{"name":"cfg_if","disambiguator":[10645903167683084943,7507394493178449852]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":25,"id":{"name":"crossbeam_utils","disambiguator":[12249674517246884389,3959205480579387847]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":26,"id":{"name":"const_fn","disambiguator":[9962535952213963955,17548729641558516095]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":27,"id":{"name":"lazy_static","disambiguator":[7323878164186592709,3664285558321133328]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":28,"id":{"name":"crossbeam_deque","disambiguator":[2115088636563217883,15495771120442092140]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":29,"id":{"name":"crossbeam_epoch","disambiguator":[17590297872703006707,5300033388501394944]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":30,"id":{"name":"scopeguard","disambiguator":[18211460972924623792,14298880236037486232]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":31,"id":{"name":"memoffset","disambiguator":[772422491141327713,5833899906491032737]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":32,"id":{"name":"num_cpus","disambiguator":[10728630801135717797,10686795360415260461]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":33,"id":{"name":"libc","disambiguator":[14174293587568776457,7192531006648404102]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":34,"id":{"name":"num_complex","disambiguator":[14224875027102548545,14519428777384056250]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","num":35,"id":{"name":"matrixmultiply","disambiguator":[18026960723015257796,7113751541836335692]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","num":36,"id":{"name":"noisy_float","disambiguator":[16565462422717762326,4328132760385361737]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","num":37,"id":{"name":"itertools","disambiguator":[6919178970439420881,11454509191263377760]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":38,"id":{"name":"indexmap","disambiguator":[2486020886815651767,8704310467504340496]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":39,"id":{"name":"hashbrown","disambiguator":[17370907677972973320,11817154580634175609]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":40,"id":{"name":"rand","disambiguator":[8841027506590630888,4540102988080988792]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":41,"id":{"name":"rand_core","disambiguator":[1379752092512361865,15729090946682141689]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":42,"id":{"name":"getrandom","disambiguator":[10400070268087930655,6477885062036255608]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":43,"id":{"name":"cfg_if","disambiguator":[5589256938825471164,5141487198345647676]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":44,"id":{"name":"rand_chacha","disambiguator":[17269476959177167345,17002892883631735439]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":45,"id":{"name":"ppv_lite86","disambiguator":[8395343582739728967,16935181611998405177]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","num":46,"id":{"name":"rand_pcg","disambiguator":[11073160206289213938,3631570591439580423]}}],"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":0,"byte_end":4280,"line_start":1,"line_end":109,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1669,"byte_end":1683,"line_start":32,"line_end":32,"column_start":29,"column_end":43},"alias_span":null,"name":"CorrelationExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1711,"byte_end":1723,"line_start":33,"line_end":33,"column_start":27,"column_end":39},"alias_span":null,"name":"DeviationExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1749,"byte_end":1759,"line_start":34,"line_end":34,"column_start":25,"column_end":35},"alias_span":null,"name":"EntropyExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1787,"byte_end":1799,"line_start":35,"line_end":35,"column_start":27,"column_end":39},"alias_span":null,"name":"HistogramExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1828,"byte_end":1836,"line_start":36,"line_end":36,"column_start":28,"column_end":36},"alias_span":null,"name":"MaybeNan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1838,"byte_end":1849,"line_start":36,"line_end":36,"column_start":38,"column_end":49},"alias_span":null,"name":"MaybeNanExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1878,"byte_end":1889,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"alias_span":null,"name":"interpolate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":630},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1891,"byte_end":1904,"line_start":37,"line_end":37,"column_start":40,"column_end":53},"alias_span":null,"name":"Quantile1dExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1906,"byte_end":1917,"line_start":37,"line_end":37,"column_start":55,"column_end":66},"alias_span":null,"name":"QuantileExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":706},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1941,"byte_end":1950,"line_start":38,"line_end":38,"column_start":22,"column_end":31},"alias_span":null,"name":"Sort1dExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1987,"byte_end":2007,"line_start":39,"line_end":39,"column_start":36,"column_end":56},"alias_span":null,"name":"SummaryStatisticsExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47077,"byte_end":47081,"line_start":2,"line_end":2,"column_start":22,"column_end":26},"alias_span":null,"name":"Bins","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47083,"byte_end":47088,"line_start":2,"line_end":2,"column_start":28,"column_end":33},"alias_span":null,"name":"Edges","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":0,"index":963},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47112,"byte_end":47116,"line_start":3,"line_end":3,"column_start":22,"column_end":26},"alias_span":null,"name":"Grid","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47118,"byte_end":47129,"line_start":3,"line_end":3,"column_start":28,"column_end":39},"alias_span":null,"name":"GridBuilder","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47159,"byte_end":47168,"line_start":4,"line_end":4,"column_start":28,"column_end":37},"alias_span":null,"name":"Histogram","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47170,"byte_end":47182,"line_start":4,"line_end":4,"column_start":39,"column_end":51},"alias_span":null,"name":"HistogramExt","value":"","parent":{"krate":0,"index":170}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":0,"byte_end":4280,"line_start":1,"line_end":109,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":24},{"krate":0,"index":42},{"krate":0,"index":107},{"krate":0,"index":140},{"krate":0,"index":170},{"krate":0,"index":377},{"krate":0,"index":555},{"krate":0,"index":697},{"krate":0,"index":726}],"decl_id":null,"docs":" The [`ndarray-stats`] crate exposes statistical routines for `ArrayBase`,\n the *n*-dimensional array data structure provided by [`ndarray`].","sig":null,"attributes":[{"value":"/ The [`ndarray-stats`] crate exposes statistical routines for `ArrayBase`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ the *n*-dimensional array data structure provided by [`ndarray`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":78,"byte_end":147,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":148,"byte_end":151,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Currently available routines include:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":152,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/ - [order statistics] (minimum, maximum, median, quantiles, etc.);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":194,"byte_end":263,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ - [summary statistics] (mean, skewness, kurtosis, central moments, etc.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":264,"byte_end":340,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ - [partitioning];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":341,"byte_end":362,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/ - [correlation analysis] (covariance, pearson correlation);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":363,"byte_end":426,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ - [measures from information theory] (entropy, KL divergence, etc.);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":427,"byte_end":499,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ - [measures of deviation] (count equal, L1, L2 distances, mean squared err etc.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":500,"byte_end":584,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"/ - [histogram computation].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":585,"byte_end":615,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Please feel free to contribute new functionality! A roadmap can be found [here].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":620,"byte_end":704,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":705,"byte_end":708,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Our work is inspired by other existing statistical packages such as","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":709,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`NumPy`] (Python) and [`StatsBase.jl`] (Julia) - any contribution bringing us closer to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":781,"byte_end":873,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ feature parity is more than welcome!","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":874,"byte_end":914,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":915,"byte_end":918,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`ndarray-stats`]: https://github.com/rust-ndarray/ndarray-stats/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":919,"byte_end":988,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ [`ndarray`]: https://github.com/rust-ndarray/ndarray","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":989,"byte_end":1045,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/ [order statistics]: trait.QuantileExt.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1046,"byte_end":1092,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ [partitioning]: trait.Sort1dExt.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1093,"byte_end":1133,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/ [summary statistics]: trait.SummaryStatisticsExt.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1134,"byte_end":1191,"line_start":23,"line_end":23,"column_start":1,"column_end":58}},{"value":"/ [correlation analysis]: trait.CorrelationExt.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1192,"byte_end":1245,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/ [measures of deviation]: trait.DeviationExt.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1246,"byte_end":1298,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/ [measures from information theory]: trait.EntropyExt.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1299,"byte_end":1360,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ [histogram computation]: histogram/index.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1361,"byte_end":1410,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ [here]: https://github.com/rust-ndarray/ndarray-stats/issues/1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1411,"byte_end":1477,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ [`NumPy`]: https://docs.scipy.org/doc/numpy-1.14.1/reference/routines.statistics.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1478,"byte_end":1567,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/ [`StatsBase.jl`]: https://juliastats.github.io/StatsBase.jl/latest/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":1568,"byte_end":1639,"line_start":30,"line_end":30,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":2933,"byte_end":2946,"line_start":72,"line_end":72,"column_start":16,"column_end":29},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" This is a public type in a private module, so it can be included in\n public APIs, but other crates can't access it.\n","sig":null,"attributes":[{"value":"/ This is a public type in a private module, so it can be included in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":2791,"byte_end":2862,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ public APIs, but other crates can't access it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":2867,"byte_end":2917,"line_start":71,"line_end":71,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4511,"byte_end":4525,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"CorrelationExt","qualname":"::correlation::CorrelationExt","value":"CorrelationExt<A, S>","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":819}],"decl_id":null,"docs":" Extension trait for `ArrayBase` providing functions\n to compute different correlation measures.\n","sig":null,"attributes":[{"value":"/ Extension trait for `ArrayBase` providing functions","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4398,"byte_end":4453,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/ to compute different correlation measures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4454,"byte_end":4500,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6355,"byte_end":6358,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"cov","qualname":"::correlation::CorrelationExt::cov","value":"pub fn cov(&Self, A) -> Result<Array2<A>, EmptyInput> where A: Float +\nFromPrimitive","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Return the covariance matrix `C` for a 2-dimensional\n array of observations `M`.","sig":null,"attributes":[{"value":"/ Return the covariance matrix `C` for a 2-dimensional","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4567,"byte_end":4623,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/ array of observations `M`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4628,"byte_end":4658,"line_start":13,"line_end":13,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4663,"byte_end":4666,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ Let `(r, o)` be the shape of `M`:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4671,"byte_end":4708,"line_start":15,"line_end":15,"column_start":5,"column_end":42}},{"value":"/ - `r` is the number of random variables;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4713,"byte_end":4757,"line_start":16,"line_end":16,"column_start":5,"column_end":49}},{"value":"/ - `o` is the number of observations we have collected","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4762,"byte_end":4819,"line_start":17,"line_end":17,"column_start":5,"column_end":62}},{"value":"/ for each random variable.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4824,"byte_end":4853,"line_start":18,"line_end":18,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4858,"byte_end":4861,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Every column in `M` is an experiment: a single observation for each","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4866,"byte_end":4937,"line_start":20,"line_end":20,"column_start":5,"column_end":76}},{"value":"/ random variable.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4942,"byte_end":4962,"line_start":21,"line_end":21,"column_start":5,"column_end":25}},{"value":"/ Each row in `M` contains all the observations for a certain random variable.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":4967,"byte_end":5047,"line_start":22,"line_end":22,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5052,"byte_end":5055,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5060,"byte_end":5130,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population covariance, use `ddof = 0`, or to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5135,"byte_end":5209,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ calculate the sample covariance (unbiased estimate), use `ddof = 1`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5214,"byte_end":5286,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5291,"byte_end":5294,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The covariance of two random variables is defined as:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5299,"byte_end":5356,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5361,"byte_end":5364,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5369,"byte_end":5380,"line_start":30,"line_end":30,"column_start":5,"column_end":16}},{"value":"/                1       n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5385,"byte_end":5413,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/ cov(X, Y) = ――――――――   ∑ (xᵢ - x̅)(yᵢ - y̅)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5418,"byte_end":5489,"line_start":32,"line_end":32,"column_start":5,"column_end":52}},{"value":"/             n - ddof  i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5494,"byte_end":5523,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5528,"byte_end":5535,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5540,"byte_end":5543,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5548,"byte_end":5557,"line_start":36,"line_end":36,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5562,"byte_end":5565,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5570,"byte_end":5581,"line_start":38,"line_end":38,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5586,"byte_end":5599,"line_start":39,"line_end":39,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5604,"byte_end":5628,"line_start":40,"line_end":40,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5633,"byte_end":5647,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5652,"byte_end":5659,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ and similarly for ̅y.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5664,"byte_end":5690,"line_start":43,"line_end":43,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5695,"byte_end":5698,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If `M` is empty (either zero observations or zero random variables), it returns `Err(EmptyInput)`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5703,"byte_end":5805,"line_start":45,"line_end":45,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5810,"byte_end":5813,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is negative or greater than or equal to the number of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5818,"byte_end":5896,"line_start":47,"line_end":47,"column_start":5,"column_end":83}},{"value":"/ observations, or if the type cast of `n_observations` from `usize` to `A` fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5901,"byte_end":5985,"line_start":48,"line_end":48,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5990,"byte_end":5993,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":5998,"byte_end":6011,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6016,"byte_end":6019,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6024,"byte_end":6031,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview2, arr2};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6036,"byte_end":6068,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/ use ndarray_stats::CorrelationExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6073,"byte_end":6111,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6116,"byte_end":6119,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 3., 5.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6124,"byte_end":6156,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/                [2., 4., 6.]]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6161,"byte_end":6195,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/ let covariance = a.cov(1.).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6200,"byte_end":6240,"line_start":58,"line_end":58,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6245,"byte_end":6260,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/    covariance,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6265,"byte_end":6283,"line_start":60,"line_end":60,"column_start":5,"column_end":23}},{"value":"/    aview2(&[[4., 4.], [4., 4.]])","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6288,"byte_end":6324,"line_start":61,"line_end":61,"column_start":5,"column_end":41}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6329,"byte_end":6335,"line_start":62,"line_end":62,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6340,"byte_end":6347,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8270,"byte_end":8289,"line_start":121,"line_end":121,"column_start":8,"column_end":27},"name":"pearson_correlation","qualname":"::correlation::CorrelationExt::pearson_correlation","value":"pub fn pearson_correlation(&Self) -> Result<Array2<A>, EmptyInput> where\nA: Float + FromPrimitive","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Return the [Pearson correlation coefficients](https://en.wikipedia.org/wiki/Pearson_correlation_coefficient)\n for a 2-dimensional array of observations `M`.","sig":null,"attributes":[{"value":"/ Return the [Pearson correlation coefficients](https://en.wikipedia.org/wiki/Pearson_correlation_coefficient)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6457,"byte_end":6569,"line_start":68,"line_end":68,"column_start":5,"column_end":117}},{"value":"/ for a 2-dimensional array of observations `M`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6574,"byte_end":6624,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6629,"byte_end":6632,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Let `(r, o)` be the shape of `M`:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6637,"byte_end":6674,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/ - `r` is the number of random variables;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6679,"byte_end":6723,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ - `o` is the number of observations we have collected","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6728,"byte_end":6785,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/ for each random variable.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6790,"byte_end":6819,"line_start":74,"line_end":74,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6824,"byte_end":6827,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Every column in `M` is an experiment: a single observation for each","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6832,"byte_end":6903,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ random variable.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6908,"byte_end":6928,"line_start":77,"line_end":77,"column_start":5,"column_end":25}},{"value":"/ Each row in `M` contains all the observations for a certain random variable.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":6933,"byte_end":7013,"line_start":78,"line_end":78,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7018,"byte_end":7021,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The Pearson correlation coefficient of two random variables is defined as:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7026,"byte_end":7104,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7109,"byte_end":7112,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7117,"byte_end":7128,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/              cov(X, Y)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7133,"byte_end":7159,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ rho(X, Y) = ――――――――――――","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7164,"byte_end":7216,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/             std(X)std(Y)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7221,"byte_end":7249,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7254,"byte_end":7261,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7266,"byte_end":7269,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Let `R` be the matrix returned by this function. Then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7274,"byte_end":7331,"line_start":88,"line_end":88,"column_start":5,"column_end":62}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7336,"byte_end":7347,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/ R_ij = rho(X_i, X_j)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7352,"byte_end":7376,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7381,"byte_end":7388,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7393,"byte_end":7396,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If `M` is empty (either zero observations or zero random variables), it returns `Err(EmptyInput)`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7401,"byte_end":7503,"line_start":93,"line_end":93,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7508,"byte_end":7511,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the type cast of `n_observations` from `usize` to `A` fails or","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7516,"byte_end":7596,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ if the standard deviation of one of the random variables is zero and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7601,"byte_end":7673,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ division by zero panics for type A.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7678,"byte_end":7717,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7722,"byte_end":7725,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7730,"byte_end":7743,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7748,"byte_end":7751,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7756,"byte_end":7763,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use approx;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7768,"byte_end":7783,"line_start":102,"line_end":102,"column_start":5,"column_end":20}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7788,"byte_end":7810,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/ use ndarray_stats::CorrelationExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7815,"byte_end":7853,"line_start":104,"line_end":104,"column_start":5,"column_end":43}},{"value":"/ use approx::AbsDiffEq;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7858,"byte_end":7884,"line_start":105,"line_end":105,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7889,"byte_end":7892,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 3., 5.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7897,"byte_end":7929,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/                [2., 4., 6.]]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7934,"byte_end":7968,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ let corr = a.pearson_correlation().unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":7973,"byte_end":8021,"line_start":109,"line_end":109,"column_start":5,"column_end":53}},{"value":"/ let epsilon = 1e-7;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8026,"byte_end":8049,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/ assert!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8054,"byte_end":8066,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/     corr.abs_diff_eq(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8071,"byte_end":8096,"line_start":112,"line_end":112,"column_start":5,"column_end":30}},{"value":"/         &arr2(&[","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8101,"byte_end":8121,"line_start":113,"line_end":113,"column_start":5,"column_end":25}},{"value":"/             [1., 1.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8126,"byte_end":8151,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/             [1., 1.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8156,"byte_end":8181,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/         ]),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8186,"byte_end":8201,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/         epsilon","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8206,"byte_end":8225,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/     )","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8230,"byte_end":8239,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8244,"byte_end":8250,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8255,"byte_end":8262,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":16892,"byte_end":16904,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"DeviationExt","qualname":"::deviation::DeviationExt","value":"DeviationExt<A, S, D>","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":821}],"decl_id":null,"docs":" An extension trait for `ArrayBase` providing functions\n to compute different deviation measures.\n","sig":null,"attributes":[{"value":"/ An extension trait for `ArrayBase` providing functions","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":16778,"byte_end":16836,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/ to compute different deviation measures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":16837,"byte_end":16881,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17297,"byte_end":17305,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"count_eq","qualname":"::deviation::DeviationExt::count_eq","value":"pub fn count_eq<T>(&Self, &ArrayBase<T, D>) -> Result<usize, MultiInputError>\nwhere A: PartialEq, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Counts the number of indices at which the elements of the arrays `self`\n and `other` are equal.","sig":null,"attributes":[{"value":"/ Counts the number of indices at which the elements of the arrays `self`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":16967,"byte_end":17042,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ and `other` are equal.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17047,"byte_end":17073,"line_start":16,"line_end":16,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17078,"byte_end":17081,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17086,"byte_end":17131,"line_start":18,"line_end":18,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17136,"byte_end":17139,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17144,"byte_end":17198,"line_start":20,"line_end":20,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17203,"byte_end":17289,"line_start":21,"line_end":21,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17773,"byte_end":17782,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"count_neq","qualname":"::deviation::DeviationExt::count_neq","value":"pub fn count_neq<T>(&Self, &ArrayBase<T, D>) -> Result<usize, MultiInputError>\nwhere A: PartialEq, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Counts the number of indices at which the elements of the arrays `self`\n and `other` are not equal.","sig":null,"attributes":[{"value":"/ Counts the number of indices at which the elements of the arrays `self`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17439,"byte_end":17514,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ and `other` are not equal.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17519,"byte_end":17549,"line_start":28,"line_end":28,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17554,"byte_end":17557,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17562,"byte_end":17607,"line_start":30,"line_end":30,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17612,"byte_end":17615,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17620,"byte_end":17674,"line_start":32,"line_end":32,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17679,"byte_end":17765,"line_start":33,"line_end":33,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18466,"byte_end":18476,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"sq_l2_dist","qualname":"::deviation::DeviationExt::sq_l2_dist","value":"pub fn sq_l2_dist<T>(&Self, &ArrayBase<T, D>) -> Result<A, MultiInputError>\nwhere A: AddAssign + Clone + Signed, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the [squared L2 distance] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the [squared L2 distance] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17916,"byte_end":17982,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17987,"byte_end":17990,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":17995,"byte_end":18006,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/  n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18011,"byte_end":18017,"line_start":42,"line_end":42,"column_start":5,"column_end":11}},{"value":"/  ∑  |aᵢ - bᵢ|²","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18022,"byte_end":18047,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18052,"byte_end":18059,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18064,"byte_end":18071,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18076,"byte_end":18079,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a` and `other` is `b`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18084,"byte_end":18127,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18132,"byte_end":18135,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18140,"byte_end":18185,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18190,"byte_end":18193,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18198,"byte_end":18252,"line_start":51,"line_end":51,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18257,"byte_end":18343,"line_start":52,"line_end":52,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18348,"byte_end":18351,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ [squared L2 distance]: https://en.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18356,"byte_end":18458,"line_start":54,"line_end":54,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19215,"byte_end":19222,"line_start":78,"line_end":78,"column_start":8,"column_end":15},"name":"l2_dist","qualname":"::deviation::DeviationExt::l2_dist","value":"pub fn l2_dist<T>(&Self, &ArrayBase<T, D>) -> Result<f64, MultiInputError>\nwhere A: AddAssign + Clone + Signed + ToPrimitive, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the [L2 distance] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the [L2 distance] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18623,"byte_end":18681,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18686,"byte_end":18689,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18694,"byte_end":18705,"line_start":62,"line_end":62,"column_start":5,"column_end":16}},{"value":"/      n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18710,"byte_end":18720,"line_start":63,"line_end":63,"column_start":5,"column_end":15}},{"value":"/ √ (  ∑  |aᵢ - bᵢ|² )","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18725,"byte_end":18758,"line_start":64,"line_end":64,"column_start":5,"column_end":29}},{"value":"/     i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18763,"byte_end":18774,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18779,"byte_end":18786,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18791,"byte_end":18794,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a` and `other` is `b`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18799,"byte_end":18842,"line_start":68,"line_end":68,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18847,"byte_end":18850,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18855,"byte_end":18900,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18905,"byte_end":18908,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18913,"byte_end":18967,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":18972,"byte_end":19058,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19063,"byte_end":19066,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the type cast from `A` to `f64` fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19071,"byte_end":19127,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19132,"byte_end":19135,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [L2 distance]: https://en.wikipedia.org/wiki/Euclidean_distance","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19140,"byte_end":19207,"line_start":77,"line_end":77,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19888,"byte_end":19895,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"l1_dist","qualname":"::deviation::DeviationExt::l1_dist","value":"pub fn l1_dist<T>(&Self, &ArrayBase<T, D>) -> Result<A, MultiInputError> where\nA: AddAssign + Clone + Signed, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the [L1 distance] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the [L1 distance] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19385,"byte_end":19443,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19448,"byte_end":19451,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19456,"byte_end":19467,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/  n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19472,"byte_end":19478,"line_start":86,"line_end":86,"column_start":5,"column_end":11}},{"value":"/  ∑  |aᵢ - bᵢ|","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19483,"byte_end":19506,"line_start":87,"line_end":87,"column_start":5,"column_end":22}},{"value":"/ i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19511,"byte_end":19518,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19523,"byte_end":19530,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19535,"byte_end":19538,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a` and `other` is `b`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19543,"byte_end":19586,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19591,"byte_end":19594,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19599,"byte_end":19644,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19649,"byte_end":19652,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19657,"byte_end":19711,"line_start":95,"line_end":95,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19716,"byte_end":19802,"line_start":96,"line_end":96,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19807,"byte_end":19810,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [L1 distance]: https://en.wikipedia.org/wiki/Taxicab_geometry","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":19815,"byte_end":19880,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20540,"byte_end":20549,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"linf_dist","qualname":"::deviation::DeviationExt::linf_dist","value":"pub fn linf_dist<T>(&Self, &ArrayBase<T, D>) -> Result<A, MultiInputError>\nwhere A: Clone + PartialOrd + Signed, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the [L∞ distance] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the [L∞ distance] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20042,"byte_end":20102,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20107,"byte_end":20110,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20115,"byte_end":20126,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ max(|aᵢ - bᵢ|)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20131,"byte_end":20153,"line_start":107,"line_end":107,"column_start":5,"column_end":23}},{"value":"/  ᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20158,"byte_end":20166,"line_start":108,"line_end":108,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20171,"byte_end":20178,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20183,"byte_end":20186,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a` and `other` is `b`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20191,"byte_end":20234,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20239,"byte_end":20242,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20247,"byte_end":20292,"line_start":113,"line_end":113,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20297,"byte_end":20300,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20305,"byte_end":20359,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20364,"byte_end":20450,"line_start":116,"line_end":116,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20455,"byte_end":20458,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ [L∞ distance]: https://en.wikipedia.org/wiki/Chebyshev_distance","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20463,"byte_end":20532,"line_start":118,"line_end":118,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21306,"byte_end":21318,"line_start":142,"line_end":142,"column_start":8,"column_end":20},"name":"mean_abs_err","qualname":"::deviation::DeviationExt::mean_abs_err","value":"pub fn mean_abs_err<T>(&Self, &ArrayBase<T, D>)\n-> Result<f64, MultiInputError> where A: AddAssign + Clone + Signed +\nToPrimitive, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the [mean absolute error] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the [mean absolute error] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20697,"byte_end":20763,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20768,"byte_end":20771,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20776,"byte_end":20787,"line_start":126,"line_end":126,"column_start":5,"column_end":16}},{"value":"/        n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20792,"byte_end":20804,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/ 1/n *  ∑  |aᵢ - bᵢ|","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20809,"byte_end":20838,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"/       i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20843,"byte_end":20856,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20861,"byte_end":20868,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20873,"byte_end":20876,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a` and `other` is `b`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20881,"byte_end":20924,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20929,"byte_end":20932,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20937,"byte_end":20982,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20987,"byte_end":20990,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":20995,"byte_end":21049,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21054,"byte_end":21140,"line_start":137,"line_end":137,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21145,"byte_end":21148,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the type cast from `A` to `f64` fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21153,"byte_end":21209,"line_start":139,"line_end":139,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21214,"byte_end":21217,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [mean absolute error]: https://en.wikipedia.org/wiki/Mean_absolute_error","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21222,"byte_end":21298,"line_start":141,"line_end":141,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22089,"byte_end":22100,"line_start":165,"line_end":165,"column_start":8,"column_end":19},"name":"mean_sq_err","qualname":"::deviation::DeviationExt::mean_sq_err","value":"pub fn mean_sq_err<T>(&Self, &ArrayBase<T, D>) -> Result<f64, MultiInputError>\nwhere A: AddAssign + Clone + Signed + ToPrimitive, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the [mean squared error] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the [mean squared error] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21481,"byte_end":21546,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21551,"byte_end":21554,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21559,"byte_end":21570,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/        n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21575,"byte_end":21587,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/ 1/n *  ∑  |aᵢ - bᵢ|²","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21592,"byte_end":21623,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/       i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21628,"byte_end":21641,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21646,"byte_end":21653,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21658,"byte_end":21661,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a` and `other` is `b`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21666,"byte_end":21709,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21714,"byte_end":21717,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21722,"byte_end":21767,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21772,"byte_end":21775,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21780,"byte_end":21834,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21839,"byte_end":21925,"line_start":160,"line_end":160,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21930,"byte_end":21933,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the type cast from `A` to `f64` fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21938,"byte_end":21994,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":21999,"byte_end":22002,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [mean squared error]: https://en.wikipedia.org/wiki/Mean_squared_error","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22007,"byte_end":22081,"line_start":164,"line_end":164,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22884,"byte_end":22900,"line_start":186,"line_end":186,"column_start":8,"column_end":24},"name":"root_mean_sq_err","qualname":"::deviation::DeviationExt::root_mean_sq_err","value":"pub fn root_mean_sq_err<T>(&Self, &ArrayBase<T, D>)\n-> Result<f64, MultiInputError> where A: AddAssign + Clone + Signed +\nToPrimitive, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the unnormalized [root-mean-square error] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the unnormalized [root-mean-square error] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22263,"byte_end":22345,"line_start":170,"line_end":170,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22350,"byte_end":22353,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22358,"byte_end":22369,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ √ mse(a, b)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22374,"byte_end":22391,"line_start":173,"line_end":173,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22396,"byte_end":22403,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22408,"byte_end":22411,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a`, `other` is `b` and `mse` is the mean-squared-error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22416,"byte_end":22492,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22497,"byte_end":22500,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22505,"byte_end":22550,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22555,"byte_end":22558,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22563,"byte_end":22617,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22622,"byte_end":22708,"line_start":181,"line_end":181,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22713,"byte_end":22716,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the type cast from `A` to `f64` fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22721,"byte_end":22777,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22782,"byte_end":22785,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [root-mean-square error]: https://en.wikipedia.org/wiki/Root-mean-square_deviation","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":22790,"byte_end":22876,"line_start":185,"line_end":185,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23764,"byte_end":23790,"line_start":208,"line_end":208,"column_start":8,"column_end":34},"name":"peak_signal_to_noise_ratio","qualname":"::deviation::DeviationExt::peak_signal_to_noise_ratio","value":"pub fn peak_signal_to_noise_ratio<T>(&Self, &ArrayBase<T, D>, A)\n-> Result<f64, MultiInputError> where A: AddAssign + Clone + Signed +\nToPrimitive, T: Data<Elem = A>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Computes the [peak signal-to-noise ratio] between `self` and `other`.","sig":null,"attributes":[{"value":"/ Computes the [peak signal-to-noise ratio] between `self` and `other`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23063,"byte_end":23136,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23141,"byte_end":23144,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23149,"byte_end":23160,"line_start":193,"line_end":193,"column_start":5,"column_end":16}},{"value":"/ 10 * log10(maxv^2 / mse(a, b))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23165,"byte_end":23199,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23204,"byte_end":23211,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23216,"byte_end":23219,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ where `self` is `a`, `other` is `b`, `mse` is the mean-squared-error","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23224,"byte_end":23296,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ and `maxv` is the maximum possible value either array can take.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23301,"byte_end":23368,"line_start":198,"line_end":198,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23373,"byte_end":23376,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23381,"byte_end":23426,"line_start":200,"line_end":200,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23431,"byte_end":23434,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23439,"byte_end":23493,"line_start":202,"line_end":202,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `other` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23498,"byte_end":23584,"line_start":203,"line_end":203,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23589,"byte_end":23592,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the type cast from `A` to `f64` fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23597,"byte_end":23653,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23658,"byte_end":23661,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [peak signal-to-noise ratio]: https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":23666,"byte_end":23756,"line_start":207,"line_end":207,"column_start":5,"column_end":95}}]},{"kind":"Trait","id":{"krate":0,"index":119},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28566,"byte_end":28576,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"EntropyExt","qualname":"::entropy::EntropyExt","value":"EntropyExt<A, S, D>","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":835}],"decl_id":null,"docs":" Extension trait for `ArrayBase` providing methods\n to compute information theory quantities\n (e.g. entropy, Kullback–Leibler divergence, etc.).\n","sig":null,"attributes":[{"value":"/ Extension trait for `ArrayBase` providing methods","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28400,"byte_end":28453,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/ to compute information theory quantities","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28454,"byte_end":28498,"line_start":7,"line_end":7,"column_start":1,"column_end":45}},{"value":"/ (e.g. entropy, Kullback–Leibler divergence, etc.).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28499,"byte_end":28555,"line_start":8,"line_end":8,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29738,"byte_end":29745,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"entropy","qualname":"::entropy::EntropyExt::entropy","value":"pub fn entropy(&Self) -> Result<A, EmptyInput> where A: Float","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" Computes the [entropy] *S* of the array values, defined as","sig":null,"attributes":[{"value":"/ Computes the [entropy] *S* of the array values, defined as","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28639,"byte_end":28701,"line_start":14,"line_end":14,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28706,"byte_end":28709,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28714,"byte_end":28725,"line_start":16,"line_end":16,"column_start":5,"column_end":16}},{"value":"/       n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28730,"byte_end":28741,"line_start":17,"line_end":17,"column_start":5,"column_end":16}},{"value":"/ S = - ∑ xᵢ ln(xᵢ)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28746,"byte_end":28773,"line_start":18,"line_end":18,"column_start":5,"column_end":26}},{"value":"/      i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28778,"byte_end":28790,"line_start":19,"line_end":19,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28795,"byte_end":28802,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28807,"byte_end":28810,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28815,"byte_end":28872,"line_start":22,"line_end":22,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28877,"byte_end":28880,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ln` of any element in the array panics (which can occur for negative values for some `A`).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28885,"byte_end":28994,"line_start":24,"line_end":24,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":28999,"byte_end":29002,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ## Remarks","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29007,"byte_end":29021,"line_start":26,"line_end":26,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29026,"byte_end":29029,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The entropy is a measure used in [Information Theory]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29034,"byte_end":29091,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/ to describe a probability distribution: it only make sense","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29096,"byte_end":29158,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/ when the array values sum to 1, with each entry between","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29163,"byte_end":29222,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/ 0 and 1 (extremes included).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29227,"byte_end":29259,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29264,"byte_end":29267,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The array values are **not** normalised by this function before","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29272,"byte_end":29339,"line_start":33,"line_end":33,"column_start":5,"column_end":72}},{"value":"/ computing the entropy to avoid introducing potentially","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29344,"byte_end":29402,"line_start":34,"line_end":34,"column_start":5,"column_end":63}},{"value":"/ unnecessary numerical errors (e.g. if the array were to be already normalised).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29407,"byte_end":29490,"line_start":35,"line_end":35,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29495,"byte_end":29498,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ By definition, *xᵢ ln(xᵢ)* is set to 0 if *xᵢ* is 0.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29503,"byte_end":29565,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29570,"byte_end":29573,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [entropy]: https://en.wikipedia.org/wiki/Entropy_(information_theory)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29578,"byte_end":29651,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ [Information Theory]: https://en.wikipedia.org/wiki/Information_theory","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29656,"byte_end":29730,"line_start":40,"line_end":40,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31260,"byte_end":31273,"line_start":77,"line_end":77,"column_start":8,"column_end":21},"name":"kl_divergence","qualname":"::entropy::EntropyExt::kl_divergence","value":"pub fn kl_divergence<S2>(&Self, &ArrayBase<S2, D>)\n-> Result<A, MultiInputError> where S2: Data<Elem = A>, A: Float","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" Computes the [Kullback-Leibler divergence] *Dₖₗ(p,q)* between two arrays,\n where `self`=*p*.","sig":null,"attributes":[{"value":"/ Computes the [Kullback-Leibler divergence] *Dₖₗ(p,q)* between two arrays,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29811,"byte_end":29892,"line_start":45,"line_end":45,"column_start":5,"column_end":82}},{"value":"/ where `self`=*p*.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29897,"byte_end":29918,"line_start":46,"line_end":46,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29923,"byte_end":29926,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The Kullback-Leibler divergence is defined as:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29931,"byte_end":29981,"line_start":48,"line_end":48,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29986,"byte_end":29989,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":29994,"byte_end":30005,"line_start":50,"line_end":50,"column_start":5,"column_end":16}},{"value":"/              n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30010,"byte_end":30028,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/ Dₖₗ(p,q) = - ∑ pᵢ ln(qᵢ/pᵢ)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30033,"byte_end":30076,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/             i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30081,"byte_end":30100,"line_start":53,"line_end":53,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30105,"byte_end":30112,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30117,"byte_end":30120,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ If the arrays are empty, `Err(MultiInputError::EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30125,"byte_end":30201,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ If the array shapes are not identical,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30206,"byte_end":30248,"line_start":57,"line_end":57,"column_start":5,"column_end":47}},{"value":"/ `Err(MultiInputError::ShapeMismatch)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30253,"byte_end":30307,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30312,"byte_end":30315,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ **Panics** if, for a pair of elements *(pᵢ, qᵢ)* from *p* and *q*, computing","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30320,"byte_end":30404,"line_start":60,"line_end":60,"column_start":5,"column_end":85}},{"value":"/ *ln(qᵢ/pᵢ)* is a panic cause for `A`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30409,"byte_end":30454,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30459,"byte_end":30462,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ## Remarks","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30467,"byte_end":30481,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30486,"byte_end":30489,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The Kullback-Leibler divergence is a measure used in [Information Theory]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30494,"byte_end":30571,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ to describe the relationship between two probability distribution: it only make sense","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30576,"byte_end":30665,"line_start":66,"line_end":66,"column_start":5,"column_end":94}},{"value":"/ when each array sums to 1 with entries between 0 and 1 (extremes included).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30670,"byte_end":30749,"line_start":67,"line_end":67,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30754,"byte_end":30757,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The array values are **not** normalised by this function before","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30762,"byte_end":30829,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/ computing the entropy to avoid introducing potentially","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30834,"byte_end":30892,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ unnecessary numerical errors (e.g. if the array were to be already normalised).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30897,"byte_end":30980,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30985,"byte_end":30988,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ By definition, *pᵢ ln(qᵢ/pᵢ)* is set to 0 if *pᵢ* is 0.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":30993,"byte_end":31060,"line_start":73,"line_end":73,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31065,"byte_end":31068,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [Kullback-Leibler divergence]: https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31073,"byte_end":31173,"line_start":75,"line_end":75,"column_start":5,"column_end":105}},{"value":"/ [Information Theory]: https://en.wikipedia.org/wiki/Information_theory","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31178,"byte_end":31252,"line_start":76,"line_end":76,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":33092,"byte_end":33105,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"cross_entropy","qualname":"::entropy::EntropyExt::cross_entropy","value":"pub fn cross_entropy<S2>(&Self, &ArrayBase<S2, D>)\n-> Result<A, MultiInputError> where S2: Data<Elem = A>, A: Float","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" Computes the [cross entropy] *H(p,q)* between two arrays,\n where `self`=*p*.","sig":null,"attributes":[{"value":"/ Computes the [cross entropy] *H(p,q)* between two arrays,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31398,"byte_end":31459,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ where `self`=*p*.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31464,"byte_end":31485,"line_start":83,"line_end":83,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31490,"byte_end":31493,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The cross entropy is defined as:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31498,"byte_end":31534,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31539,"byte_end":31542,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31547,"byte_end":31558,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/            n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31563,"byte_end":31579,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/ H(p,q) = - ∑ pᵢ ln(qᵢ)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31584,"byte_end":31616,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/           i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31621,"byte_end":31638,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31643,"byte_end":31650,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31655,"byte_end":31658,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the arrays are empty, `Err(MultiInputError::EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31663,"byte_end":31739,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ If the array shapes are not identical,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31744,"byte_end":31786,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/ `Err(MultiInputError::ShapeMismatch)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31791,"byte_end":31845,"line_start":95,"line_end":95,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31850,"byte_end":31853,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any element in *q* is negative and taking the logarithm of a negative number","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31858,"byte_end":31952,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ is a panic cause for `A`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31957,"byte_end":31986,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31991,"byte_end":31994,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ## Remarks","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":31999,"byte_end":32013,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32018,"byte_end":32021,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The cross entropy is a measure used in [Information Theory]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32026,"byte_end":32089,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ to describe the relationship between two probability distributions: it only makes sense","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32094,"byte_end":32185,"line_start":103,"line_end":103,"column_start":5,"column_end":96}},{"value":"/ when each array sums to 1 with entries between 0 and 1 (extremes included).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32190,"byte_end":32269,"line_start":104,"line_end":104,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32274,"byte_end":32277,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The array values are **not** normalised by this function before","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32282,"byte_end":32349,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/ computing the entropy to avoid introducing potentially","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32354,"byte_end":32412,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/ unnecessary numerical errors (e.g. if the array were to be already normalised).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32417,"byte_end":32500,"line_start":108,"line_end":108,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32505,"byte_end":32508,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The cross entropy is often used as an objective/loss function in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32513,"byte_end":32581,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [optimization problems], including [machine learning].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32586,"byte_end":32644,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32649,"byte_end":32652,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ By definition, *pᵢ ln(qᵢ)* is set to 0 if *pᵢ* is 0.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32657,"byte_end":32719,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32724,"byte_end":32727,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [cross entropy]: https://en.wikipedia.org/wiki/Cross-entropy","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32732,"byte_end":32796,"line_start":115,"line_end":115,"column_start":5,"column_end":69}},{"value":"/ [Information Theory]: https://en.wikipedia.org/wiki/Information_theory","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32801,"byte_end":32875,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ [optimization problems]: https://en.wikipedia.org/wiki/Cross-entropy_method","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32880,"byte_end":32959,"line_start":117,"line_end":117,"column_start":5,"column_end":84}},{"value":"/ [machine learning]: https://en.wikipedia.org/wiki/Cross_entropy#Cross-entropy_error_function_and_logistic_regression","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":32964,"byte_end":33084,"line_start":118,"line_end":118,"column_start":5,"column_end":125}}]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::errors","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":837},{"krate":0,"index":847},{"krate":0,"index":845},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":849},{"krate":0,"index":862},{"krate":0,"index":860},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":864},{"krate":0,"index":873},{"krate":0,"index":871},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":875},{"krate":0,"index":887},{"krate":0,"index":885},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":889},{"krate":0,"index":904},{"krate":0,"index":902},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":" Custom errors returned from our methods and functions.\n","sig":null,"attributes":[{"value":"/ Custom errors returned from our methods and functions.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43134,"byte_end":43192,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":837},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43370,"byte_end":43380,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"EmptyInput","qualname":"::errors::EmptyInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that indicates that the input array was empty.\n","sig":null,"attributes":[{"value":"/ An error that indicates that the input array was empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43260,"byte_end":43319,"line_start":6,"line_end":6,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43697,"byte_end":43707,"line_start":22,"line_end":22,"column_start":5,"column_end":15},"name":"EmptyInput","qualname":"::errors::MinMaxError::EmptyInput","value":"MinMaxError::EmptyInput","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" The input was empty.\n","sig":null,"attributes":[{"value":"/ The input was empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43668,"byte_end":43692,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":852},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43781,"byte_end":43795,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"UndefinedOrder","qualname":"::errors::MinMaxError::UndefinedOrder","value":"MinMaxError::UndefinedOrder","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" The ordering between a tested pair of values was undefined.\n","sig":null,"attributes":[{"value":"/ The ordering between a tested pair of values was undefined.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43713,"byte_end":43776,"line_start":23,"line_end":23,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":849},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43650,"byte_end":43661,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"MinMaxError","qualname":"::errors::MinMaxError","value":"pub enum MinMaxError {\n\n    /// The input was empty.\n    EmptyInput,\n\n    /// The ordering between a tested pair of values was undefined.\n    UndefinedOrder,\n}","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":852}],"decl_id":null,"docs":" An error computing a minimum/maximum value.\n","sig":null,"attributes":[{"value":"/ An error computing a minimum/maximum value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43554,"byte_end":43601,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44563,"byte_end":44576,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"ShapeMismatch","qualname":"::errors::ShapeMismatch","value":"ShapeMismatch { first_shape, second_shape }","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"decl_id":null,"docs":" An error used by methods and functions that take two arrays as argument and\n expect them to have exactly the same shape\n (e.g. `ShapeMismatch` is raised when `a.shape() == b.shape()` evaluates to `False`).\n","sig":null,"attributes":[{"value":"/ An error used by methods and functions that take two arrays as argument and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44301,"byte_end":44380,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ expect them to have exactly the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44381,"byte_end":44427,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ (e.g. `ShapeMismatch` is raised when `a.shape() == b.shape()` evaluates to `False`).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44428,"byte_end":44516,"line_start":48,"line_end":48,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":865},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44587,"byte_end":44598,"line_start":51,"line_end":51,"column_start":9,"column_end":20},"name":"first_shape","qualname":"::errors::ShapeMismatch::first_shape","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":866},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44620,"byte_end":44632,"line_start":52,"line_end":52,"column_start":9,"column_end":21},"name":"second_shape","qualname":"::errors::ShapeMismatch::second_shape","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45118,"byte_end":45128,"line_start":71,"line_end":71,"column_start":5,"column_end":15},"name":"EmptyInput","qualname":"::errors::MultiInputError::EmptyInput","value":"MultiInputError::EmptyInput","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":" One or more of the arrays were empty.\n","sig":null,"attributes":[{"value":"/ One or more of the arrays were empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45072,"byte_end":45113,"line_start":70,"line_end":70,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":878},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45182,"byte_end":45195,"line_start":73,"line_end":73,"column_start":5,"column_end":18},"name":"ShapeMismatch","qualname":"::errors::MultiInputError::ShapeMismatch","value":"MultiInputError::ShapeMismatch(ShapeMismatch)","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":" The arrays did not have the same shape.\n","sig":null,"attributes":[{"value":"/ The arrays did not have the same shape.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45134,"byte_end":45177,"line_start":72,"line_end":72,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":875},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45050,"byte_end":45065,"line_start":69,"line_end":69,"column_start":10,"column_end":25},"name":"MultiInputError","qualname":"::errors::MultiInputError","value":"pub enum MultiInputError {\n\n    /// One or more of the arrays were empty.\n    EmptyInput,\n\n    /// The arrays did not have the same shape.\n    ShapeMismatch(ShapeMismatch),\n}","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":878}],"decl_id":null,"docs":" An error for methods that take multiple non-empty array inputs.\n","sig":null,"attributes":[{"value":"/ An error for methods that take multiple non-empty array inputs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44938,"byte_end":45005,"line_start":67,"line_end":67,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45309,"byte_end":45323,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"is_empty_input","qualname":"<MultiInputError>::is_empty_input","value":"pub fn is_empty_input(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `self` is the `EmptyInput` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is the `EmptyInput` variant.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45242,"byte_end":45297,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45526,"byte_end":45543,"line_start":86,"line_end":86,"column_start":12,"column_end":29},"name":"is_shape_mismatch","qualname":"<MultiInputError>::is_shape_mismatch","value":"pub fn is_shape_mismatch(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `self` is the `ShapeMismatch` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is the `ShapeMismatch` variant.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45456,"byte_end":45514,"line_start":85,"line_end":85,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":890},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46413,"byte_end":46423,"line_start":121,"line_end":121,"column_start":5,"column_end":15},"name":"EmptyInput","qualname":"::errors::QuantileError::EmptyInput","value":"QuantileError::EmptyInput","parent":{"krate":0,"index":889},"children":[],"decl_id":null,"docs":" The input was empty.\n","sig":null,"attributes":[{"value":"/ The input was empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46384,"byte_end":46408,"line_start":120,"line_end":120,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":892},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46488,"byte_end":46503,"line_start":123,"line_end":123,"column_start":5,"column_end":20},"name":"InvalidQuantile","qualname":"::errors::QuantileError::InvalidQuantile","value":"QuantileError::InvalidQuantile(N64)","parent":{"krate":0,"index":889},"children":[],"decl_id":null,"docs":" The `q` was not between `0.` and `1.` (inclusive).\n","sig":null,"attributes":[{"value":"/ The `q` was not between `0.` and `1.` (inclusive).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46429,"byte_end":46483,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":889},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46364,"byte_end":46377,"line_start":119,"line_end":119,"column_start":10,"column_end":23},"name":"QuantileError","qualname":"::errors::QuantileError","value":"pub enum QuantileError {\n\n    /// The input was empty.\n    EmptyInput,\n\n    /// The `q` was not between `0.` and `1.` (inclusive).\n    InvalidQuantile(N64),\n}","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":892}],"decl_id":null,"docs":" An error computing a quantile.\n","sig":null,"attributes":[{"value":"/ An error computing a quantile.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46281,"byte_end":46315,"line_start":117,"line_end":117,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"histogram","qualname":"::histogram","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":211},{"krate":0,"index":232},{"krate":0,"index":271},{"krate":0,"index":296}],"decl_id":null,"docs":" Histogram functionalities.\n","sig":null,"attributes":[{"value":"/ Histogram functionalities.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47025,"byte_end":47055,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47990,"byte_end":47995,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"Edges","qualname":"::histogram::bins::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":908}],"decl_id":null,"docs":" `Edges` is a sorted collection of `A` elements used\n to represent the boundaries of intervals ([`Bins`]) on\n a 1-dimensional axis.","sig":null,"attributes":[{"value":"/ `Edges` is a sorted collection of `A` elements used","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47315,"byte_end":47370,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ to represent the boundaries of intervals ([`Bins`]) on","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47371,"byte_end":47429,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/ a 1-dimensional axis.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47430,"byte_end":47455,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47456,"byte_end":47459,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Bins`]: struct.Bins.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47460,"byte_end":47490,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47491,"byte_end":47505,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47506,"byte_end":47509,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47510,"byte_end":47517,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use ndarray_stats::histogram::{Edges, Bins};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47518,"byte_end":47566,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ use noisy_float::types::n64;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47567,"byte_end":47599,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47600,"byte_end":47603,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let unit_edges = Edges::from(vec![n64(0.), n64(1.)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47604,"byte_end":47661,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ let unit_interval = Bins::new(unit_edges);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47662,"byte_end":47708,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ // left inclusive","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47709,"byte_end":47730,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47731,"byte_end":47746,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     unit_interval.range_of(&n64(0.)).unwrap(),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47747,"byte_end":47797,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/     n64(0.)..n64(1.),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47798,"byte_end":47823,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47824,"byte_end":47830,"line_start":21,"line_end":21,"column_start":1,"column_end":7}},{"value":"/ // right exclusive","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47831,"byte_end":47853,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47854,"byte_end":47869,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unit_interval.range_of(&n64(1.)),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47870,"byte_end":47911,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/     None","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47912,"byte_end":47924,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47925,"byte_end":47931,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":47932,"byte_end":47939,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50191,"byte_end":50194,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"len","qualname":"<Edges<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of edges in `self`.","sig":null,"attributes":[{"value":"/ Number of edges in `self`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49864,"byte_end":49894,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49899,"byte_end":49902,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49907,"byte_end":49921,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49926,"byte_end":49929,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49934,"byte_end":49941,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use ndarray_stats::histogram::Edges;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49946,"byte_end":49986,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/ use noisy_float::types::n64;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49991,"byte_end":50023,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50028,"byte_end":50031,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![n64(0.), n64(1.), n64(3.)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50036,"byte_end":50097,"line_start":116,"line_end":116,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50102,"byte_end":50117,"line_start":117,"line_end":117,"column_start":5,"column_end":20}},{"value":"/     edges.len(),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50122,"byte_end":50142,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/     3","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50147,"byte_end":50156,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50161,"byte_end":50167,"line_start":120,"line_end":120,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50172,"byte_end":50179,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50635,"byte_end":50648,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"as_array_view","qualname":"<Edges<A>>::as_array_view","value":"pub fn as_array_view(&Self) -> ArrayView1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Borrow an immutable reference to the edges as a 1-dimensional\n array view.","sig":null,"attributes":[{"value":"/ Borrow an immutable reference to the edges as a 1-dimensional","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50249,"byte_end":50314,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/ array view.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50319,"byte_end":50334,"line_start":127,"line_end":127,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50339,"byte_end":50342,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50347,"byte_end":50361,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50366,"byte_end":50369,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50374,"byte_end":50381,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50386,"byte_end":50409,"line_start":132,"line_end":132,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::histogram::Edges;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50414,"byte_end":50454,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50459,"byte_end":50462,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![0, 5, 3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50467,"byte_end":50510,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50515,"byte_end":50530,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/     edges.as_array_view(),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50535,"byte_end":50565,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/     array![0, 3, 5].view()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50570,"byte_end":50600,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50605,"byte_end":50611,"line_start":139,"line_end":139,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50616,"byte_end":50623,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51296,"byte_end":51306,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"indices_of","qualname":"<Edges<A>>::indices_of","value":"pub fn indices_of(&Self, &A) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Given `value`, it returns an option:\n - `Some((left, right))`, where `right=left+1`, if there are two consecutive edges in\n `self` such that `self[left] <= value < self[right]`;\n - `None`, otherwise.","sig":null,"attributes":[{"value":"/ Given `value`, it returns an option:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50728,"byte_end":50768,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/ - `Some((left, right))`, where `right=left+1`, if there are two consecutive edges in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50773,"byte_end":50861,"line_start":146,"line_end":146,"column_start":5,"column_end":93}},{"value":"/ `self` such that `self[left] <= value < self[right]`;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50866,"byte_end":50923,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/ - `None`, otherwise.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50928,"byte_end":50952,"line_start":148,"line_end":148,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50957,"byte_end":50960,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50965,"byte_end":50979,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50984,"byte_end":50987,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":50992,"byte_end":50999,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use ndarray_stats::histogram::Edges;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51004,"byte_end":51044,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51049,"byte_end":51052,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![0, 2, 3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51057,"byte_end":51100,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51105,"byte_end":51120,"line_start":156,"line_end":156,"column_start":5,"column_end":20}},{"value":"/     edges.indices_of(&1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51125,"byte_end":51154,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/     Some((0, 1))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51159,"byte_end":51179,"line_start":158,"line_end":158,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51184,"byte_end":51190,"line_start":159,"line_end":159,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51195,"byte_end":51210,"line_start":160,"line_end":160,"column_start":5,"column_end":20}},{"value":"/     edges.indices_of(&5),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51215,"byte_end":51244,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/     None","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51249,"byte_end":51261,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51266,"byte_end":51272,"line_start":163,"line_end":163,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51277,"byte_end":51284,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51750,"byte_end":51754,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"iter","qualname":"<Edges<A>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":926},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52457,"byte_end":52461,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"Bins","qualname":"::histogram::bins::Bins","value":"Bins {  }","parent":null,"children":[{"krate":0,"index":928}],"decl_id":null,"docs":" `Bins` is a sorted collection of non-overlapping\n 1-dimensional intervals.","sig":null,"attributes":[{"value":"/ `Bins` is a sorted collection of non-overlapping","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51827,"byte_end":51879,"line_start":184,"line_end":184,"column_start":1,"column_end":53}},{"value":"/ 1-dimensional intervals.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51880,"byte_end":51908,"line_start":185,"line_end":185,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51909,"byte_end":51912,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ All intervals are left-inclusive and right-exclusive.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51913,"byte_end":51970,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51971,"byte_end":51974,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51975,"byte_end":51989,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51990,"byte_end":51993,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":51994,"byte_end":52001,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ use ndarray_stats::histogram::{Edges, Bins};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52002,"byte_end":52050,"line_start":192,"line_end":192,"column_start":1,"column_end":49}},{"value":"/ use noisy_float::types::n64;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52051,"byte_end":52083,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52084,"byte_end":52087,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let edges = Edges::from(vec![n64(0.), n64(1.), n64(2.)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52088,"byte_end":52149,"line_start":195,"line_end":195,"column_start":1,"column_end":62}},{"value":"/ let bins = Bins::new(edges);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52150,"byte_end":52182,"line_start":196,"line_end":196,"column_start":1,"column_end":33}},{"value":"/ // first bin","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52183,"byte_end":52199,"line_start":197,"line_end":197,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52200,"byte_end":52215,"line_start":198,"line_end":198,"column_start":1,"column_end":16}},{"value":"/     bins.index(0),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52216,"byte_end":52238,"line_start":199,"line_end":199,"column_start":1,"column_end":23}},{"value":"/     n64(0.)..n64(1.) // n64(1.) is not included in the bin!","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52239,"byte_end":52302,"line_start":200,"line_end":200,"column_start":1,"column_end":64}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52303,"byte_end":52309,"line_start":201,"line_end":201,"column_start":1,"column_end":7}},{"value":"/ // second bin","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52310,"byte_end":52327,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52328,"byte_end":52343,"line_start":203,"line_end":203,"column_start":1,"column_end":16}},{"value":"/     bins.index(1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52344,"byte_end":52366,"line_start":204,"line_end":204,"column_start":1,"column_end":23}},{"value":"/     n64(1.)..n64(2.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52367,"byte_end":52391,"line_start":205,"line_end":205,"column_start":1,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52392,"byte_end":52398,"line_start":206,"line_end":206,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52399,"byte_end":52406,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52662,"byte_end":52665,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<Bins<A>>::new","value":"pub fn new(Edges<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Given a collection of [`Edges`], it returns the corresponding `Bins` instance.","sig":null,"attributes":[{"value":"/ Given a collection of [`Edges`], it returns the corresponding `Bins` instance.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52523,"byte_end":52605,"line_start":214,"line_end":214,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52610,"byte_end":52613,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`Edges`]: struct.Edges.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52618,"byte_end":52650,"line_start":216,"line_end":216,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53099,"byte_end":53102,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"len","qualname":"<Bins<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bins.","sig":null,"attributes":[{"value":"/ Returns the number of bins.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52727,"byte_end":52758,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52763,"byte_end":52766,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52771,"byte_end":52785,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52790,"byte_end":52793,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52798,"byte_end":52805,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use ndarray_stats::histogram::{Edges, Bins};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52810,"byte_end":52858,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/ use noisy_float::types::n64;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52863,"byte_end":52895,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52900,"byte_end":52903,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![n64(0.), n64(1.), n64(2.)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52908,"byte_end":52969,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/ let bins = Bins::new(edges);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52974,"byte_end":53006,"line_start":230,"line_end":230,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53011,"byte_end":53026,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"/     bins.len(),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53031,"byte_end":53050,"line_start":232,"line_end":232,"column_start":5,"column_end":24}},{"value":"/     2","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53055,"byte_end":53064,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53069,"byte_end":53075,"line_start":234,"line_end":234,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53080,"byte_end":53087,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53816,"byte_end":53824,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Bins<A>>::index_of","value":"pub fn index_of(&Self, &A) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Given `value`, it returns:\n - `Some(i)`, if the `i`-th bin in `self` contains `value`;\n - `None`, if `value` does not belong to any of the bins in `self`.","sig":null,"attributes":[{"value":"/ Given `value`, it returns:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53219,"byte_end":53249,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/ - `Some(i)`, if the `i`-th bin in `self` contains `value`;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53254,"byte_end":53316,"line_start":244,"line_end":244,"column_start":5,"column_end":67}},{"value":"/ - `None`, if `value` does not belong to any of the bins in `self`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53321,"byte_end":53391,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53396,"byte_end":53399,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53404,"byte_end":53418,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53423,"byte_end":53426,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53431,"byte_end":53438,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use ndarray_stats::histogram::{Edges, Bins};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53443,"byte_end":53491,"line_start":250,"line_end":250,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53496,"byte_end":53499,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![0, 2, 4, 6]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53504,"byte_end":53550,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/ let bins = Bins::new(edges);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53555,"byte_end":53587,"line_start":253,"line_end":253,"column_start":5,"column_end":37}},{"value":"/ let value = 1;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53592,"byte_end":53610,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53615,"byte_end":53630,"line_start":255,"line_end":255,"column_start":5,"column_end":20}},{"value":"/     bins.index_of(&1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53635,"byte_end":53661,"line_start":256,"line_end":256,"column_start":5,"column_end":31}},{"value":"/     Some(0)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53666,"byte_end":53681,"line_start":257,"line_end":257,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53686,"byte_end":53692,"line_start":258,"line_end":258,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53697,"byte_end":53712,"line_start":259,"line_end":259,"column_start":5,"column_end":20}},{"value":"/     bins.index(bins.index_of(&1).unwrap()),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53717,"byte_end":53764,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/     0..2","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53769,"byte_end":53781,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53786,"byte_end":53792,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53797,"byte_end":53804,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54494,"byte_end":54502,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"range_of","qualname":"<Bins<A>>::range_of","value":"pub fn range_of(&Self, &A) -> Option<Range<A>> where A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Given `value`, it returns:\n - `Some(left_edge..right_edge)`, if there exists a bin in `self` such that\n  `left_edge <= value < right_edge`;\n - `None`, otherwise.","sig":null,"attributes":[{"value":"/ Given `value`, it returns:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53923,"byte_end":53953,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ - `Some(left_edge..right_edge)`, if there exists a bin in `self` such that","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":53958,"byte_end":54036,"line_start":269,"line_end":269,"column_start":5,"column_end":83}},{"value":"/  `left_edge <= value < right_edge`;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54041,"byte_end":54080,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/ - `None`, otherwise.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54085,"byte_end":54109,"line_start":271,"line_end":271,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54114,"byte_end":54117,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54122,"byte_end":54136,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54141,"byte_end":54144,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54149,"byte_end":54156,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ use ndarray_stats::histogram::{Edges, Bins};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54161,"byte_end":54209,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54214,"byte_end":54217,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![0, 2, 4, 6]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54222,"byte_end":54268,"line_start":278,"line_end":278,"column_start":5,"column_end":51}},{"value":"/ let bins = Bins::new(edges);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54273,"byte_end":54305,"line_start":279,"line_end":279,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54310,"byte_end":54325,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/     bins.range_of(&1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54330,"byte_end":54356,"line_start":281,"line_end":281,"column_start":5,"column_end":31}},{"value":"/     Some(0..2)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54361,"byte_end":54379,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54384,"byte_end":54390,"line_start":283,"line_end":283,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54395,"byte_end":54410,"line_start":284,"line_end":284,"column_start":5,"column_end":20}},{"value":"/     bins.range_of(&10),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54415,"byte_end":54442,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/     None","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54447,"byte_end":54459,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54464,"byte_end":54470,"line_start":287,"line_end":287,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54475,"byte_end":54482,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":55171,"byte_end":55176,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"index","qualname":"<Bins<A>>::index","value":"pub fn index(&Self, usize) -> Range<A> where A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Get the `i`-th bin.","sig":null,"attributes":[{"value":"/ Get the `i`-th bin.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54794,"byte_end":54817,"line_start":300,"line_end":300,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54822,"byte_end":54825,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54830,"byte_end":54873,"line_start":302,"line_end":302,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54878,"byte_end":54881,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54886,"byte_end":54900,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54905,"byte_end":54908,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54913,"byte_end":54920,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use ndarray_stats::histogram::{Edges, Bins};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54925,"byte_end":54973,"line_start":307,"line_end":307,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54978,"byte_end":54981,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![1, 5, 10, 20]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":54986,"byte_end":55034,"line_start":309,"line_end":309,"column_start":5,"column_end":53}},{"value":"/ let bins = Bins::new(edges);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":55039,"byte_end":55071,"line_start":310,"line_end":310,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":55076,"byte_end":55091,"line_start":311,"line_end":311,"column_start":5,"column_end":20}},{"value":"/     bins.index(1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":55096,"byte_end":55118,"line_start":312,"line_end":312,"column_start":5,"column_end":27}},{"value":"/     5..10","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":55123,"byte_end":55136,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":55141,"byte_end":55147,"line_start":314,"line_end":314,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":55152,"byte_end":55159,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":211},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::histogram::errors","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":1293},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":948},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":952},{"krate":0,"index":961},{"krate":0,"index":959},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":946},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":57943,"byte_end":57954,"line_start":7,"line_end":7,"column_start":12,"column_end":23},"name":"BinNotFound","qualname":"::histogram::errors::BinNotFound","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error to denote that no bin has been found for a certain observation.\n","sig":null,"attributes":[{"value":"/ Error to denote that no bin has been found for a certain observation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":57834,"byte_end":57907,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58359,"byte_end":58369,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"EmptyInput","qualname":"::histogram::errors::BinsBuildError::EmptyInput","value":"BinsBuildError::EmptyInput","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" The input array was empty.\n","sig":null,"attributes":[{"value":"/ The input array was empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58324,"byte_end":58354,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58435,"byte_end":58443,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Strategy","qualname":"::histogram::errors::BinsBuildError::Strategy","value":"BinsBuildError::Strategy","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" The strategy for computing appropriate bins failed.\n","sig":null,"attributes":[{"value":"/ The strategy for computing appropriate bins failed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58375,"byte_end":58430,"line_start":26,"line_end":26,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58468,"byte_end":58483,"line_start":29,"line_end":29,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::histogram::errors::BinsBuildError::__NonExhaustive","value":"BinsBuildError::__NonExhaustive","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":952},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58303,"byte_end":58317,"line_start":23,"line_end":23,"column_start":10,"column_end":24},"name":"BinsBuildError","qualname":"::histogram::errors::BinsBuildError","value":"pub enum BinsBuildError {\n\n    /// The input array was empty.\n    EmptyInput,\n\n    /// The strategy for computing appropriate bins failed.\n    Strategy,\n\n    #[doc(hidden)]\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957}],"decl_id":null,"docs":" Error computing the set of histogram bins.\n","sig":null,"attributes":[{"value":"/ Error computing the set of histogram bins.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58223,"byte_end":58269,"line_start":21,"line_end":21,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58581,"byte_end":58595,"line_start":34,"line_end":34,"column_start":12,"column_end":26},"name":"is_empty_input","qualname":"<BinsBuildError>::is_empty_input","value":"pub fn is_empty_input(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `self` is the `EmptyInput` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is the `EmptyInput` variant.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58514,"byte_end":58569,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58792,"byte_end":58803,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_strategy","qualname":"<BinsBuildError>::is_strategy","value":"pub fn is_strategy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `self` is the `Strategy` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is the `Strategy` variant.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58727,"byte_end":58780,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":963},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61808,"byte_end":61812,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"Grid","qualname":"::histogram::grid::Grid","value":"Grid {  }","parent":null,"children":[{"krate":0,"index":965}],"decl_id":null,"docs":" A `Grid` is a partition of a rectangular region of an *n*-dimensional\n space—e.g. [*a*<sub>0</sub>, *b*<sub>0</sub>) × ⋯ × [*a*<sub>*n*−1</sub>,\n *b*<sub>*n*−1</sub>)—into a collection of rectangular *n*-dimensional bins.","sig":null,"attributes":[{"value":"/ A `Grid` is a partition of a rectangular region of an *n*-dimensional","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":59854,"byte_end":59927,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ space—e.g. [*a*<sub>0</sub>, *b*<sub>0</sub>) × ⋯ × [*a*<sub>*n*−1</sub>,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":59928,"byte_end":60013,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ *b*<sub>*n*−1</sub>)—into a collection of rectangular *n*-dimensional bins.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60014,"byte_end":60097,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60098,"byte_end":60101,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The grid is **fully determined by its 1-dimensional projections** on the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60102,"byte_end":60178,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ coordinate axes. For example, this is a partition that can be represented","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60179,"byte_end":60256,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ as a `Grid` struct:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60257,"byte_end":60280,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60281,"byte_end":60292,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ +---+-------+-+","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60293,"byte_end":60312,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/ |   |       | |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60313,"byte_end":60332,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/ +---+-------+-+","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60333,"byte_end":60352,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ |   |       | |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60353,"byte_end":60372,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/ |   |       | |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60373,"byte_end":60392,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ |   |       | |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60393,"byte_end":60412,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/ |   |       | |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60413,"byte_end":60432,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/ +---+-------+-+","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60433,"byte_end":60452,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60453,"byte_end":60460,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ while the next one can't:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60461,"byte_end":60490,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60491,"byte_end":60502,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ +---+-------+-+","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60503,"byte_end":60522,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ |   |       | |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60523,"byte_end":60542,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/ |   +-------+-+","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60543,"byte_end":60562,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/ |   |         |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60563,"byte_end":60582,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/ |   |         |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60583,"byte_end":60602,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/ |   |         |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60603,"byte_end":60622,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ |   |         |","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60623,"byte_end":60642,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ +---+-------+-+","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60643,"byte_end":60662,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60663,"byte_end":60670,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60671,"byte_end":60674,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60675,"byte_end":60689,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60690,"byte_end":60693,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60694,"byte_end":60701,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{Array, array};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60702,"byte_end":60734,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ use ndarray_stats::{HistogramExt,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60735,"byte_end":60772,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/                     histogram::{Histogram, Grid, GridBuilder,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60773,"byte_end":60838,"line_start":42,"line_end":42,"column_start":1,"column_end":66}},{"value":"/                                 Edges, Bins, strategies::Auto}};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60839,"byte_end":60907,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ use noisy_float::types::{N64, n64};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60908,"byte_end":60947,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60948,"byte_end":60951,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // 1-dimensional observations, as a (n_observations, 1) 2-d matrix","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":60952,"byte_end":61022,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ let observations = Array::from_shape_vec(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61023,"byte_end":61068,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     (12, 1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61069,"byte_end":61085,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/     vec![1, 4, 5, 2, 100, 20, 50, 65, 27, 40, 45, 23],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61086,"byte_end":61144,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/ ).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61145,"byte_end":61160,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61161,"byte_end":61164,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // The optimal grid layout is inferred from the data,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61165,"byte_end":61222,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/ // specifying a strategy (Auto in this case)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61223,"byte_end":61271,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ let grid = GridBuilder::<Auto<usize>>::from_array(&observations).unwrap().build();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61272,"byte_end":61358,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/ let expected_grid = Grid::from(vec![Bins::new(Edges::from(vec![1, 20, 39, 58, 77, 96, 115]))]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61359,"byte_end":61458,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(grid, expected_grid);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61459,"byte_end":61495,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61496,"byte_end":61499,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let histogram = observations.histogram(grid);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61500,"byte_end":61549,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61550,"byte_end":61553,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let histogram_matrix = histogram.counts();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61554,"byte_end":61600,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/ // Bins are left inclusive, right exclusive!","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61601,"byte_end":61649,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"/ let expected = array![4, 3, 3, 1, 0, 1];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61650,"byte_end":61694,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(histogram_matrix, expected.into_dyn());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61695,"byte_end":61749,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61750,"byte_end":61757,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62461,"byte_end":62465,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"ndim","qualname":"<Grid<A>>::ndim","value":"pub fn ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns `n`, the number of dimensions of the region partitioned by the grid.\n","sig":null,"attributes":[{"value":"/ Returns `n`, the number of dimensions of the region partitioned by the grid.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62369,"byte_end":62449,"line_start":86,"line_end":86,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62596,"byte_end":62601,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"shape","qualname":"<Grid<A>>::shape","value":"pub fn shape(&Self) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bins along each coordinate axis.\n","sig":null,"attributes":[{"value":"/ Returns the number of bins along each coordinate axis.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62526,"byte_end":62584,"line_start":91,"line_end":91,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62798,"byte_end":62809,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"projections","qualname":"<Grid<A>>::projections","value":"pub fn projections(&Self) -> &[Bins<A>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the grid projections on the coordinate axes as a slice of immutable references.\n","sig":null,"attributes":[{"value":"/ Returns the grid projections on the coordinate axes as a slice of immutable references.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62695,"byte_end":62786,"line_start":96,"line_end":96,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63114,"byte_end":63122,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Grid<A>>::index_of","value":"pub fn index_of<S>(&Self, &ArrayBase<S, Ix1>) -> Option<Vec<usize>> where\nS: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the *n*-dimensional bin containing the point, if\n one exists.","sig":null,"attributes":[{"value":"/ Returns the index of the *n*-dimensional bin containing the point, if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62870,"byte_end":62943,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ one exists.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62948,"byte_end":62963,"line_start":102,"line_end":102,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62968,"byte_end":62971,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the point is outside the grid.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62976,"byte_end":63028,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63033,"byte_end":63036,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `point.len()` does not equal `self.ndim()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63041,"byte_end":63102,"line_start":106,"line_end":106,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64110,"byte_end":64115,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"index","qualname":"<Grid<A>>::index","value":"pub fn index(&Self, &[usize]) -> Vec<Range<A>>","parent":null,"children":[],"decl_id":null,"docs":" Given `i=(i_0, ..., i_{n-1})`, an `n`-dimensional index, it returns\n `I_{i_0}x...xI_{i_{n-1}}`, an `n`-dimensional bin, where `I_{i_j}` is\n the `i_j`-th interval on the `j`-th projection of the grid on the coordinate axes.","sig":null,"attributes":[{"value":"/ Given `i=(i_0, ..., i_{n-1})`, an `n`-dimensional index, it returns","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63655,"byte_end":63726,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ `I_{i_0}x...xI_{i_{n-1}}`, an `n`-dimensional bin, where `I_{i_j}` is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63731,"byte_end":63804,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ the `i_j`-th interval on the `j`-th projection of the grid on the coordinate axes.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63809,"byte_end":63895,"line_start":130,"line_end":130,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63900,"byte_end":63903,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ **Panics** if at least one among `(i_0, ..., i_{n-1})` is out of bounds on the respective","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63908,"byte_end":64001,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/ coordinate axis - i.e. if there exists `j` such that `i_j >= self.projections[j].len()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64006,"byte_end":64098,"line_start":133,"line_end":133,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64779,"byte_end":64790,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"GridBuilder","qualname":"::histogram::grid::GridBuilder","value":"GridBuilder {  }","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" `GridBuilder`, given a [`strategy`] and some observations, returns a [`Grid`]\n instance for [`histogram`] computation.","sig":null,"attributes":[{"value":"/ `GridBuilder`, given a [`strategy`] and some observations, returns a [`Grid`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64524,"byte_end":64605,"line_start":149,"line_end":149,"column_start":1,"column_end":82}},{"value":"/ instance for [`histogram`] computation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64606,"byte_end":64649,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64650,"byte_end":64653,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`Grid`]: struct.Grid.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64654,"byte_end":64684,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/ [`histogram`]: trait.HistogramExt.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64685,"byte_end":64727,"line_start":153,"line_end":153,"column_start":1,"column_end":43}},{"value":"/ [`strategy`]: strategies/index.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64728,"byte_end":64767,"line_start":154,"line_end":154,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65428,"byte_end":65438,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"from_array","qualname":"<GridBuilder<B>>::from_array","value":"pub fn from_array<S>(&ArrayBase<S, Ix2>) -> Result<Self, BinsBuildError> where\nS: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Given some observations in a 2-dimensional array with shape `(n_observations, n_dimension)`\n it returns a `GridBuilder` instance that has learned the required parameter\n to build a [`Grid`] according to the specified [`strategy`].","sig":null,"attributes":[{"value":"/ Given some observations in a 2-dimensional array with shape `(n_observations, n_dimension)`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64936,"byte_end":65031,"line_start":164,"line_end":164,"column_start":5,"column_end":100}},{"value":"/ it returns a `GridBuilder` instance that has learned the required parameter","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65036,"byte_end":65115,"line_start":165,"line_end":165,"column_start":5,"column_end":84}},{"value":"/ to build a [`Grid`] according to the specified [`strategy`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65120,"byte_end":65184,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65189,"byte_end":65192,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ It returns `Err` if it is not possible to build a [`Grid`] given","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65197,"byte_end":65265,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/ the observed data according to the chosen [`strategy`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65270,"byte_end":65329,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65334,"byte_end":65337,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`Grid`]: struct.Grid.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65342,"byte_end":65372,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/ [`strategy`]: strategies/index.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65377,"byte_end":65416,"line_start":172,"line_end":172,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":66061,"byte_end":66066,"line_start":190,"line_end":190,"column_start":12,"column_end":17},"name":"build","qualname":"<GridBuilder<B>>::build","value":"pub fn build(&Self) -> Grid<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Grid`] instance, built accordingly to the specified [`strategy`]\n using the parameters inferred from observations in [`from_array`].","sig":null,"attributes":[{"value":"/ Returns a [`Grid`] instance, built accordingly to the specified [`strategy`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65759,"byte_end":65839,"line_start":184,"line_end":184,"column_start":5,"column_end":85}},{"value":"/ using the parameters inferred from observations in [`from_array`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65844,"byte_end":65914,"line_start":185,"line_end":185,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65919,"byte_end":65922,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [`Grid`]: struct.Grid.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65927,"byte_end":65957,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ [`strategy`]: strategies/index.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":65962,"byte_end":66001,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ [`from_array`]: #method.from_array.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":66006,"byte_end":66049,"line_start":189,"line_end":189,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":276},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66358,"byte_end":66367,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"Histogram","qualname":"::histogram::histograms::Histogram","value":"Histogram {  }","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"decl_id":null,"docs":" Histogram data structure.\n","sig":null,"attributes":[{"value":"/ Histogram data structure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66317,"byte_end":66346,"line_start":6,"line_end":6,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66571,"byte_end":66574,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Histogram<A>>::new","value":"pub fn new(Grid<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new instance of Histogram given a [`Grid`].","sig":null,"attributes":[{"value":"/ Returns a new instance of Histogram given a [`Grid`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66459,"byte_end":66516,"line_start":13,"line_end":13,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66521,"byte_end":66524,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ [`Grid`]: struct.Grid.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66529,"byte_end":66559,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67640,"byte_end":67655,"line_start":48,"line_end":48,"column_start":12,"column_end":27},"name":"add_observation","qualname":"<Histogram<A>>::add_observation","value":"pub fn add_observation<S>(&mut Self, &ArrayBase<S, Ix1>)\n-> Result<(), BinNotFound> where S: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Adds a single observation to the histogram.","sig":null,"attributes":[{"value":"/ Adds a single observation to the histogram.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66696,"byte_end":66743,"line_start":21,"line_end":21,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66748,"byte_end":66751,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ **Panics** if dimensions do not match: `self.ndim() != observation.len()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66756,"byte_end":66834,"line_start":23,"line_end":23,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66839,"byte_end":66842,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66847,"byte_end":66861,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66866,"byte_end":66873,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66878,"byte_end":66901,"line_start":27,"line_end":27,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::histogram::{Edges, Bins, Histogram, Grid};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66906,"byte_end":66971,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"/ use noisy_float::types::n64;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66976,"byte_end":67008,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67013,"byte_end":67016,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ let edges = Edges::from(vec![n64(-1.), n64(0.), n64(1.)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67021,"byte_end":67083,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/ let bins = Bins::new(edges);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67088,"byte_end":67120,"line_start":32,"line_end":32,"column_start":5,"column_end":37}},{"value":"/ let square_grid = Grid::from(vec![bins.clone(), bins.clone()]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67125,"byte_end":67192,"line_start":33,"line_end":33,"column_start":5,"column_end":72}},{"value":"/ let mut histogram = Histogram::new(square_grid);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67197,"byte_end":67249,"line_start":34,"line_end":34,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67254,"byte_end":67257,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let observation = array![n64(0.5), n64(0.6)];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67262,"byte_end":67311,"line_start":36,"line_end":36,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67316,"byte_end":67319,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ histogram.add_observation(&observation)?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67324,"byte_end":67369,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67374,"byte_end":67377,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let histogram_matrix = histogram.counts();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67382,"byte_end":67428,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/ let expected = array![","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67433,"byte_end":67459,"line_start":41,"line_end":41,"column_start":5,"column_end":31}},{"value":"/     [0, 0],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67464,"byte_end":67479,"line_start":42,"line_end":42,"column_start":5,"column_end":20}},{"value":"/     [0, 1],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67484,"byte_end":67499,"line_start":43,"line_end":43,"column_start":5,"column_end":20}},{"value":"/ ];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67504,"byte_end":67510,"line_start":44,"line_end":44,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(histogram_matrix, expected.into_dyn());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67515,"byte_end":67569,"line_start":45,"line_end":45,"column_start":5,"column_end":59}},{"value":"/ # Ok::<(), Box<std::error::Error>>(())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67574,"byte_end":67616,"line_start":46,"line_end":46,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67621,"byte_end":67628,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68085,"byte_end":68089,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"ndim","qualname":"<Histogram<A>>::ndim","value":"pub fn ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions of the space the histogram is covering.\n","sig":null,"attributes":[{"value":"/ Returns the number of dimensions of the space the histogram is covering.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":67997,"byte_end":68073,"line_start":61,"line_end":61,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68272,"byte_end":68278,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"counts","qualname":"<Histogram<A>>::counts","value":"pub fn counts(&Self) -> ArrayViewD<, usize>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a view on the histogram counts matrix.\n","sig":null,"attributes":[{"value":"/ Borrows a view on the histogram counts matrix.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68210,"byte_end":68260,"line_start":67,"line_end":67,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68420,"byte_end":68424,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"grid","qualname":"<Histogram<A>>::grid","value":"pub fn grid(&Self) -> &Grid<A>","parent":null,"children":[],"decl_id":null,"docs":" Borrows an immutable reference to the histogram grid.\n","sig":null,"attributes":[{"value":"/ Borrows an immutable reference to the histogram grid.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68351,"byte_end":68408,"line_start":72,"line_end":72,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":288},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68561,"byte_end":68573,"line_start":79,"line_end":79,"column_start":11,"column_end":23},"name":"HistogramExt","qualname":"::histogram::histograms::HistogramExt","value":"HistogramExt<A, S>","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":983}],"decl_id":null,"docs":" Extension trait for `ArrayBase` providing methods to compute histograms.\n","sig":null,"attributes":[{"value":"/ Extension trait for `ArrayBase` providing methods to compute histograms.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68474,"byte_end":68550,"line_start":78,"line_end":78,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70466,"byte_end":70475,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"histogram","qualname":"::histogram::histograms::HistogramExt::histogram","value":"pub fn histogram(&Self, Grid<A>) -> Histogram<A> where A: Ord","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Returns the [histogram](https://en.wikipedia.org/wiki/Histogram)\n for a 2-dimensional array of points `M`.","sig":null,"attributes":[{"value":"/ Returns the [histogram](https://en.wikipedia.org/wiki/Histogram)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68615,"byte_end":68683,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/ for a 2-dimensional array of points `M`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68688,"byte_end":68732,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68737,"byte_end":68740,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Let `(n, d)` be the shape of `M`:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68745,"byte_end":68782,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ - `n` is the number of points;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68787,"byte_end":68821,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/ - `d` is the number of dimensions of the space those points belong to.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68826,"byte_end":68900,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ It follows that every column in `M` is a `d`-dimensional point.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68905,"byte_end":68972,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68977,"byte_end":68980,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example: a (3, 4) matrix `M` is a collection of 3 points in a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":68985,"byte_end":69054,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/ 4-dimensional space.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69059,"byte_end":69083,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69088,"byte_end":69091,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Important: points outside the grid are ignored!","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69096,"byte_end":69147,"line_start":94,"line_end":94,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69152,"byte_end":69155,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `d` is different from `grid.ndim()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69160,"byte_end":69214,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69219,"byte_end":69222,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69227,"byte_end":69241,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69246,"byte_end":69249,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69254,"byte_end":69261,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69266,"byte_end":69289,"line_start":101,"line_end":101,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::{","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69294,"byte_end":69318,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     HistogramExt,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69323,"byte_end":69344,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     histogram::{","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69349,"byte_end":69369,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"/         Histogram, Grid, GridBuilder,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69374,"byte_end":69415,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/         Edges, Bins,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69420,"byte_end":69444,"line_start":106,"line_end":106,"column_start":5,"column_end":29}},{"value":"/         strategies::Sqrt},","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69449,"byte_end":69479,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/ };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69484,"byte_end":69490,"line_start":108,"line_end":108,"column_start":5,"column_end":11}},{"value":"/ use noisy_float::types::{N64, n64};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69495,"byte_end":69534,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69539,"byte_end":69542,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let observations = array![","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69547,"byte_end":69577,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/     [n64(1.), n64(0.5)],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69582,"byte_end":69610,"line_start":112,"line_end":112,"column_start":5,"column_end":33}},{"value":"/     [n64(-0.5), n64(1.)],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69615,"byte_end":69644,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/     [n64(-1.), n64(-0.5)],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69649,"byte_end":69679,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/     [n64(0.5), n64(-1.)]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69684,"byte_end":69712,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ ];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69717,"byte_end":69723,"line_start":116,"line_end":116,"column_start":5,"column_end":11}},{"value":"/ let grid = GridBuilder::<Sqrt<N64>>::from_array(&observations).unwrap().build();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69728,"byte_end":69812,"line_start":117,"line_end":117,"column_start":5,"column_end":89}},{"value":"/ let expected_grid = Grid::from(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69817,"byte_end":69852,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/     vec![","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69857,"byte_end":69870,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/         Bins::new(Edges::from(vec![n64(-1.), n64(0.), n64(1.), n64(2.)])),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69875,"byte_end":69953,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/         Bins::new(Edges::from(vec![n64(-1.), n64(0.), n64(1.), n64(2.)])),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":69958,"byte_end":70036,"line_start":121,"line_end":121,"column_start":5,"column_end":83}},{"value":"/     ]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70041,"byte_end":70050,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70055,"byte_end":70061,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(grid, expected_grid);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70066,"byte_end":70102,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70107,"byte_end":70110,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let histogram = observations.histogram(grid);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70115,"byte_end":70164,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70169,"byte_end":70172,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let histogram_matrix = histogram.counts();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70177,"byte_end":70223,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/ // Bins are left inclusive, right exclusive!","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70228,"byte_end":70276,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ let expected = array![","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70281,"byte_end":70307,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/     [1, 0, 1],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70312,"byte_end":70330,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/     [1, 0, 0],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70335,"byte_end":70353,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/     [0, 1, 0],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70358,"byte_end":70376,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70381,"byte_end":70387,"line_start":134,"line_end":134,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(histogram_matrix, expected.into_dyn());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70392,"byte_end":70446,"line_start":135,"line_end":135,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70451,"byte_end":70458,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":296},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strategies","qualname":"::histogram::strategies","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":1327},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":985},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":361},{"krate":0,"index":365},{"krate":0,"index":372},{"krate":0,"index":375}],"decl_id":null,"docs":" Strategies to build [`Bins`]s and [`Grid`]s (using [`GridBuilder`]) inferring\n optimal parameters directly from data.","sig":null,"attributes":[{"value":"/ Strategies to build [`Bins`]s and [`Grid`]s (using [`GridBuilder`]) inferring","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":70928,"byte_end":71009,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ optimal parameters directly from data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71010,"byte_end":71052,"line_start":2,"line_end":2,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71053,"byte_end":71056,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The docs for each strategy have been taken almost verbatim from [`NumPy`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71057,"byte_end":71135,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71136,"byte_end":71139,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Each strategy specifies how to compute the optimal number of [`Bins`] or","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71140,"byte_end":71216,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ the optimal bin width.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71217,"byte_end":71243,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"/ For those strategies that prescribe the optimal number","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71244,"byte_end":71302,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/ of [`Bins`] we then compute the optimal bin width with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71303,"byte_end":71361,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71362,"byte_end":71365,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `bin_width = (max - min)/n`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71366,"byte_end":71397,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71398,"byte_end":71401,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ All our bins are left-inclusive and right-exclusive: we make sure to add an extra bin","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71402,"byte_end":71491,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ if it is necessary to include the maximum value of the array that has been passed as argument","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71492,"byte_end":71589,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ to the `from_array` method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71590,"byte_end":71621,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71622,"byte_end":71625,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Bins`]: ../struct.Bins.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71626,"byte_end":71659,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Grid`]: ../struct.Grid.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71660,"byte_end":71693,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ [`GridBuilder`]: ../struct.GridBuilder.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71694,"byte_end":71741,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ [`NumPy`]: https://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram_bin_edges.html#numpy.histogram_bin_edges","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":71742,"byte_end":71866,"line_start":20,"line_end":20,"column_start":1,"column_end":125}}]},{"kind":"Trait","id":{"krate":0,"index":312},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72517,"byte_end":72537,"line_start":40,"line_end":40,"column_start":11,"column_end":31},"name":"BinsBuildingStrategy","qualname":"::histogram::strategies::BinsBuildingStrategy","value":"BinsBuildingStrategy","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317}],"decl_id":null,"docs":" A trait implemented by all strategies to build [`Bins`]\n with parameters inferred from observations.","sig":null,"attributes":[{"value":"/ A trait implemented by all strategies to build [`Bins`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72137,"byte_end":72196,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ with parameters inferred from observations.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72197,"byte_end":72244,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72245,"byte_end":72248,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ A `BinsBuildingStrategy` is required by [`GridBuilder`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72249,"byte_end":72308,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/ to know how to build a [`Grid`]'s projections on the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72309,"byte_end":72365,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ coordinate axes.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72366,"byte_end":72386,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72387,"byte_end":72390,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`Bins`]: ../struct.Bins.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72391,"byte_end":72424,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ [`Grid`]: ../struct.Grid.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72425,"byte_end":72458,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ [`GridBuilder`]: ../struct.GridBuilder.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72459,"byte_end":72506,"line_start":39,"line_end":39,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":313},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72549,"byte_end":72553,"line_start":41,"line_end":41,"column_start":10,"column_end":14},"name":"Elem","qualname":"::histogram::strategies::BinsBuildingStrategy::Elem","value":"type Elem: Ord;","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72944,"byte_end":72954,"line_start":49,"line_end":49,"column_start":8,"column_end":18},"name":"from_array","qualname":"::histogram::strategies::BinsBuildingStrategy::from_array","value":"pub fn from_array<S>(&ArrayBase<S, Ix1>) -> Result<Self, BinsBuildError> where\nS: Data<Elem = Self::Elem>, Self: std::marker::Sized","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Given some observations in a 1-dimensional array it returns a `BinsBuildingStrategy`\n that has learned the required parameter to build a collection of [`Bins`].","sig":null,"attributes":[{"value":"/ Given some observations in a 1-dimensional array it returns a `BinsBuildingStrategy`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72564,"byte_end":72652,"line_start":42,"line_end":42,"column_start":5,"column_end":93}},{"value":"/ that has learned the required parameter to build a collection of [`Bins`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72657,"byte_end":72735,"line_start":43,"line_end":43,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72740,"byte_end":72743,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It returns `Err` if it is not possible to build a collection of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72748,"byte_end":72815,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ [`Bins`] given the observed data according to the chosen strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72820,"byte_end":72890,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72895,"byte_end":72898,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [`Bins`]: ../struct.Bins.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":72903,"byte_end":72936,"line_start":48,"line_end":48,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73326,"byte_end":73331,"line_start":59,"line_end":59,"column_start":8,"column_end":13},"name":"build","qualname":"::histogram::strategies::BinsBuildingStrategy::build","value":"pub fn build(&Self) -> Bins<Self::Elem>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Returns a [`Bins`] instance, built accordingly to the parameters\n inferred from observations in [`from_array`].","sig":null,"attributes":[{"value":"/ Returns a [`Bins`] instance, built accordingly to the parameters","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73102,"byte_end":73170,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ inferred from observations in [`from_array`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73175,"byte_end":73224,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73229,"byte_end":73232,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`Bins`]: ../struct.Bins.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73237,"byte_end":73270,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/ [`from_array`]: #method.from_array.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73275,"byte_end":73318,"line_start":58,"line_end":58,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73550,"byte_end":73556,"line_start":65,"line_end":65,"column_start":8,"column_end":14},"name":"n_bins","qualname":"::histogram::strategies::BinsBuildingStrategy::n_bins","value":"pub fn n_bins(&Self) -> usize","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Returns the optimal number of bins, according to the parameters\n inferred from observations in [`from_array`].","sig":null,"attributes":[{"value":"/ Returns the optimal number of bins, according to the parameters","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73365,"byte_end":73432,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"/ inferred from observations in [`from_array`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73437,"byte_end":73486,"line_start":62,"line_end":62,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73491,"byte_end":73494,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [`from_array`]: #method.from_array.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73499,"byte_end":73542,"line_start":64,"line_end":64,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":993},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73879,"byte_end":73883,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"Sqrt","qualname":"::histogram::strategies::Sqrt","value":"Sqrt {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" Square root (of data size) strategy, used by Excel and other programs\n for its speed and simplicity.","sig":null,"attributes":[{"value":"/ Square root (of data size) strategy, used by Excel and other programs","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73662,"byte_end":73735,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ for its speed and simplicity.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73736,"byte_end":73769,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73770,"byte_end":73773,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Let `n` be the number of observations. Then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73774,"byte_end":73821,"line_start":78,"line_end":78,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73822,"byte_end":73825,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ `n_bins` = `sqrt(n)`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73826,"byte_end":73850,"line_start":80,"line_end":80,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74346,"byte_end":74350,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"Rice","qualname":"::histogram::strategies::Rice","value":"Rice {  }","parent":null,"children":[{"krate":0,"index":1001}],"decl_id":null,"docs":" A strategy that does not take variability into account, only data size. Commonly\n overestimates number of bins required.","sig":null,"attributes":[{"value":"/ A strategy that does not take variability into account, only data size. Commonly","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":73920,"byte_end":74004,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/ overestimates number of bins required.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74005,"byte_end":74047,"line_start":87,"line_end":87,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74048,"byte_end":74051,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Let `n` be the number of observations and `n_bins` the number of bins.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74052,"byte_end":74126,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74127,"byte_end":74130,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ `n_bins` = 2`n`<sup>1/3</sup>","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74131,"byte_end":74164,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74165,"byte_end":74168,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ `n_bins` is only proportional to cube root of `n`. It tends to overestimate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74169,"byte_end":74248,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ the `n_bins` and it does not take into account data variability.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74249,"byte_end":74317,"line_start":94,"line_end":94,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74836,"byte_end":74843,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"Sturges","qualname":"::histogram::strategies::Sturges","value":"Sturges {  }","parent":null,"children":[{"krate":0,"index":1007}],"decl_id":null,"docs":" R’s default strategy, only accounts for data size. Only optimal for gaussian data and\n underestimates number of bins for large non-gaussian datasets.","sig":null,"attributes":[{"value":"/ R’s default strategy, only accounts for data size. Only optimal for gaussian data and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74387,"byte_end":74478,"line_start":100,"line_end":100,"column_start":1,"column_end":90}},{"value":"/ underestimates number of bins for large non-gaussian datasets.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74479,"byte_end":74545,"line_start":101,"line_end":101,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74546,"byte_end":74549,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Let `n` be the number of observations.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74550,"byte_end":74592,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/ The number of bins is 1 plus the base 2 log of `n`. This estimator assumes normality of data and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74593,"byte_end":74693,"line_start":104,"line_end":104,"column_start":1,"column_end":101}},{"value":"/ is too conservative for larger, non-normal datasets.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74694,"byte_end":74750,"line_start":105,"line_end":105,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74751,"byte_end":74754,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This is the default method in R’s hist method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74755,"byte_end":74807,"line_start":107,"line_end":107,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75446,"byte_end":75462,"line_start":128,"line_end":128,"column_start":12,"column_end":28},"name":"FreedmanDiaconis","qualname":"::histogram::strategies::FreedmanDiaconis","value":"FreedmanDiaconis {  }","parent":null,"children":[{"krate":0,"index":1013}],"decl_id":null,"docs":" Robust (resilient to outliers) strategy that takes into\n account data variability and data size.","sig":null,"attributes":[{"value":"/ Robust (resilient to outliers) strategy that takes into","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74880,"byte_end":74939,"line_start":113,"line_end":113,"column_start":1,"column_end":60}},{"value":"/ account data variability and data size.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74940,"byte_end":74983,"line_start":114,"line_end":114,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74984,"byte_end":74987,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Let `n` be the number of observations.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":74988,"byte_end":75030,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75031,"byte_end":75034,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ `bin_width` = 2×`IQR`×`n`<sup>−1/3</sup>","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75035,"byte_end":75083,"line_start":118,"line_end":118,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75084,"byte_end":75087,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The bin width is proportional to the interquartile range ([`IQR`]) and inversely proportional to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75088,"byte_end":75188,"line_start":120,"line_end":120,"column_start":1,"column_end":101}},{"value":"/ cube root of `n`. It can be too conservative for small datasets, but it is quite good for","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75189,"byte_end":75282,"line_start":121,"line_end":121,"column_start":1,"column_end":94}},{"value":"/ large datasets.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75283,"byte_end":75302,"line_start":122,"line_end":122,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75303,"byte_end":75306,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The [`IQR`] is very robust to outliers.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75307,"byte_end":75350,"line_start":124,"line_end":124,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75351,"byte_end":75354,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`IQR`]: https://en.wikipedia.org/wiki/Interquartile_range","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75355,"byte_end":75417,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":76154,"byte_end":76158,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"Auto","qualname":"::histogram::strategies::Auto","value":"Auto {  }","parent":null,"children":[{"krate":0,"index":1030}],"decl_id":null,"docs":" Maximum of the [`Sturges`] and [`FreedmanDiaconis`] strategies.\n Provides good all around performance.","sig":null,"attributes":[{"value":"/ Maximum of the [`Sturges`] and [`FreedmanDiaconis`] strategies.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75609,"byte_end":75676,"line_start":138,"line_end":138,"column_start":1,"column_end":68}},{"value":"/ Provides good all around performance.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75677,"byte_end":75718,"line_start":139,"line_end":139,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75719,"byte_end":75722,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ A compromise to get a good value. For small datasets the [`Sturges`] value will usually be chosen,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75723,"byte_end":75825,"line_start":141,"line_end":141,"column_start":1,"column_end":103}},{"value":"/ while larger datasets will usually default to [`FreedmanDiaconis`]. Avoids the overly","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75826,"byte_end":75915,"line_start":142,"line_end":142,"column_start":1,"column_end":90}},{"value":"/ conservative behaviour of [`FreedmanDiaconis`] and [`Sturges`] for","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75916,"byte_end":75986,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ small and large datasets respectively.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":75987,"byte_end":76029,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":76030,"byte_end":76033,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`Sturges`]: struct.Sturges.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":76034,"byte_end":76070,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/ [`FreedmanDiaconis`]: struct.FreedmanDiaconis.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":76071,"byte_end":76125,"line_start":147,"line_end":147,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":78438,"byte_end":78447,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"bin_width","qualname":"<Sqrt<T>>::bin_width","value":"pub fn bin_width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The bin width (or bin length) according to the fitted strategy.\n","sig":null,"attributes":[{"value":"/ The bin width (or bin length) according to the fitted strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":78359,"byte_end":78426,"line_start":231,"line_end":231,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":79585,"byte_end":79594,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"bin_width","qualname":"<Rice<T>>::bin_width","value":"pub fn bin_width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The bin width (or bin length) according to the fitted strategy.\n","sig":null,"attributes":[{"value":"/ The bin width (or bin length) according to the fitted strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":79506,"byte_end":79573,"line_start":272,"line_end":272,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":80728,"byte_end":80737,"line_start":314,"line_end":314,"column_start":12,"column_end":21},"name":"bin_width","qualname":"<Sturges<T>>::bin_width","value":"pub fn bin_width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The bin width (or bin length) according to the fitted strategy.\n","sig":null,"attributes":[{"value":"/ The bin width (or bin length) according to the fitted strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":80649,"byte_end":80716,"line_start":313,"line_end":313,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":82380,"byte_end":82389,"line_start":369,"line_end":369,"column_start":12,"column_end":21},"name":"bin_width","qualname":"<FreedmanDiaconis<T>>::bin_width","value":"pub fn bin_width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The bin width (or bin length) according to the fitted strategy.\n","sig":null,"attributes":[{"value":"/ The bin width (or bin length) according to the fitted strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":82301,"byte_end":82368,"line_start":368,"line_end":368,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":84345,"byte_end":84354,"line_start":432,"line_end":432,"column_start":12,"column_end":21},"name":"bin_width","qualname":"<Auto<T>>::bin_width","value":"pub fn bin_width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The bin width (or bin length) according to the fitted strategy.\n","sig":null,"attributes":[{"value":"/ The bin width (or bin length) according to the fitted strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":84266,"byte_end":84333,"line_start":431,"line_end":431,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":387},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":87913,"byte_end":87921,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"MaybeNan","qualname":"::maybe_nan::MaybeNan","value":"MaybeNan: Sized","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" A number type that can have not-a-number values.\n","sig":null,"attributes":[{"value":"/ A number type that can have not-a-number values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":87850,"byte_end":87902,"line_start":5,"line_end":5,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":388},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":87997,"byte_end":88003,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"NotNan","qualname":"::maybe_nan::MaybeNan::NotNan","value":"type NotNan;","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" A type that is guaranteed not to be a NaN value.\n","sig":null,"attributes":[{"value":"/ A type that is guaranteed not to be a NaN value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":87935,"byte_end":87987,"line_start":7,"line_end":7,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88065,"byte_end":88071,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::maybe_nan::MaybeNan::is_nan","value":"pub fn is_nan(&Self) -> bool","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Returns `true` if the value is a NaN value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the value is a NaN value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88010,"byte_end":88057,"line_start":10,"line_end":10,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88204,"byte_end":88218,"line_start":16,"line_end":16,"column_start":8,"column_end":22},"name":"try_as_not_nan","qualname":"::maybe_nan::MaybeNan::try_as_not_nan","value":"pub fn try_as_not_nan(&Self) -> Option<&Self::NotNan>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Tries to convert the value to `NotNan`.","sig":null,"attributes":[{"value":"/ Tries to convert the value to `NotNan`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88093,"byte_end":88136,"line_start":13,"line_end":13,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88141,"byte_end":88144,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the value is a NaN value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88149,"byte_end":88196,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88353,"byte_end":88365,"line_start":21,"line_end":21,"column_start":8,"column_end":20},"name":"from_not_nan","qualname":"::maybe_nan::MaybeNan::from_not_nan","value":"pub fn from_not_nan(Self::NotNan) -> Self","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Converts the value.","sig":null,"attributes":[{"value":"/ Converts the value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88257,"byte_end":88280,"line_start":18,"line_end":18,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88285,"byte_end":88288,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ If the value is `None`, a NaN value is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88293,"byte_end":88345,"line_start":20,"line_end":20,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88493,"byte_end":88509,"line_start":26,"line_end":26,"column_start":8,"column_end":24},"name":"from_not_nan_opt","qualname":"::maybe_nan::MaybeNan::from_not_nan_opt","value":"pub fn from_not_nan_opt(Option<Self::NotNan>) -> Self","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Converts the value.","sig":null,"attributes":[{"value":"/ Converts the value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88397,"byte_end":88420,"line_start":23,"line_end":23,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88425,"byte_end":88428,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If the value is `None`, a NaN value is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88433,"byte_end":88485,"line_start":25,"line_end":25,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88645,"byte_end":88665,"line_start":31,"line_end":31,"column_start":8,"column_end":28},"name":"from_not_nan_ref_opt","qualname":"::maybe_nan::MaybeNan::from_not_nan_ref_opt","value":"pub fn from_not_nan_ref_opt(Option<&Self::NotNan>) -> &Self","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Converts the value.","sig":null,"attributes":[{"value":"/ Converts the value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88549,"byte_end":88572,"line_start":28,"line_end":28,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88577,"byte_end":88580,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the value is `None`, a NaN value is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88585,"byte_end":88637,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":89022,"byte_end":89036,"line_start":39,"line_end":39,"column_start":8,"column_end":22},"name":"remove_nan_mut","qualname":"::maybe_nan::MaybeNan::remove_nan_mut","value":"pub fn remove_nan_mut(ArrayViewMut1<, Self>) -> ArrayViewMut1<, Self::NotNan>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Returns a view with the NaN values removed.","sig":null,"attributes":[{"value":"/ Returns a view with the NaN values removed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88707,"byte_end":88754,"line_start":33,"line_end":33,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88759,"byte_end":88762,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This modifies the input view by moving elements as necessary. The final","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88767,"byte_end":88842,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ order of the elements is unspecified. However, this method is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88847,"byte_end":88912,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/ idempotent, and given the same input data, the result is always ordered","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88917,"byte_end":88992,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/ the same way.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":88997,"byte_end":89014,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":93915,"byte_end":93922,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"NotNone","qualname":"::maybe_nan::NotNone","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around `Option` that guarantees that the value is not\n `None`.\n","sig":null,"attributes":[{"value":"/ A thin wrapper around `Option` that guarantees that the value is not","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":93768,"byte_end":93840,"line_start":180,"line_end":180,"column_start":1,"column_end":73}},{"value":"/ `None`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":93841,"byte_end":93852,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"repr(transparent)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":93883,"byte_end":93903,"line_start":183,"line_end":183,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94031,"byte_end":94034,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<NotNone<T>>::new","value":"pub fn new(T) -> NotNone<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `NotNone` containing the given value.\n","sig":null,"attributes":[{"value":"/ Creates a new `NotNone` containing the given value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":93964,"byte_end":94019,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94221,"byte_end":94228,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"try_new","qualname":"<NotNone<T>>::try_new","value":"pub fn try_new(Option<T>) -> Option<NotNone<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `NotNone` containing the given value.","sig":null,"attributes":[{"value":"/ Creates a new `NotNone` containing the given value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94101,"byte_end":94156,"line_start":192,"line_end":192,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94161,"byte_end":94164,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `value` is `None`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94169,"byte_end":94209,"line_start":194,"line_end":194,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94433,"byte_end":94443,"line_start":204,"line_end":204,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<NotNone<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underling option.\n","sig":null,"attributes":[{"value":"/ Returns the underling option.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94388,"byte_end":94421,"line_start":203,"line_end":203,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94603,"byte_end":94609,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<NotNone<T>>::unwrap","value":"pub fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Moves the value out of the inner option.","sig":null,"attributes":[{"value":"/ Moves the value out of the inner option.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94491,"byte_end":94535,"line_start":208,"line_end":208,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94540,"byte_end":94543,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This method is guaranteed not to panic.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94548,"byte_end":94591,"line_start":210,"line_end":210,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94877,"byte_end":94880,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"map","qualname":"<NotNone<T>>::map","value":"pub fn map<U, F>(Self, F) -> NotNone<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps an `NotNone<T>` to `NotNone<U>` by applying a function to the\n contained value.\n","sig":null,"attributes":[{"value":"/ Maps an `NotNone<T>` to `NotNone<U>` by applying a function to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94770,"byte_end":94840,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"/ contained value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":94845,"byte_end":94865,"line_start":219,"line_end":219,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":408},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95087,"byte_end":95098,"line_start":229,"line_end":229,"column_start":11,"column_end":22},"name":"MaybeNanExt","qualname":"::maybe_nan::MaybeNanExt","value":"MaybeNanExt<A, S, D>","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":1170}],"decl_id":null,"docs":" Extension trait for `ArrayBase` providing NaN-related functionality.\n","sig":null,"attributes":[{"value":"/ Extension trait for `ArrayBase` providing NaN-related functionality.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95004,"byte_end":95076,"line_start":228,"line_end":228,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95339,"byte_end":95351,"line_start":239,"line_end":239,"column_start":8,"column_end":20},"name":"fold_skipnan","qualname":"::maybe_nan::MaybeNanExt::fold_skipnan","value":"pub fn fold_skipnan<'a, F, B>(&'a Self, B, F) -> B where A: 'a,\nF: FnMut(B, &'a A::NotNan) -> B","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Traverse the non-NaN array elements and apply a fold, returning the\n resulting value.","sig":null,"attributes":[{"value":"/ Traverse the non-NaN array elements and apply a fold, returning the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95178,"byte_end":95249,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ resulting value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95254,"byte_end":95274,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95279,"byte_end":95282,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95287,"byte_end":95331,"line_start":238,"line_end":238,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95636,"byte_end":95656,"line_start":248,"line_end":248,"column_start":8,"column_end":28},"name":"indexed_fold_skipnan","qualname":"::maybe_nan::MaybeNanExt::indexed_fold_skipnan","value":"pub fn indexed_fold_skipnan<'a, F, B>(&'a Self, B, F) -> B where A: 'a,\nF: FnMut(B, (D::Pattern, &'a A::NotNan)) -> B","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Traverse the non-NaN elements and their indices and apply a fold,\n returning the resulting value.","sig":null,"attributes":[{"value":"/ Traverse the non-NaN elements and their indices and apply a fold,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95463,"byte_end":95532,"line_start":244,"line_end":244,"column_start":5,"column_end":74}},{"value":"/ returning the resulting value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95537,"byte_end":95571,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95576,"byte_end":95579,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95584,"byte_end":95628,"line_start":247,"line_end":247,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95922,"byte_end":95935,"line_start":256,"line_end":256,"column_start":8,"column_end":21},"name":"visit_skipnan","qualname":"::maybe_nan::MaybeNanExt::visit_skipnan","value":"pub fn visit_skipnan<'a, F>(&'a Self, F) where A: 'a, F: FnMut(&'a A::NotNan)\n-> ()","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Visit each non-NaN element in the array by calling `f` on each element.","sig":null,"attributes":[{"value":"/ Visit each non-NaN element in the array by calling `f` on each element.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95782,"byte_end":95857,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95862,"byte_end":95865,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":95870,"byte_end":95914,"line_start":255,"line_end":255,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96203,"byte_end":96220,"line_start":265,"line_end":265,"column_start":8,"column_end":25},"name":"fold_axis_skipnan","qualname":"::maybe_nan::MaybeNanExt::fold_axis_skipnan","value":"pub fn fold_axis_skipnan<B, F>(&Self, Axis, B, F) -> Array<B, D::Smaller>\nwhere D: RemoveAxis, F: FnMut(&B, &A::NotNan) -> B, B: Clone","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Fold non-NaN values along an axis.","sig":null,"attributes":[{"value":"/ Fold non-NaN values along an axis.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96022,"byte_end":96060,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96065,"byte_end":96068,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Combine the non-NaN elements of each subview with the previous using","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96073,"byte_end":96145,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ the fold function and initial value init.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96150,"byte_end":96195,"line_start":264,"line_end":264,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":97052,"byte_end":97072,"line_start":286,"line_end":286,"column_start":8,"column_end":28},"name":"map_axis_skipnan_mut","qualname":"::maybe_nan::MaybeNanExt::map_axis_skipnan_mut","value":"pub fn map_axis_skipnan_mut<'a, B, F>(&'a mut Self, Axis, F)\n-> Array<B, D::Smaller> where A: 'a, S: DataMut, D: RemoveAxis,\nF: FnMut(ArrayViewMut1) -> B","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96383,"byte_end":96455,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96460,"byte_end":96494,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96499,"byte_end":96502,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The NaN values are removed from the 1-dimensional lanes, then they are","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96507,"byte_end":96581,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ passed as mutable views to the reducer, allowing for side-effects.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96586,"byte_end":96656,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96661,"byte_end":96664,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ **Warnings**:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96669,"byte_end":96686,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96691,"byte_end":96694,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ * The lanes are visited in arbitrary order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96699,"byte_end":96746,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96751,"byte_end":96754,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ * The order of the elements within the lanes is unspecified. However,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96759,"byte_end":96832,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/   if `mapping` is idempotent, this method is idempotent. Additionally,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96837,"byte_end":96911,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/   given the same input data, the lane is always ordered the same way.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96916,"byte_end":96989,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":96994,"byte_end":96997,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":97002,"byte_end":97044,"line_start":285,"line_end":285,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":577},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106284,"byte_end":106295,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"QuantileExt","qualname":"::quantile::QuantileExt","value":"QuantileExt<A, S, D>","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":1172}],"decl_id":null,"docs":" Quantile methods for `ArrayBase`.\n","sig":null,"attributes":[{"value":"/ Quantile methods for `ArrayBase`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106236,"byte_end":106273,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107191,"byte_end":107197,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"argmin","qualname":"::quantile::QuantileExt::argmin","value":"pub fn argmin(&Self) -> Result<D::Pattern, MinMaxError> where A: PartialOrd","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the index of the minimum value of the array.","sig":null,"attributes":[{"value":"/ Finds the index of the minimum value of the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106358,"byte_end":106412,"line_start":17,"line_end":17,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106417,"byte_end":106420,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(MinMaxError::UndefinedOrder)` if any of the pairwise","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106425,"byte_end":106494,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ orderings tested by the function are undefined. (For example, this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106499,"byte_end":106569,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ occurs if there are any floating-point NaN values in the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106574,"byte_end":106642,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106647,"byte_end":106650,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(MinMaxError::EmptyInput)` if the array is empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106655,"byte_end":106720,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106725,"byte_end":106728,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are minima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106733,"byte_end":106806,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ index is returned. (Which one is returned is unspecified and may depend","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106811,"byte_end":106886,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ on the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106891,"byte_end":106930,"line_start":27,"line_end":27,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106935,"byte_end":106938,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106943,"byte_end":106956,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106961,"byte_end":106964,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106969,"byte_end":106976,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":106981,"byte_end":107004,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::QuantileExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107009,"byte_end":107044,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107049,"byte_end":107052,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let a = array![[1., 3., 5.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107057,"byte_end":107089,"line_start":35,"line_end":35,"column_start":5,"column_end":37}},{"value":"/                [2., 0., 6.]];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107094,"byte_end":107127,"line_start":36,"line_end":36,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.argmin(), Ok((1, 1)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107132,"byte_end":107171,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107176,"byte_end":107183,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107971,"byte_end":107985,"line_start":62,"line_end":62,"column_start":8,"column_end":22},"name":"argmin_skipnan","qualname":"::quantile::QuantileExt::argmin_skipnan","value":"pub fn argmin_skipnan(&Self) -> Result<D::Pattern, EmptyInput> where\nA: MaybeNan, A::NotNan: Ord","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the index of the minimum value of the array skipping NaN values.","sig":null,"attributes":[{"value":"/ Finds the index of the minimum value of the array skipping NaN values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107278,"byte_end":107352,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107357,"byte_end":107360,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(EmptyInput)` if the array is empty or none of the values in the array","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107365,"byte_end":107451,"line_start":45,"line_end":45,"column_start":5,"column_end":91}},{"value":"/ are non-NaN values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107456,"byte_end":107479,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107484,"byte_end":107487,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are minima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107492,"byte_end":107565,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ index is returned. (Which one is returned is unspecified and may depend","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107570,"byte_end":107645,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ on the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107650,"byte_end":107689,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107694,"byte_end":107697,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107702,"byte_end":107715,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107720,"byte_end":107723,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107728,"byte_end":107735,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107740,"byte_end":107763,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::QuantileExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107768,"byte_end":107803,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107808,"byte_end":107811,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let a = array![[::std::f64::NAN, 3., 5.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107816,"byte_end":107861,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/                [2., 0., 6.]];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107866,"byte_end":107899,"line_start":59,"line_end":59,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.argmin_skipnan(), Ok((1, 1)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107904,"byte_end":107951,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":107956,"byte_end":107963,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108654,"byte_end":108657,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"min","qualname":"::quantile::QuantileExt::min","value":"pub fn min(&Self) -> Result<&A, MinMaxError> where A: PartialOrd","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the elementwise minimum of the array.","sig":null,"attributes":[{"value":"/ Finds the elementwise minimum of the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108087,"byte_end":108134,"line_start":67,"line_end":67,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108139,"byte_end":108142,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(MinMaxError::UndefinedOrder)` if any of the pairwise","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108147,"byte_end":108216,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ orderings tested by the function are undefined. (For example, this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108221,"byte_end":108291,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ occurs if there are any floating-point NaN values in the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108296,"byte_end":108364,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108369,"byte_end":108372,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(MinMaxError::EmptyInput)` if the array is empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108377,"byte_end":108442,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108447,"byte_end":108450,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are minima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108455,"byte_end":108528,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ is returned. (Which one is returned is unspecified and may depend on","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108533,"byte_end":108605,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108610,"byte_end":108646,"line_start":77,"line_end":77,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109196,"byte_end":109207,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"min_skipnan","qualname":"::quantile::QuantileExt::min_skipnan","value":"pub fn min_skipnan(&Self) -> &A where A: MaybeNan, A::NotNan: Ord","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the elementwise minimum of the array, skipping NaN values.","sig":null,"attributes":[{"value":"/ Finds the elementwise minimum of the array, skipping NaN values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108730,"byte_end":108798,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108803,"byte_end":108806,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are minima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108811,"byte_end":108884,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ is returned. (Which one is returned is unspecified and may depend on","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108889,"byte_end":108961,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":108966,"byte_end":109002,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109007,"byte_end":109010,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ **Warning** This method will return a NaN value if none of the values","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109015,"byte_end":109088,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ in the array are non-NaN values. Note that the NaN value might not be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109093,"byte_end":109166,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109171,"byte_end":109188,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110114,"byte_end":110120,"line_start":118,"line_end":118,"column_start":8,"column_end":14},"name":"argmax","qualname":"::quantile::QuantileExt::argmax","value":"pub fn argmax(&Self) -> Result<D::Pattern, MinMaxError> where A: PartialOrd","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the index of the maximum value of the array.","sig":null,"attributes":[{"value":"/ Finds the index of the maximum value of the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109281,"byte_end":109335,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109340,"byte_end":109343,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(MinMaxError::UndefinedOrder)` if any of the pairwise","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109348,"byte_end":109417,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ orderings tested by the function are undefined. (For example, this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109422,"byte_end":109492,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ occurs if there are any floating-point NaN values in the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109497,"byte_end":109565,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109570,"byte_end":109573,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(MinMaxError::EmptyInput)` if the array is empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109578,"byte_end":109643,"line_start":102,"line_end":102,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109648,"byte_end":109651,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are maxima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109656,"byte_end":109729,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ index is returned. (Which one is returned is unspecified and may depend","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109734,"byte_end":109809,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ on the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109814,"byte_end":109853,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109858,"byte_end":109861,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109866,"byte_end":109879,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109884,"byte_end":109887,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109892,"byte_end":109899,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109904,"byte_end":109927,"line_start":111,"line_end":111,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::QuantileExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109932,"byte_end":109967,"line_start":112,"line_end":112,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109972,"byte_end":109975,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let a = array![[1., 3., 7.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":109980,"byte_end":110012,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/                [2., 5., 6.]];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110017,"byte_end":110050,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.argmax(), Ok((0, 2)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110055,"byte_end":110094,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110099,"byte_end":110106,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110894,"byte_end":110908,"line_start":141,"line_end":141,"column_start":8,"column_end":22},"name":"argmax_skipnan","qualname":"::quantile::QuantileExt::argmax_skipnan","value":"pub fn argmax_skipnan(&Self) -> Result<D::Pattern, EmptyInput> where\nA: MaybeNan, A::NotNan: Ord","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the index of the maximum value of the array skipping NaN values.","sig":null,"attributes":[{"value":"/ Finds the index of the maximum value of the array skipping NaN values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110201,"byte_end":110275,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110280,"byte_end":110283,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(EmptyInput)` if the array is empty or none of the values in the array","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110288,"byte_end":110374,"line_start":124,"line_end":124,"column_start":5,"column_end":91}},{"value":"/ are non-NaN values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110379,"byte_end":110402,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110407,"byte_end":110410,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are maxima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110415,"byte_end":110488,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ index is returned. (Which one is returned is unspecified and may depend","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110493,"byte_end":110568,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ on the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110573,"byte_end":110612,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110617,"byte_end":110620,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110625,"byte_end":110638,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110643,"byte_end":110646,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110651,"byte_end":110658,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110663,"byte_end":110686,"line_start":134,"line_end":134,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::QuantileExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110691,"byte_end":110726,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110731,"byte_end":110734,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let a = array![[::std::f64::NAN, 3., 5.],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110739,"byte_end":110784,"line_start":137,"line_end":137,"column_start":5,"column_end":50}},{"value":"/                [2., 0., 6.]];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110789,"byte_end":110822,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.argmax_skipnan(), Ok((1, 2)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110827,"byte_end":110874,"line_start":139,"line_end":139,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":110879,"byte_end":110886,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111564,"byte_end":111567,"line_start":157,"line_end":157,"column_start":8,"column_end":11},"name":"max","qualname":"::quantile::QuantileExt::max","value":"pub fn max(&Self) -> Result<&A, MinMaxError> where A: PartialOrd","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the elementwise maximum of the array.","sig":null,"attributes":[{"value":"/ Finds the elementwise maximum of the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111010,"byte_end":111057,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111062,"byte_end":111065,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(MinMaxError::UndefinedOrder)` if any of the pairwise","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111070,"byte_end":111139,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/ orderings tested by the function are undefined. (For example, this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111144,"byte_end":111214,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ occurs if there are any floating-point NaN values in the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111219,"byte_end":111287,"line_start":150,"line_end":150,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111292,"byte_end":111295,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(EmptyInput)` if the array is empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111300,"byte_end":111352,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111357,"byte_end":111360,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are maxima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111365,"byte_end":111438,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ is returned. (Which one is returned is unspecified and may depend on","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111443,"byte_end":111515,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111520,"byte_end":111556,"line_start":156,"line_end":156,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112106,"byte_end":112117,"line_start":170,"line_end":170,"column_start":8,"column_end":19},"name":"max_skipnan","qualname":"::quantile::QuantileExt::max_skipnan","value":"pub fn max_skipnan(&Self) -> &A where A: MaybeNan, A::NotNan: Ord","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Finds the elementwise maximum of the array, skipping NaN values.","sig":null,"attributes":[{"value":"/ Finds the elementwise maximum of the array, skipping NaN values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111640,"byte_end":111708,"line_start":161,"line_end":161,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111713,"byte_end":111716,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Even if there are multiple (equal) elements that are maxima, only one","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111721,"byte_end":111794,"line_start":163,"line_end":163,"column_start":5,"column_end":78}},{"value":"/ is returned. (Which one is returned is unspecified and may depend on","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111799,"byte_end":111871,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ the memory layout of the array.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111876,"byte_end":111912,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111917,"byte_end":111920,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ **Warning** This method will return a NaN value if none of the values","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":111925,"byte_end":111998,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ in the array are non-NaN values. Note that the NaN value might not be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112003,"byte_end":112076,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112081,"byte_end":112098,"line_start":169,"line_end":169,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113843,"byte_end":113860,"line_start":208,"line_end":208,"column_start":8,"column_end":25},"name":"quantile_axis_mut","qualname":"::quantile::QuantileExt::quantile_axis_mut","value":"pub fn quantile_axis_mut<I>(&mut Self, Axis, N64, &I)\n-> Result<Array<A, D::Smaller>, QuantileError> where D: RemoveAxis, A: Ord +\nClone, S: DataMut, I: Interpolate<A>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Return the qth quantile of the data along the specified axis.","sig":null,"attributes":[{"value":"/ Return the qth quantile of the data along the specified axis.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112191,"byte_end":112256,"line_start":175,"line_end":175,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112261,"byte_end":112264,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ `q` needs to be a float between 0 and 1, bounds included.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112269,"byte_end":112330,"line_start":177,"line_end":177,"column_start":5,"column_end":66}},{"value":"/ The qth quantile for a 1-dimensional lane of length `N` is defined","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112335,"byte_end":112405,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ as the element that would be indexed as `(N-1)q` if the lane were to be sorted","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112410,"byte_end":112492,"line_start":179,"line_end":179,"column_start":5,"column_end":87}},{"value":"/ in increasing order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112497,"byte_end":112521,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/ If `(N-1)q` is not an integer the desired quantile lies between","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112526,"byte_end":112593,"line_start":181,"line_end":181,"column_start":5,"column_end":72}},{"value":"/ two data points: we return the lower, nearest, higher or interpolated","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112598,"byte_end":112671,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ value depending on the `interpolate` strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112676,"byte_end":112726,"line_start":183,"line_end":183,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112731,"byte_end":112734,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Some examples:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112739,"byte_end":112757,"line_start":185,"line_end":185,"column_start":5,"column_end":23}},{"value":"/ - `q=0.` returns the minimum along each 1-dimensional lane;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112762,"byte_end":112825,"line_start":186,"line_end":186,"column_start":5,"column_end":68}},{"value":"/ - `q=0.5` returns the median along each 1-dimensional lane;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112830,"byte_end":112893,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ - `q=1.` returns the maximum along each 1-dimensional lane.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112898,"byte_end":112961,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/ (`q=0` and `q=1` are considered improper quantiles)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":112966,"byte_end":113021,"line_start":189,"line_end":189,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113026,"byte_end":113029,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The array is shuffled **in place** along each 1-dimensional lane in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113034,"byte_end":113105,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ order to produce the required quantile without allocating a copy","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113110,"byte_end":113178,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ of the original array. Each 1-dimensional lane is shuffled independently","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113183,"byte_end":113259,"line_start":193,"line_end":193,"column_start":5,"column_end":81}},{"value":"/ from the others.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113264,"byte_end":113284,"line_start":194,"line_end":194,"column_start":5,"column_end":25}},{"value":"/ No assumptions should be made on the ordering of the array elements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113289,"byte_end":113360,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ after this computation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113365,"byte_end":113392,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113397,"byte_end":113400,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Complexity ([quickselect](https://en.wikipedia.org/wiki/Quickselect)):","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113405,"byte_end":113479,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ - average case: O(`m`);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113484,"byte_end":113511,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/ - worst case: O(`m`^2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113516,"byte_end":113543,"line_start":200,"line_end":200,"column_start":5,"column_end":32}},{"value":"/ where `m` is the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113548,"byte_end":113601,"line_start":201,"line_end":201,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113606,"byte_end":113609,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(EmptyInput)` when the specified axis has length 0.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113614,"byte_end":113681,"line_start":203,"line_end":203,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113686,"byte_end":113689,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(InvalidQuantile(q))` if `q` is not between `0.` and `1.` (inclusive).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113694,"byte_end":113780,"line_start":205,"line_end":205,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113785,"byte_end":113788,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":113793,"byte_end":113835,"line_start":207,"line_end":207,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115370,"byte_end":115388,"line_start":252,"line_end":252,"column_start":8,"column_end":26},"name":"quantiles_axis_mut","qualname":"::quantile::QuantileExt::quantiles_axis_mut","value":"pub fn quantiles_axis_mut<S2, I>(&mut Self, Axis, &ArrayBase<S2, Ix1>, &I)\n-> Result<Array<A, D>, QuantileError> where D: RemoveAxis, A: Ord + Clone,\nS: DataMut, S2: Data<Elem = N64>, I: Interpolate<A>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" A bulk version of [`quantile_axis_mut`], optimized to retrieve multiple\n quantiles at once.","sig":null,"attributes":[{"value":"/ A bulk version of [`quantile_axis_mut`], optimized to retrieve multiple","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114107,"byte_end":114182,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ quantiles at once.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114187,"byte_end":114209,"line_start":221,"line_end":221,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114214,"byte_end":114217,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Returns an `Array`, where subviews along `axis` of the array correspond","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114222,"byte_end":114297,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ to the elements of `qs`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114302,"byte_end":114330,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114335,"byte_end":114338,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ See [`quantile_axis_mut`] for additional details on quantiles and the algorithm","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114343,"byte_end":114426,"line_start":226,"line_end":226,"column_start":5,"column_end":88}},{"value":"/ used to retrieve them.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114431,"byte_end":114457,"line_start":227,"line_end":227,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114462,"byte_end":114465,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(EmptyInput)` when the specified axis has length 0.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114470,"byte_end":114537,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114542,"byte_end":114545,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(InvalidQuantile(q))` if any `q` in `qs` is not between `0.` and `1.` (inclusive).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114550,"byte_end":114648,"line_start":231,"line_end":231,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114653,"byte_end":114656,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114661,"byte_end":114703,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114708,"byte_end":114711,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ [`quantile_axis_mut`]: #tymethod.quantile_axis_mut","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114716,"byte_end":114770,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114775,"byte_end":114778,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114783,"byte_end":114796,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114801,"byte_end":114804,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114809,"byte_end":114820,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{array, aview1, Axis};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114825,"byte_end":114864,"line_start":240,"line_end":240,"column_start":5,"column_end":44}},{"value":"/ use ndarray_stats::{QuantileExt, interpolate::Nearest};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114869,"byte_end":114928,"line_start":241,"line_end":241,"column_start":5,"column_end":64}},{"value":"/ use noisy_float::types::n64;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114933,"byte_end":114965,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114970,"byte_end":114973,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut data = array![[3, 4, 5], [6, 7, 8]];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":114978,"byte_end":115026,"line_start":244,"line_end":244,"column_start":5,"column_end":53}},{"value":"/ let axis = Axis(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115031,"byte_end":115054,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/ let qs = &[n64(0.3), n64(0.7)];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115059,"byte_end":115094,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/ let quantiles = data.quantiles_axis_mut(axis, &aview1(qs), &Nearest).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115099,"byte_end":115181,"line_start":247,"line_end":247,"column_start":5,"column_end":87}},{"value":"/ for (&q, quantile) in qs.iter().zip(quantiles.axis_iter(axis)) {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115186,"byte_end":115254,"line_start":248,"line_end":248,"column_start":5,"column_end":73}},{"value":"/     assert_eq!(quantile, data.quantile_axis_mut(axis, q, &Nearest).unwrap());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115259,"byte_end":115340,"line_start":249,"line_end":249,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115345,"byte_end":115350,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115355,"byte_end":115362,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115857,"byte_end":115882,"line_start":268,"line_end":268,"column_start":8,"column_end":33},"name":"quantile_axis_skipnan_mut","qualname":"::quantile::QuantileExt::quantile_axis_skipnan_mut","value":"pub fn quantile_axis_skipnan_mut<I>(&mut Self, Axis, N64, &I)\n-> Result<Array<A, D::Smaller>, QuantileError> where D: RemoveAxis,\nA: MaybeNan, A::NotNan: Clone + Ord, S: DataMut, I: Interpolate<A::NotNan>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Return the `q`th quantile of the data along the specified axis, skipping NaN values.","sig":null,"attributes":[{"value":"/ Return the `q`th quantile of the data along the specified axis, skipping NaN values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115677,"byte_end":115765,"line_start":265,"line_end":265,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115770,"byte_end":115773,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ See [`quantile_axis_mut`](#tymethod.quantile_axis_mut) for details.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":115778,"byte_end":115849,"line_start":267,"line_end":267,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":630},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124452,"byte_end":124465,"line_start":560,"line_end":560,"column_start":11,"column_end":24},"name":"Quantile1dExt","qualname":"::quantile::Quantile1dExt","value":"Quantile1dExt<A, S>","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":1174}],"decl_id":null,"docs":" Quantile methods for 1-D arrays.\n","sig":null,"attributes":[{"value":"/ Quantile methods for 1-D arrays.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124405,"byte_end":124441,"line_start":559,"line_end":559,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125841,"byte_end":125853,"line_start":593,"line_end":593,"column_start":8,"column_end":20},"name":"quantile_mut","qualname":"::quantile::Quantile1dExt::quantile_mut","value":"pub fn quantile_mut<I>(&mut Self, N64, &I) -> Result<A, QuantileError> where\nA: Ord + Clone, S: DataMut, I: Interpolate<A>","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Return the qth quantile of the data.","sig":null,"attributes":[{"value":"/ Return the qth quantile of the data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124507,"byte_end":124547,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124552,"byte_end":124555,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ `q` needs to be a float between 0 and 1, bounds included.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124560,"byte_end":124621,"line_start":566,"line_end":566,"column_start":5,"column_end":66}},{"value":"/ The qth quantile for a 1-dimensional array of length `N` is defined","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124626,"byte_end":124697,"line_start":567,"line_end":567,"column_start":5,"column_end":76}},{"value":"/ as the element that would be indexed as `(N-1)q` if the array were to be sorted","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124702,"byte_end":124785,"line_start":568,"line_end":568,"column_start":5,"column_end":88}},{"value":"/ in increasing order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124790,"byte_end":124814,"line_start":569,"line_end":569,"column_start":5,"column_end":29}},{"value":"/ If `(N-1)q` is not an integer the desired quantile lies between","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124819,"byte_end":124886,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/ two data points: we return the lower, nearest, higher or interpolated","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124891,"byte_end":124964,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ value depending on the `interpolate` strategy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":124969,"byte_end":125019,"line_start":572,"line_end":572,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125024,"byte_end":125027,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Some examples:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125032,"byte_end":125050,"line_start":574,"line_end":574,"column_start":5,"column_end":23}},{"value":"/ - `q=0.` returns the minimum;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125055,"byte_end":125088,"line_start":575,"line_end":575,"column_start":5,"column_end":38}},{"value":"/ - `q=0.5` returns the median;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125093,"byte_end":125126,"line_start":576,"line_end":576,"column_start":5,"column_end":38}},{"value":"/ - `q=1.` returns the maximum.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125131,"byte_end":125164,"line_start":577,"line_end":577,"column_start":5,"column_end":38}},{"value":"/ (`q=0` and `q=1` are considered improper quantiles)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125169,"byte_end":125224,"line_start":578,"line_end":578,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125229,"byte_end":125232,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The array is shuffled **in place** in order to produce the required quantile","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125237,"byte_end":125317,"line_start":580,"line_end":580,"column_start":5,"column_end":85}},{"value":"/ without allocating a copy.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125322,"byte_end":125352,"line_start":581,"line_end":581,"column_start":5,"column_end":35}},{"value":"/ No assumptions should be made on the ordering of the array elements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125357,"byte_end":125428,"line_start":582,"line_end":582,"column_start":5,"column_end":76}},{"value":"/ after this computation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125433,"byte_end":125460,"line_start":583,"line_end":583,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125465,"byte_end":125468,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Complexity ([quickselect](https://en.wikipedia.org/wiki/Quickselect)):","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125473,"byte_end":125547,"line_start":585,"line_end":585,"column_start":5,"column_end":79}},{"value":"/ - average case: O(`m`);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125552,"byte_end":125579,"line_start":586,"line_end":586,"column_start":5,"column_end":32}},{"value":"/ - worst case: O(`m`^2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125584,"byte_end":125611,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/ where `m` is the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125616,"byte_end":125669,"line_start":588,"line_end":588,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125674,"byte_end":125677,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(EmptyInput)` if the array is empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125682,"byte_end":125734,"line_start":590,"line_end":590,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125739,"byte_end":125742,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(InvalidQuantile(q))` if `q` is not between `0.` and `1.` (inclusive).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":125747,"byte_end":125833,"line_start":592,"line_end":592,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126587,"byte_end":126600,"line_start":614,"line_end":614,"column_start":8,"column_end":21},"name":"quantiles_mut","qualname":"::quantile::Quantile1dExt::quantiles_mut","value":"pub fn quantiles_mut<S2, I>(&mut Self, &ArrayBase<S2, Ix1>, &I)\n-> Result<Array1<A>, QuantileError> where A: Ord + Clone, S: DataMut,\nS2: Data<Elem = N64>, I: Interpolate<A>","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" A bulk version of [`quantile_mut`], optimized to retrieve multiple\n quantiles at once.","sig":null,"attributes":[{"value":"/ A bulk version of [`quantile_mut`], optimized to retrieve multiple","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126007,"byte_end":126077,"line_start":599,"line_end":599,"column_start":5,"column_end":75}},{"value":"/ quantiles at once.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126082,"byte_end":126104,"line_start":600,"line_end":600,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126109,"byte_end":126112,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Returns an `Array`, where the elements of the array correspond to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126117,"byte_end":126190,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ elements of `qs`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126195,"byte_end":126216,"line_start":603,"line_end":603,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126221,"byte_end":126224,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(EmptyInput)` if the array is empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126229,"byte_end":126281,"line_start":605,"line_end":605,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126286,"byte_end":126289,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(InvalidQuantile(q))` if any `q` in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126294,"byte_end":126345,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ `qs` is not between `0.` and `1.` (inclusive).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126350,"byte_end":126400,"line_start":608,"line_end":608,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126405,"byte_end":126408,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ See [`quantile_mut`] for additional details on quantiles and the algorithm","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126413,"byte_end":126491,"line_start":610,"line_end":610,"column_start":5,"column_end":83}},{"value":"/ used to retrieve them.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126496,"byte_end":126522,"line_start":611,"line_end":611,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126527,"byte_end":126530,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ [`quantile_mut`]: #tymethod.quantile_mut","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126535,"byte_end":126579,"line_start":613,"line_end":613,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":646},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interpolate","qualname":"::quantile::interpolate","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":677},{"krate":0,"index":682},{"krate":0,"index":687},{"krate":0,"index":692}],"decl_id":null,"docs":" Interpolation strategies.\n","sig":null,"attributes":[{"value":"/ Interpolation strategies.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":127606,"byte_end":127635,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":657},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128703,"byte_end":128714,"line_start":30,"line_end":30,"column_start":11,"column_end":22},"name":"Interpolate","qualname":"::quantile::interpolate::Interpolate","value":"Interpolate<T>","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":1176}],"decl_id":null,"docs":" Used to provide an interpolation strategy to [`quantile_axis_mut`].","sig":null,"attributes":[{"value":"/ Used to provide an interpolation strategy to [`quantile_axis_mut`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128537,"byte_end":128608,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128609,"byte_end":128612,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`quantile_axis_mut`]: ../trait.QuantileExt.html#tymethod.quantile_axis_mut","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128613,"byte_end":128692,"line_start":29,"line_end":29,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128842,"byte_end":128853,"line_start":34,"line_end":34,"column_start":8,"column_end":19},"name":"needs_lower","qualname":"::quantile::interpolate::Interpolate::needs_lower","value":"pub fn needs_lower(N64, usize) -> bool","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Returns `true` iff the lower value is needed to compute the\n interpolated value.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the lower value is needed to compute the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128724,"byte_end":128787,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/ interpolated value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128792,"byte_end":128815,"line_start":32,"line_end":32,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129007,"byte_end":129019,"line_start":39,"line_end":39,"column_start":8,"column_end":20},"name":"needs_higher","qualname":"::quantile::interpolate::Interpolate::needs_higher","value":"pub fn needs_higher(N64, usize) -> bool","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Returns `true` iff the higher value is needed to compute the\n interpolated value.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the higher value is needed to compute the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128888,"byte_end":128952,"line_start":36,"line_end":36,"column_start":5,"column_end":69}},{"value":"/ interpolated value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":128957,"byte_end":128980,"line_start":37,"line_end":37,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129275,"byte_end":129286,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"interpolate","qualname":"::quantile::interpolate::Interpolate::interpolate","value":"pub fn interpolate(Option<T>, Option<T>, N64, usize) -> T","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Computes the interpolated value.","sig":null,"attributes":[{"value":"/ Computes the interpolated value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129054,"byte_end":129090,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129095,"byte_end":129098,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `None` is provided for the lower value when it's needed","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129103,"byte_end":129176,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ or if `None` is provided for the higher value when it's needed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129181,"byte_end":129248,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129415,"byte_end":129421,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"Higher","qualname":"::quantile::interpolate::Higher","value":"","parent":null,"children":[],"decl_id":null,"docs":" Select the higher value.\n","sig":null,"attributes":[{"value":"/ Select the higher value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129375,"byte_end":129403,"line_start":51,"line_end":51,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129462,"byte_end":129467,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"Lower","qualname":"::quantile::interpolate::Lower","value":"","parent":null,"children":[],"decl_id":null,"docs":" Select the lower value.\n","sig":null,"attributes":[{"value":"/ Select the lower value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129423,"byte_end":129450,"line_start":53,"line_end":53,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129510,"byte_end":129517,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"Nearest","qualname":"::quantile::interpolate::Nearest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Select the nearest value.\n","sig":null,"attributes":[{"value":"/ Select the nearest value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129469,"byte_end":129498,"line_start":55,"line_end":55,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129598,"byte_end":129606,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"Midpoint","qualname":"::quantile::interpolate::Midpoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Select the midpoint of the two values (`(lower + higher) / 2`).\n","sig":null,"attributes":[{"value":"/ Select the midpoint of the two values (`(lower + higher) / 2`).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129519,"byte_end":129586,"line_start":57,"line_end":57,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129805,"byte_end":129811,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"Linear","qualname":"::quantile::interpolate::Linear","value":"","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between the two values\n (`lower + (higher - lower) * fraction`, where `fraction` is the\n fractional part of the index surrounded by `lower` and `higher`).\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between the two values","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129608,"byte_end":129655,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/ (`lower + (higher - lower) * fraction`, where `fraction` is the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129656,"byte_end":129723,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/ fractional part of the index surrounded by `lower` and `higher`).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129724,"byte_end":129793,"line_start":61,"line_end":61,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":706},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132366,"byte_end":132375,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"Sort1dExt","qualname":"::sort::Sort1dExt","value":"Sort1dExt<A, S>","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":1182}],"decl_id":null,"docs":" Methods for sorting and partitioning 1-D arrays.\n","sig":null,"attributes":[{"value":"/ Methods for sorting and partitioning 1-D arrays.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132303,"byte_end":132355,"line_start":7,"line_end":7,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133300,"byte_end":133319,"line_start":31,"line_end":31,"column_start":8,"column_end":27},"name":"get_from_sorted_mut","qualname":"::sort::Sort1dExt::get_from_sorted_mut","value":"pub fn get_from_sorted_mut(&mut Self, usize) -> A where A: Ord + Clone,\nS: DataMut","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Return the element that would occupy the `i`-th position if\n the array were sorted in increasing order.","sig":null,"attributes":[{"value":"/ Return the element that would occupy the `i`-th position if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132417,"byte_end":132480,"line_start":12,"line_end":12,"column_start":5,"column_end":68}},{"value":"/ the array were sorted in increasing order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132485,"byte_end":132531,"line_start":13,"line_end":13,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132536,"byte_end":132539,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ The array is shuffled **in place** to retrieve the desired element:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132544,"byte_end":132615,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ no copy of the array is allocated.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132620,"byte_end":132658,"line_start":16,"line_end":16,"column_start":5,"column_end":43}},{"value":"/ After the shuffling, all elements with an index smaller than `i`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132663,"byte_end":132731,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"/ are smaller than the desired element, while all elements with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132736,"byte_end":132801,"line_start":18,"line_end":18,"column_start":5,"column_end":70}},{"value":"/ an index greater or equal than `i` are greater than or equal","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132806,"byte_end":132870,"line_start":19,"line_end":19,"column_start":5,"column_end":69}},{"value":"/ to the desired element.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132875,"byte_end":132902,"line_start":20,"line_end":20,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132907,"byte_end":132910,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ No other assumptions should be made on the ordering of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132915,"byte_end":132977,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/ elements after this computation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":132982,"byte_end":133018,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133023,"byte_end":133026,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Complexity ([quickselect](https://en.wikipedia.org/wiki/Quickselect)):","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133031,"byte_end":133105,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ - average case: O(`n`);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133110,"byte_end":133137,"line_start":26,"line_end":26,"column_start":5,"column_end":32}},{"value":"/ - worst case: O(`n`^2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133142,"byte_end":133169,"line_start":27,"line_end":27,"column_start":5,"column_end":32}},{"value":"/ where n is the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133174,"byte_end":133225,"line_start":28,"line_end":28,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133230,"byte_end":133233,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `i` is greater than or equal to `n`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133238,"byte_end":133292,"line_start":30,"line_end":30,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133984,"byte_end":134008,"line_start":47,"line_end":47,"column_start":8,"column_end":32},"name":"get_many_from_sorted_mut","qualname":"::sort::Sort1dExt::get_many_from_sorted_mut","value":"pub fn get_many_from_sorted_mut<S2>(&mut Self, &ArrayBase<S2, Ix1>)\n-> IndexMap<usize, A> where A: Ord + Clone, S: DataMut, S2: Data<Elem = usize>","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" A bulk version of [`get_from_sorted_mut`], optimized to retrieve multiple\n indexes at once.\n It returns an `IndexMap`, with indexes as keys and retrieved elements as\n values.\n The `IndexMap` is sorted with respect to indexes in increasing order:\n this ordering is preserved when you iterate over it (using `iter`/`into_iter`).","sig":null,"attributes":[{"value":"/ A bulk version of [`get_from_sorted_mut`], optimized to retrieve multiple","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133405,"byte_end":133482,"line_start":36,"line_end":36,"column_start":5,"column_end":82}},{"value":"/ indexes at once.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133487,"byte_end":133507,"line_start":37,"line_end":37,"column_start":5,"column_end":25}},{"value":"/ It returns an `IndexMap`, with indexes as keys and retrieved elements as","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133512,"byte_end":133588,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133593,"byte_end":133604,"line_start":39,"line_end":39,"column_start":5,"column_end":16}},{"value":"/ The `IndexMap` is sorted with respect to indexes in increasing order:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133609,"byte_end":133682,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ this ordering is preserved when you iterate over it (using `iter`/`into_iter`).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133687,"byte_end":133770,"line_start":41,"line_end":41,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133775,"byte_end":133778,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any element in `indexes` is greater than or equal to `n`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133783,"byte_end":133858,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ where `n` is the length of the array..","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133863,"byte_end":133905,"line_start":44,"line_end":44,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133910,"byte_end":133913,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ [`get_from_sorted_mut`]: #tymethod.get_from_sorted_mut","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":133918,"byte_end":133976,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":136140,"byte_end":136153,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"partition_mut","qualname":"::sort::Sort1dExt::partition_mut","value":"pub fn partition_mut(&mut Self, usize) -> usize where A: Ord + Clone,\nS: DataMut","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Partitions the array in increasing order based on the value initially\n located at `pivot_index` and returns the new index of the value.","sig":null,"attributes":[{"value":"/ Partitions the array in increasing order based on the value initially","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134167,"byte_end":134240,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ located at `pivot_index` and returns the new index of the value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134245,"byte_end":134313,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134318,"byte_end":134321,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The elements are rearranged in such a way that the value initially","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134326,"byte_end":134396,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ located at `pivot_index` is moved to the position it would be in an","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134401,"byte_end":134472,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ array sorted in increasing order. The return value is the new index of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134477,"byte_end":134551,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ the value after rearrangement. All elements smaller than the value are","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134556,"byte_end":134630,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ moved to its left and all elements equal or greater than the value are","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134635,"byte_end":134709,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ moved to its right. The ordering of the elements in the two partitions","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134714,"byte_end":134788,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ is undefined.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134793,"byte_end":134810,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134815,"byte_end":134818,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ `self` is shuffled **in place** to operate the desired partition:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134823,"byte_end":134892,"line_start":64,"line_end":64,"column_start":5,"column_end":74}},{"value":"/ no copy of the array is allocated.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134897,"byte_end":134935,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134940,"byte_end":134943,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The method uses Hoare's partition algorithm.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":134948,"byte_end":134996,"line_start":67,"line_end":67,"column_start":5,"column_end":53}},{"value":"/ Complexity: O(`n`), where `n` is the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135001,"byte_end":135074,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ Average number of element swaps: n/6 - 1/3 (see","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135079,"byte_end":135130,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/ [link](https://cs.stackexchange.com/questions/11458/quicksort-partitioning-hoare-vs-lomuto/11550))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135135,"byte_end":135237,"line_start":70,"line_end":70,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135242,"byte_end":135245,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `pivot_index` is greater than or equal to `n`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135250,"byte_end":135314,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135319,"byte_end":135322,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135327,"byte_end":135340,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135345,"byte_end":135348,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135353,"byte_end":135360,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135365,"byte_end":135388,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ use ndarray_stats::Sort1dExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135393,"byte_end":135426,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135431,"byte_end":135434,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let mut data = array![3, 1, 4, 5, 2];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135439,"byte_end":135480,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ let pivot_index = 2;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135485,"byte_end":135509,"line_start":81,"line_end":81,"column_start":5,"column_end":29}},{"value":"/ let pivot_value = data[pivot_index];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135514,"byte_end":135554,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135559,"byte_end":135562,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Partition by the value located at `pivot_index`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135567,"byte_end":135622,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ let new_index = data.partition_mut(pivot_index);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135627,"byte_end":135679,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ // The pivot value is now located at `new_index`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135684,"byte_end":135737,"line_start":86,"line_end":86,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(data[new_index], pivot_value);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135742,"byte_end":135787,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ // Elements less than that value are moved to the left.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135792,"byte_end":135851,"line_start":88,"line_end":88,"column_start":5,"column_end":64}},{"value":"/ for i in 0..new_index {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135856,"byte_end":135883,"line_start":89,"line_end":89,"column_start":5,"column_end":32}},{"value":"/     assert!(data[i] < pivot_value);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135888,"byte_end":135927,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135932,"byte_end":135937,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ // Elements greater than or equal to that value are moved to the right.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":135942,"byte_end":136017,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ for i in (new_index + 1)..data.len() {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":136022,"byte_end":136064,"line_start":93,"line_end":93,"column_start":5,"column_end":47}},{"value":"/      assert!(data[i] >= pivot_value);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":136069,"byte_end":136110,"line_start":94,"line_end":94,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":136115,"byte_end":136120,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":136125,"byte_end":136132,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":746},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143364,"byte_end":143384,"line_start":9,"line_end":9,"column_start":11,"column_end":31},"name":"SummaryStatisticsExt","qualname":"::summary_statistics::SummaryStatisticsExt","value":"SummaryStatisticsExt<A, S, D>","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":1184}],"decl_id":null,"docs":" Extension trait for `ArrayBase` providing methods\n to compute several summary statistics (e.g. mean, variance, etc.).\n","sig":null,"attributes":[{"value":"/ Extension trait for `ArrayBase` providing methods","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143229,"byte_end":143282,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ to compute several summary statistics (e.g. mean, variance, etc.).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143283,"byte_end":143353,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143881,"byte_end":143885,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"mean","qualname":"::summary_statistics::SummaryStatisticsExt::mean","value":"pub fn mean(&Self) -> Result<A, EmptyInput> where A: Clone + FromPrimitive +\nAdd<Output = A> + Div<Output = A> + Zero","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the [`arithmetic mean`] x̅ of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [`arithmetic mean`] x̅ of all elements in the array:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143447,"byte_end":143516,"line_start":14,"line_end":14,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143521,"byte_end":143524,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143529,"byte_end":143540,"line_start":16,"line_end":16,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143545,"byte_end":143558,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143563,"byte_end":143587,"line_start":18,"line_end":18,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143592,"byte_end":143606,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143611,"byte_end":143618,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143623,"byte_end":143626,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143631,"byte_end":143688,"line_start":22,"line_end":22,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143693,"byte_end":143696,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143701,"byte_end":143790,"line_start":24,"line_end":24,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143795,"byte_end":143798,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ [`arithmetic mean`]: https://en.wikipedia.org/wiki/Arithmetic_mean","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":143803,"byte_end":143873,"line_start":26,"line_end":26,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144758,"byte_end":144771,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"weighted_mean","qualname":"::summary_statistics::SummaryStatisticsExt::weighted_mean","value":"pub fn weighted_mean(&Self, &Self) -> Result<A, MultiInputError> where\nA: Copy + Div<Output = A> + Mul<Output = A> + Zero","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the [`arithmetic weighted mean`] x̅ of all elements in the array. Use `weighted_sum`\n if the `weights` are normalized (they sum up to 1.0).","sig":null,"attributes":[{"value":"/ Returns the [`arithmetic weighted mean`] x̅ of all elements in the array. Use `weighted_sum`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144010,"byte_end":144107,"line_start":31,"line_end":31,"column_start":5,"column_end":101}},{"value":"/ if the `weights` are normalized (they sum up to 1.0).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144112,"byte_end":144169,"line_start":32,"line_end":32,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144174,"byte_end":144177,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144182,"byte_end":144193,"line_start":34,"line_end":34,"column_start":5,"column_end":16}},{"value":"/       n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144198,"byte_end":144209,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/       ∑ wᵢxᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144214,"byte_end":144236,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/      i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144241,"byte_end":144253,"line_start":37,"line_end":37,"column_start":5,"column_end":17}},{"value":"/ x̅ = ―――――――――","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144258,"byte_end":144295,"line_start":38,"line_end":38,"column_start":5,"column_end":23}},{"value":"/        n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144300,"byte_end":144312,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/        ∑ wᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144317,"byte_end":144336,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/       i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144341,"byte_end":144354,"line_start":41,"line_end":41,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144359,"byte_end":144366,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144371,"byte_end":144374,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ **Panics** if division by zero panics for type A.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144379,"byte_end":144432,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144437,"byte_end":144440,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144445,"byte_end":144490,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144495,"byte_end":144498,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144503,"byte_end":144557,"line_start":48,"line_end":48,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `weights` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144562,"byte_end":144650,"line_start":49,"line_end":49,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144655,"byte_end":144658,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [`arithmetic weighted mean`] https://en.wikipedia.org/wiki/Weighted_arithmetic_mean","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144663,"byte_end":144750,"line_start":51,"line_end":51,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145352,"byte_end":145364,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"weighted_sum","qualname":"::summary_statistics::SummaryStatisticsExt::weighted_sum","value":"pub fn weighted_sum(&Self, &Self) -> Result<A, MultiInputError> where\nA: Copy + Mul<Output = A> + Zero","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the weighted sum of all elements in the array, that is, the dot product of the\n arrays `self` and `weights`. Equivalent to `weighted_mean` if the `weights` are normalized.","sig":null,"attributes":[{"value":"/ Returns the weighted sum of all elements in the array, that is, the dot product of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144900,"byte_end":144990,"line_start":56,"line_end":56,"column_start":5,"column_end":95}},{"value":"/ arrays `self` and `weights`. Equivalent to `weighted_mean` if the `weights` are normalized.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":144995,"byte_end":145090,"line_start":57,"line_end":57,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145095,"byte_end":145098,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145103,"byte_end":145114,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/      n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145119,"byte_end":145129,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/ x̅ =  ∑ wᵢxᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145134,"byte_end":145157,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"/     i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145162,"byte_end":145173,"line_start":62,"line_end":62,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145178,"byte_end":145185,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145190,"byte_end":145193,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145198,"byte_end":145243,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145248,"byte_end":145251,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `weights` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145256,"byte_end":145344,"line_start":67,"line_end":67,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146193,"byte_end":146211,"line_start":93,"line_end":93,"column_start":8,"column_end":26},"name":"weighted_mean_axis","qualname":"::summary_statistics::SummaryStatisticsExt::weighted_mean_axis","value":"pub fn weighted_mean_axis(&Self, Axis, &ArrayBase<S, Ix1>)\n-> Result<Array<A, D::Smaller>, MultiInputError> where A: Copy + Div<Output =\nA> + Mul<Output = A> + Zero, D: RemoveAxis","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the [`arithmetic weighted mean`] x̅ along `axis`. Use `weighted_mean_axis ` if the\n `weights` are normalized.","sig":null,"attributes":[{"value":"/ Returns the [`arithmetic weighted mean`] x̅ along `axis`. Use `weighted_mean_axis ` if the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145475,"byte_end":145570,"line_start":72,"line_end":72,"column_start":5,"column_end":99}},{"value":"/ `weights` are normalized.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145575,"byte_end":145604,"line_start":73,"line_end":73,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145609,"byte_end":145612,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145617,"byte_end":145628,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/       n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145633,"byte_end":145644,"line_start":76,"line_end":76,"column_start":5,"column_end":16}},{"value":"/       ∑ wᵢxᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145649,"byte_end":145671,"line_start":77,"line_end":77,"column_start":5,"column_end":21}},{"value":"/      i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145676,"byte_end":145688,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/ x̅ = ―――――――――","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145693,"byte_end":145730,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/        n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145735,"byte_end":145747,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/        ∑ wᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145752,"byte_end":145771,"line_start":81,"line_end":81,"column_start":5,"column_end":20}},{"value":"/       i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145776,"byte_end":145789,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145794,"byte_end":145801,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145806,"byte_end":145809,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145814,"byte_end":145856,"line_start":85,"line_end":85,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145861,"byte_end":145864,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145869,"byte_end":145914,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145919,"byte_end":145922,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::EmptyInput` if `self` is empty","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145927,"byte_end":145981,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` length along axis is not equal to `weights` length","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":145986,"byte_end":146085,"line_start":90,"line_end":90,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146090,"byte_end":146093,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`arithmetic weighted mean`] https://en.wikipedia.org/wiki/Weighted_arithmetic_mean","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146098,"byte_end":146185,"line_start":92,"line_end":92,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146948,"byte_end":146965,"line_start":116,"line_end":116,"column_start":8,"column_end":25},"name":"weighted_sum_axis","qualname":"::summary_statistics::SummaryStatisticsExt::weighted_sum_axis","value":"pub fn weighted_sum_axis(&Self, Axis, &ArrayBase<S, Ix1>)\n-> Result<Array<A, D::Smaller>, MultiInputError> where A: Copy + Mul<Output =\nA> + Zero, D: RemoveAxis","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the weighted sum along `axis`, that is, the dot product of `weights` and each lane\n of `self` along `axis`. Equivalent to `weighted_mean_axis` if the `weights` are normalized.","sig":null,"attributes":[{"value":"/ Returns the weighted sum along `axis`, that is, the dot product of `weights` and each lane","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146438,"byte_end":146532,"line_start":102,"line_end":102,"column_start":5,"column_end":99}},{"value":"/ of `self` along `axis`. Equivalent to `weighted_mean_axis` if the `weights` are normalized.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146537,"byte_end":146632,"line_start":103,"line_end":103,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146637,"byte_end":146640,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146645,"byte_end":146656,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/      n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146661,"byte_end":146671,"line_start":106,"line_end":106,"column_start":5,"column_end":15}},{"value":"/ x̅ =  ∑ wᵢxᵢ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146676,"byte_end":146699,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"/     i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146704,"byte_end":146715,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146720,"byte_end":146727,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146732,"byte_end":146735,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146740,"byte_end":146782,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146787,"byte_end":146790,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The following **errors** may be returned","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146795,"byte_end":146839,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146844,"byte_end":146847,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ * `MultiInputError::ShapeMismatch` if `self` and `weights` don't have the same shape","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":146852,"byte_end":146940,"line_start":115,"line_end":115,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147648,"byte_end":147661,"line_start":138,"line_end":138,"column_start":8,"column_end":21},"name":"harmonic_mean","qualname":"::summary_statistics::SummaryStatisticsExt::harmonic_mean","value":"pub fn harmonic_mean(&Self) -> Result<A, EmptyInput> where A: Float +\nFromPrimitive","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the [`harmonic mean`] `HM(X)` of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [`harmonic mean`] `HM(X)` of all elements in the array:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147174,"byte_end":147245,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147250,"byte_end":147253,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147258,"byte_end":147269,"line_start":127,"line_end":127,"column_start":5,"column_end":16}},{"value":"/           ⎛ n     ⎞⁻¹","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147274,"byte_end":147306,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/ HM(X) = n ⎜ ∑ xᵢ⁻¹⎟","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147311,"byte_end":147345,"line_start":129,"line_end":129,"column_start":5,"column_end":28}},{"value":"/           ⎝i=1    ⎠","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147350,"byte_end":147377,"line_start":130,"line_end":130,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147382,"byte_end":147389,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147394,"byte_end":147397,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147402,"byte_end":147459,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147464,"byte_end":147467,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147472,"byte_end":147561,"line_start":135,"line_end":135,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147566,"byte_end":147569,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`harmonic mean`]: https://en.wikipedia.org/wiki/Harmonic_mean","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147574,"byte_end":147640,"line_start":137,"line_end":137,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148208,"byte_end":148222,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"geometric_mean","qualname":"::summary_statistics::SummaryStatisticsExt::geometric_mean","value":"pub fn geometric_mean(&Self) -> Result<A, EmptyInput> where A: Float +\nFromPrimitive","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the [`geometric mean`] `GM(X)` of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [`geometric mean`] `GM(X)` of all elements in the array:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147743,"byte_end":147815,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147820,"byte_end":147823,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147828,"byte_end":147839,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/         ⎛ n   ⎞¹⁄ₙ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147844,"byte_end":147875,"line_start":145,"line_end":145,"column_start":5,"column_end":27}},{"value":"/ GM(X) = ⎜ ∏ xᵢ⎟","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147880,"byte_end":147907,"line_start":146,"line_end":146,"column_start":5,"column_end":24}},{"value":"/         ⎝i=1  ⎠","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147912,"byte_end":147935,"line_start":147,"line_end":147,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147940,"byte_end":147947,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147952,"byte_end":147955,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":147960,"byte_end":148017,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148022,"byte_end":148025,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148030,"byte_end":148119,"line_start":152,"line_end":152,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148124,"byte_end":148127,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ [`geometric mean`]: https://en.wikipedia.org/wiki/Geometric_mean","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148132,"byte_end":148200,"line_start":154,"line_end":154,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148968,"byte_end":148976,"line_start":176,"line_end":176,"column_start":8,"column_end":16},"name":"kurtosis","qualname":"::summary_statistics::SummaryStatisticsExt::kurtosis","value":"pub fn kurtosis(&Self) -> Result<A, EmptyInput> where A: Float + FromPrimitive","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the [kurtosis] `Kurt[X]` of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [kurtosis] `Kurt[X]` of all elements in the array:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148304,"byte_end":148370,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148375,"byte_end":148378,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148383,"byte_end":148394,"line_start":161,"line_end":161,"column_start":5,"column_end":16}},{"value":"/ Kurt[X] = μ₄ / σ⁴","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148399,"byte_end":148426,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148431,"byte_end":148438,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148443,"byte_end":148446,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ where μ₄ is the fourth central moment and σ is the standard deviation of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148451,"byte_end":148531,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ the elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148536,"byte_end":148566,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148571,"byte_end":148574,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This is sometimes referred to as _Pearson's kurtosis_. Fisher's kurtosis can be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148579,"byte_end":148662,"line_start":168,"line_end":168,"column_start":5,"column_end":88}},{"value":"/ computed by subtracting 3 from Pearson's kurtosis.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148667,"byte_end":148721,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148726,"byte_end":148729,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148734,"byte_end":148791,"line_start":171,"line_end":171,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148796,"byte_end":148799,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148804,"byte_end":148893,"line_start":173,"line_end":173,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148898,"byte_end":148901,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [kurtosis]: https://en.wikipedia.org/wiki/Kurtosis","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":148906,"byte_end":148960,"line_start":175,"line_end":175,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149623,"byte_end":149631,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"skewness","qualname":"::summary_statistics::SummaryStatisticsExt::skewness","value":"pub fn skewness(&Self) -> Result<A, EmptyInput> where A: Float + FromPrimitive","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the [Pearson's moment coefficient of skewness] γ₁ of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [Pearson's moment coefficient of skewness] γ₁ of all elements in the array:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149058,"byte_end":149152,"line_start":180,"line_end":180,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149157,"byte_end":149160,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149165,"byte_end":149176,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/ γ₁ = μ₃ / σ³","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149181,"byte_end":149205,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149210,"byte_end":149217,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149222,"byte_end":149225,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ where μ₃ is the third central moment and σ is the standard deviation of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149230,"byte_end":149309,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ the elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149314,"byte_end":149344,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149349,"byte_end":149352,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149357,"byte_end":149414,"line_start":189,"line_end":189,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149419,"byte_end":149422,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149427,"byte_end":149516,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149521,"byte_end":149524,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [Pearson's moment coefficient of skewness]: https://en.wikipedia.org/wiki/Skewness","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149529,"byte_end":149615,"line_start":193,"line_end":193,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150467,"byte_end":150481,"line_start":216,"line_end":216,"column_start":8,"column_end":22},"name":"central_moment","qualname":"::summary_statistics::SummaryStatisticsExt::central_moment","value":"pub fn central_moment(&Self, u16) -> Result<A, EmptyInput> where A: Float +\nFromPrimitive","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the *p*-th [central moment] of all elements in the array, μₚ:","sig":null,"attributes":[{"value":"/ Returns the *p*-th [central moment] of all elements in the array, μₚ:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149713,"byte_end":149789,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149794,"byte_end":149797,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149802,"byte_end":149813,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/      1  n","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149818,"byte_end":149831,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ μₚ = ―  ∑ (xᵢ-x̅)ᵖ","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149836,"byte_end":149870,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/      n i=1","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149875,"byte_end":149889,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149894,"byte_end":149901,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149906,"byte_end":149909,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149914,"byte_end":149971,"line_start":206,"line_end":206,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149976,"byte_end":149979,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The *p*-th central moment is computed using a corrected two-pass algorithm (see Section 3.5","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":149984,"byte_end":150079,"line_start":208,"line_end":208,"column_start":5,"column_end":100}},{"value":"/ in [Pébay et al., 2016]). Complexity is *O(np)* when *n >> p*, *p > 1*.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150084,"byte_end":150160,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150165,"byte_end":150168,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150173,"byte_end":150248,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ in the array or if `order` overflows `i32`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150253,"byte_end":150300,"line_start":212,"line_end":212,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150305,"byte_end":150308,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [central moment]: https://en.wikipedia.org/wiki/Central_moment","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150313,"byte_end":150379,"line_start":214,"line_end":214,"column_start":5,"column_end":71}},{"value":"/ [Pébay et al., 2016]: https://www.osti.gov/pages/servlets/purl/1427275","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150384,"byte_end":150459,"line_start":215,"line_end":215,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":151303,"byte_end":151318,"line_start":234,"line_end":234,"column_start":8,"column_end":23},"name":"central_moments","qualname":"::summary_statistics::SummaryStatisticsExt::central_moments","value":"pub fn central_moments(&Self, u16) -> Result<Vec<A>, EmptyInput> where\nA: Float + FromPrimitive","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the first *p* [central moments] of all elements in the array, see [central moment]\n for more details.","sig":null,"attributes":[{"value":"/ Returns the first *p* [central moments] of all elements in the array, see [central moment]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150575,"byte_end":150669,"line_start":220,"line_end":220,"column_start":5,"column_end":99}},{"value":"/ for more details.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150674,"byte_end":150695,"line_start":221,"line_end":221,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150700,"byte_end":150703,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `Err(EmptyInput)` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150708,"byte_end":150765,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150770,"byte_end":150773,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method reuses the intermediate steps for the *k*-th moment to compute the *(k+1)*-th,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150778,"byte_end":150872,"line_start":225,"line_end":225,"column_start":5,"column_end":99}},{"value":"/ being thus more efficient than repeated calls to [central moment] if the computation","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150877,"byte_end":150965,"line_start":226,"line_end":226,"column_start":5,"column_end":93}},{"value":"/ of central moments of multiple orders is required.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":150970,"byte_end":151024,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":151029,"byte_end":151032,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":151037,"byte_end":151112,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ in the array or if `order` overflows `i32`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":151117,"byte_end":151164,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":151169,"byte_end":151172,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ [central moments]: https://en.wikipedia.org/wiki/Central_moment","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":151177,"byte_end":151244,"line_start":232,"line_end":232,"column_start":5,"column_end":72}},{"value":"/ [central moment]: #tymethod.central_moment","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/mod.rs","byte_start":151249,"byte_end":151295,"line_start":233,"line_end":233,"column_start":5,"column_end":51}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8444,"byte_end":8453,"line_start":128,"line_end":128,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":24053,"byte_end":24062,"line_start":220,"line_end":220,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":33288,"byte_end":33297,"line_start":127,"line_end":127,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43405,"byte_end":43415,"line_start":10,"line_end":10,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43539,"byte_end":43549,"line_start":16,"line_end":16,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43822,"byte_end":43833,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44160,"byte_end":44171,"line_start":38,"line_end":38,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44202,"byte_end":44213,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44671,"byte_end":44684,"line_start":55,"line_end":55,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44920,"byte_end":44933,"line_start":65,"line_end":65,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45220,"byte_end":45235,"line_start":76,"line_end":76,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45702,"byte_end":45717,"line_start":94,"line_end":94,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45993,"byte_end":46008,"line_start":103,"line_end":103,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46039,"byte_end":46054,"line_start":105,"line_end":105,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46168,"byte_end":46183,"line_start":111,"line_end":111,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46535,"byte_end":46548,"line_start":126,"line_end":126,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46876,"byte_end":46889,"line_start":137,"line_end":137,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46920,"byte_end":46933,"line_start":139,"line_end":139,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":48058,"byte_end":48063,"line_start":33,"line_end":33,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":48791,"byte_end":48796,"line_start":61,"line_end":61,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49399,"byte_end":49404,"line_start":84,"line_end":84,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49849,"byte_end":49854,"line_start":107,"line_end":107,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52509,"byte_end":52513,"line_start":213,"line_end":213,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":57979,"byte_end":57990,"line_start":9,"line_end":9,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58131,"byte_end":58142,"line_start":15,"line_end":15,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58493,"byte_end":58507,"line_start":32,"line_end":32,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58953,"byte_end":58967,"line_start":50,"line_end":50,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":59140,"byte_end":59154,"line_start":56,"line_end":56,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":59293,"byte_end":59307,"line_start":62,"line_end":62,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":59418,"byte_end":59432,"line_start":68,"line_end":68,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61893,"byte_end":61897,"line_start":70,"line_end":70,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62355,"byte_end":62359,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63641,"byte_end":63645,"line_start":127,"line_end":127,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64858,"byte_end":64869,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66440,"byte_end":66449,"line_start":12,"line_end":12,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70599,"byte_end":70608,"line_start":144,"line_end":144,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":76204,"byte_end":76214,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":77404,"byte_end":77408,"line_start":196,"line_end":196,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":78287,"byte_end":78291,"line_start":227,"line_end":227,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":78537,"byte_end":78541,"line_start":237,"line_end":237,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":79434,"byte_end":79438,"line_start":268,"line_end":268,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":79684,"byte_end":79691,"line_start":278,"line_end":278,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":80574,"byte_end":80581,"line_start":309,"line_end":309,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":80827,"byte_end":80843,"line_start":319,"line_end":319,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":81987,"byte_end":82003,"line_start":358,"line_end":358,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":82479,"byte_end":82483,"line_start":374,"line_end":374,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":84194,"byte_end":84198,"line_start":427,"line_end":427,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":93947,"byte_end":93954,"line_start":186,"line_end":186,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":97330,"byte_end":97339,"line_start":296,"line_end":296,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":100734,"byte_end":100741,"line_start":7,"line_end":7,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":100966,"byte_end":100973,"line_start":17,"line_end":17,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101211,"byte_end":101218,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101354,"byte_end":101361,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101402,"byte_end":101409,"line_start":34,"line_end":34,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101595,"byte_end":101602,"line_start":43,"line_end":43,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101735,"byte_end":101742,"line_start":49,"line_end":49,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102197,"byte_end":102204,"line_start":67,"line_end":67,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102380,"byte_end":102387,"line_start":75,"line_end":75,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102563,"byte_end":102570,"line_start":83,"line_end":83,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102746,"byte_end":102753,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102929,"byte_end":102936,"line_start":99,"line_end":99,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":103128,"byte_end":103135,"line_start":107,"line_end":107,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":104429,"byte_end":104436,"line_start":166,"line_end":166,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":116225,"byte_end":116234,"line_start":284,"line_end":284,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126899,"byte_end":126908,"line_start":628,"line_end":628,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129841,"byte_end":129847,"line_start":64,"line_end":64,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":130159,"byte_end":130164,"line_start":77,"line_end":77,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":130475,"byte_end":130482,"line_start":90,"line_end":90,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":130984,"byte_end":130992,"line_start":107,"line_end":107,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":131514,"byte_end":131520,"line_start":126,"line_end":126,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":136304,"byte_end":136313,"line_start":105,"line_end":105,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/means.rs","byte_start":151777,"byte_end":151786,"line_start":8,"line_end":8,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":4191,"byte_end":4197,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":140}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/lib.rs","byte_start":4207,"byte_end":4216,"line_start":105,"line_end":105,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":170}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47204,"byte_end":47210,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":211}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/mod.rs","byte_start":47246,"byte_end":47256,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":296}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":127592,"byte_end":127603,"line_start":660,"line_end":660,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":646}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/correlation.rs","byte_start":8444,"byte_end":8453,"line_start":128,"line_end":128,"column_start":46,"column_end":55},"kind":{"Impl":{"id":0}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/deviation.rs","byte_start":24053,"byte_end":24062,"line_start":220,"line_end":220,"column_start":41,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/entropy.rs","byte_start":33288,"byte_end":33297,"line_start":127,"line_end":127,"column_start":39,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43405,"byte_end":43415,"line_start":10,"line_end":10,"column_start":23,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":837},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43539,"byte_end":43549,"line_start":16,"line_end":16,"column_start":16,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":837},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":43822,"byte_end":43833,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44160,"byte_end":44171,"line_start":38,"line_end":38,"column_start":16,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":849},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44202,"byte_end":44213,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44671,"byte_end":44684,"line_start":55,"line_end":55,"column_start":23,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":44920,"byte_end":44933,"line_start":65,"line_end":65,"column_start":16,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":864},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45220,"byte_end":45235,"line_start":76,"line_end":76,"column_start":6,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45702,"byte_end":45717,"line_start":94,"line_end":94,"column_start":23,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":45993,"byte_end":46008,"line_start":103,"line_end":103,"column_start":16,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46039,"byte_end":46054,"line_start":105,"line_end":105,"column_start":27,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46168,"byte_end":46183,"line_start":111,"line_end":111,"column_start":30,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46535,"byte_end":46548,"line_start":126,"line_end":126,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46876,"byte_end":46889,"line_start":137,"line_end":137,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/errors.rs","byte_start":46920,"byte_end":46933,"line_start":139,"line_end":139,"column_start":27,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":48058,"byte_end":48063,"line_start":33,"line_end":33,"column_start":31,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":48791,"byte_end":48796,"line_start":61,"line_end":61,"column_start":42,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49399,"byte_end":49404,"line_start":84,"line_end":84,"column_start":31,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":49849,"byte_end":49854,"line_start":107,"line_end":107,"column_start":14,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/bins.rs","byte_start":52509,"byte_end":52513,"line_start":213,"line_end":213,"column_start":14,"column_end":18},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":57979,"byte_end":57990,"line_start":9,"line_end":9,"column_start":23,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":946},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58131,"byte_end":58142,"line_start":15,"line_end":15,"column_start":23,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":946},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58493,"byte_end":58507,"line_start":32,"line_end":32,"column_start":6,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":58953,"byte_end":58967,"line_start":50,"line_end":50,"column_start":23,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":952},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":59140,"byte_end":59154,"line_start":56,"line_end":56,"column_start":23,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":952},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":59293,"byte_end":59307,"line_start":62,"line_end":62,"column_start":27,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":952},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/errors.rs","byte_start":59418,"byte_end":59432,"line_start":68,"line_end":68,"column_start":28,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":952},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":61893,"byte_end":61897,"line_start":70,"line_end":70,"column_start":37,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":963},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":62355,"byte_end":62359,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":63641,"byte_end":63645,"line_start":127,"line_end":127,"column_start":22,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/grid.rs","byte_start":64858,"byte_end":64869,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":66440,"byte_end":66449,"line_start":12,"line_end":12,"column_start":14,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/histograms.rs","byte_start":70599,"byte_end":70608,"line_start":144,"line_end":144,"column_start":35,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":288}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":76204,"byte_end":76214,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":77404,"byte_end":77408,"line_start":196,"line_end":196,"column_start":34,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":993},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":78287,"byte_end":78291,"line_start":227,"line_end":227,"column_start":9,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":78537,"byte_end":78541,"line_start":237,"line_end":237,"column_start":34,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":999},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":79434,"byte_end":79438,"line_start":268,"line_end":268,"column_start":9,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":79684,"byte_end":79691,"line_start":278,"line_end":278,"column_start":34,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1005},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":80574,"byte_end":80581,"line_start":309,"line_end":309,"column_start":9,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":80827,"byte_end":80843,"line_start":319,"line_end":319,"column_start":34,"column_end":50},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":81987,"byte_end":82003,"line_start":358,"line_end":358,"column_start":9,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":82479,"byte_end":82483,"line_start":374,"line_end":374,"column_start":34,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1028},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/histogram/strategies.rs","byte_start":84194,"byte_end":84198,"line_start":427,"line_end":427,"column_start":9,"column_end":13},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":87923,"byte_end":87928,"line_start":6,"line_end":6,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":387}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":93947,"byte_end":93954,"line_start":186,"line_end":186,"column_start":9,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/mod.rs","byte_start":97330,"byte_end":97339,"line_start":296,"line_end":296,"column_start":40,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":100734,"byte_end":100741,"line_start":7,"line_end":7,"column_start":19,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":100966,"byte_end":100973,"line_start":17,"line_end":17,"column_start":22,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101211,"byte_end":101218,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101354,"byte_end":101361,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101402,"byte_end":101409,"line_start":34,"line_end":34,"column_start":34,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101595,"byte_end":101602,"line_start":43,"line_end":43,"column_start":22,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1796}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":101735,"byte_end":101742,"line_start":49,"line_end":49,"column_start":36,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102197,"byte_end":102204,"line_start":67,"line_end":67,"column_start":22,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2110}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102380,"byte_end":102387,"line_start":75,"line_end":75,"column_start":22,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2115}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102563,"byte_end":102570,"line_start":83,"line_end":83,"column_start":22,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2120}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102746,"byte_end":102753,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2125}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":102929,"byte_end":102936,"line_start":99,"line_end":99,"column_start":22,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2131}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":103128,"byte_end":103135,"line_start":107,"line_end":107,"column_start":38,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1158},"to":{"krate":18,"index":124}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/maybe_nan/impl_not_none.rs","byte_start":104429,"byte_end":104436,"line_start":166,"line_end":166,"column_start":42,"column_end":49},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1158},"to":{"krate":18,"index":150}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":116225,"byte_end":116234,"line_start":284,"line_end":284,"column_start":40,"column_end":49},"kind":{"Impl":{"id":63}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":577}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/mod.rs","byte_start":126899,"byte_end":126908,"line_start":628,"line_end":628,"column_start":36,"column_end":45},"kind":{"Impl":{"id":64}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":630}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":129841,"byte_end":129847,"line_start":64,"line_end":64,"column_start":28,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":662},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":130159,"byte_end":130164,"line_start":77,"line_end":77,"column_start":28,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":664},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":130475,"byte_end":130482,"line_start":90,"line_end":90,"column_start":28,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":666},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":130984,"byte_end":130992,"line_start":107,"line_end":107,"column_start":28,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":668},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/quantile/interpolate.rs","byte_start":131514,"byte_end":131520,"line_start":126,"line_end":126,"column_start":28,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":670},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/sort.rs","byte_start":136304,"byte_end":136313,"line_start":105,"line_end":105,"column_start":32,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":706}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-stats-0.3.0/src/summary_statistics/means.rs","byte_start":151777,"byte_end":151786,"line_start":8,"line_end":8,"column_start":49,"column_end":58},"kind":{"Impl":{"id":71}},"from":{"krate":16,"index":2611},"to":{"krate":0,"index":746}}]}