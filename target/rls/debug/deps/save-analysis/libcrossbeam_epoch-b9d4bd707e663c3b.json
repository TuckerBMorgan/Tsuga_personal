{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1","program":"C:\\Users\\tucker_alt\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","--edition=2018","C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=b9d4bd707e663c3b","-C","extra-filename=-b9d4bd707e663c3b","--out-dir","c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps\\libcfg_if-db84f2c6534d0b0b.rmeta","--extern","const_fn=c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps\\const_fn-c8d2a2f4b8a2453e.dll","--extern","crossbeam_utils=c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps\\libcrossbeam_utils-d83ca22246283abd.rmeta","--extern","lazy_static=c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps\\liblazy_static-2613a078ddae3c7c.rmeta","--extern","memoffset=c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps\\libmemoffset-5560c003cb8140e9.rmeta","--extern","scopeguard=c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps\\libscopeguard-858be7078db27473.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\tucker_alt\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\tucker_alt\\rnn\\Tsuga_personal\\target\\rls\\debug\\deps\\libcrossbeam_epoch-b9d4bd707e663c3b.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[8394041798375973343,5072134971484324465]},"crate_root":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src","external_crates":[{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3618826422418266509,13774110447647194088]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","num":2,"id":{"name":"core","disambiguator":[5869593867372512129,8892351770599064380]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16336616429363306178,15933528700668289664]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13032364489687248004,10441099644231827047]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13137609675899536301,10257788764077090734]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13872204357919209756,4909095826076510978]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5654693098802417137,14568087728368823271]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7887958121303026695,5811099981140011125]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16604866430125238415,14308966983882668615]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9270573994147855928,18243782145514081688]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8500361004662461929,668518043409853197]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[18027838608834149271,8935260799569545465]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[13234411533462619043,13195987239954520698]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","num":14,"id":{"name":"const_fn","disambiguator":[9504758320609734849,3807453144585023899]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","num":15,"id":{"name":"crossbeam_utils","disambiguator":[16680524922902909486,16669382399301313372]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","num":16,"id":{"name":"lazy_static","disambiguator":[4332797819585255557,11703309540157145024]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","num":17,"id":{"name":"scopeguard","disambiguator":[8659203029979824177,14656626648143315754]}},{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","num":18,"id":{"name":"memoffset","disambiguator":[7365832206739713720,2064402121781579549]}}],"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3500,"byte_end":3509,"line_start":80,"line_end":80,"column_start":32,"column_end":41},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3511,"byte_end":3517,"line_start":80,"line_end":80,"column_start":43,"column_end":49},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3519,"byte_end":3537,"line_start":80,"line_end":80,"column_start":51,"column_end":69},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3539,"byte_end":3560,"line_start":80,"line_end":80,"column_start":71,"column_end":92},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3562,"byte_end":3567,"line_start":80,"line_end":80,"column_start":94,"column_end":99},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3569,"byte_end":3576,"line_start":80,"line_end":80,"column_start":101,"column_end":108},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3578,"byte_end":3584,"line_start":80,"line_end":80,"column_start":110,"column_end":116},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3621,"byte_end":3630,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3632,"byte_end":3643,"line_start":81,"line_end":81,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3676,"byte_end":3687,"line_start":82,"line_end":82,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3689,"byte_end":3694,"line_start":82,"line_end":82,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3802,"byte_end":3819,"line_start":89,"line_end":89,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3821,"byte_end":3830,"line_start":89,"line_end":89,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3832,"byte_end":3835,"line_start":89,"line_end":89,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":274},{"krate":0,"index":307},{"krate":0,"index":332},{"krate":0,"index":348},{"krate":0,"index":386},{"krate":0,"index":477},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":636},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":2855,"byte_end":2926,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\lib.rs","byte_start":3120,"byte_end":3163,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728320,"byte_end":6728338,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728249,"byte_end":6728308,"line_start":28,"line_end":28,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728468,"byte_end":6728475,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728387,"byte_end":6728459,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728561,"byte_end":6728564,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728497,"byte_end":6728552,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729453,"byte_end":6729474,"line_start":57,"line_end":57,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728883,"byte_end":6728935,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728936,"byte_end":6728939,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728940,"byte_end":6729031,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729032,"byte_end":6729124,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729125,"byte_end":6729128,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729129,"byte_end":6729194,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729195,"byte_end":6729198,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729199,"byte_end":6729293,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729294,"byte_end":6729320,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729321,"byte_end":6729413,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729414,"byte_end":6729442,"line_start":56,"line_end":56,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729540,"byte_end":6729547,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729481,"byte_end":6729532,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729765,"byte_end":6729772,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729573,"byte_end":6729621,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729626,"byte_end":6729629,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729634,"byte_end":6729727,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729732,"byte_end":6729757,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732080,"byte_end":6732089,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731107,"byte_end":6731154,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731155,"byte_end":6731158,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731159,"byte_end":6731257,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731258,"byte_end":6731353,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731354,"byte_end":6731416,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731417,"byte_end":6731420,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731421,"byte_end":6731513,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731514,"byte_end":6731613,"line_start":125,"line_end":125,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731614,"byte_end":6731714,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731715,"byte_end":6731737,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731738,"byte_end":6731741,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731742,"byte_end":6731835,"line_start":129,"line_end":129,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731836,"byte_end":6731907,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731908,"byte_end":6731911,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731912,"byte_end":6731919,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731920,"byte_end":6731950,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731951,"byte_end":6731982,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731983,"byte_end":6731986,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6731987,"byte_end":6732061,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732062,"byte_end":6732069,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732136,"byte_end":6732141,"line_start":140,"line_end":140,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732096,"byte_end":6732125,"line_start":139,"line_end":139,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732195,"byte_end":6732199,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732155,"byte_end":6732185,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732351,"byte_end":6732355,"line_start":150,"line_end":150,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732206,"byte_end":6732251,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732256,"byte_end":6732259,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732264,"byte_end":6732276,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732281,"byte_end":6732284,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732289,"byte_end":6732336,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732719,"byte_end":6732724,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732389,"byte_end":6732424,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732429,"byte_end":6732432,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732437,"byte_end":6732449,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732454,"byte_end":6732457,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732462,"byte_end":6732538,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732543,"byte_end":6732611,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732616,"byte_end":6732704,"line_start":158,"line_end":158,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733123,"byte_end":6733132,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732759,"byte_end":6732802,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732807,"byte_end":6732810,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732815,"byte_end":6732827,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732832,"byte_end":6732835,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732840,"byte_end":6732916,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732921,"byte_end":6732989,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6732994,"byte_end":6733084,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733089,"byte_end":6733108,"line_start":168,"line_end":168,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733545,"byte_end":6733549,"line_start":179,"line_end":179,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733171,"byte_end":6733224,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733229,"byte_end":6733232,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733237,"byte_end":6733249,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733254,"byte_end":6733257,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733262,"byte_end":6733338,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733343,"byte_end":6733411,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733416,"byte_end":6733506,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733511,"byte_end":6733530,"line_start":178,"line_end":178,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736524,"byte_end":6736530,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736006,"byte_end":6736070,"line_start":266,"line_end":266,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736071,"byte_end":6736074,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736075,"byte_end":6736173,"line_start":268,"line_end":268,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736174,"byte_end":6736271,"line_start":269,"line_end":269,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736272,"byte_end":6736343,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736344,"byte_end":6736347,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736348,"byte_end":6736428,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736429,"byte_end":6736432,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736433,"byte_end":6736512,"line_start":274,"line_end":274,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737016,"byte_end":6737019,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736783,"byte_end":6736865,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736870,"byte_end":6736873,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736878,"byte_end":6736892,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736897,"byte_end":6736900,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736905,"byte_end":6736912,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736917,"byte_end":6736949,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736954,"byte_end":6736957,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736962,"byte_end":6736992,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736997,"byte_end":6737004,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737363,"byte_end":6737367,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737122,"byte_end":6737204,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737209,"byte_end":6737212,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737217,"byte_end":6737231,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737236,"byte_end":6737239,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737244,"byte_end":6737251,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737256,"byte_end":6737288,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737293,"byte_end":6737296,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737301,"byte_end":6737339,"line_start":306,"line_end":306,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737344,"byte_end":6737351,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737916,"byte_end":6737920,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737866,"byte_end":6737898,"line_start":330,"line_end":330,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738505,"byte_end":6738509,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738047,"byte_end":6738092,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738097,"byte_end":6738100,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738105,"byte_end":6738195,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738200,"byte_end":6738214,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738219,"byte_end":6738222,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738227,"byte_end":6738241,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738246,"byte_end":6738249,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738254,"byte_end":6738261,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738266,"byte_end":6738315,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738320,"byte_end":6738364,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738369,"byte_end":6738372,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738377,"byte_end":6738407,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738412,"byte_end":6738442,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738447,"byte_end":6738481,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738486,"byte_end":6738493,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739516,"byte_end":6739528,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738639,"byte_end":6738718,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738723,"byte_end":6738726,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738731,"byte_end":6738804,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738809,"byte_end":6738885,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738890,"byte_end":6738961,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6738966,"byte_end":6739040,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739045,"byte_end":6739068,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739073,"byte_end":6739076,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739081,"byte_end":6739156,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739161,"byte_end":6739235,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739240,"byte_end":6739274,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739279,"byte_end":6739282,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739287,"byte_end":6739301,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739306,"byte_end":6739309,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739314,"byte_end":6739321,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739326,"byte_end":6739375,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739380,"byte_end":6739383,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739388,"byte_end":6739418,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739423,"byte_end":6739453,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739458,"byte_end":6739492,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739497,"byte_end":6739504,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740136,"byte_end":6740141,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739648,"byte_end":6739713,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739718,"byte_end":6739721,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739726,"byte_end":6739816,"line_start":384,"line_end":384,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739821,"byte_end":6739835,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739840,"byte_end":6739843,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739848,"byte_end":6739862,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739867,"byte_end":6739870,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739875,"byte_end":6739882,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739887,"byte_end":6739936,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739941,"byte_end":6739985,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739990,"byte_end":6739993,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6739998,"byte_end":6740028,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740033,"byte_end":6740069,"line_start":394,"line_end":394,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740074,"byte_end":6740112,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740117,"byte_end":6740124,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740791,"byte_end":6740795,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740248,"byte_end":6740336,"line_start":401,"line_end":401,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740341,"byte_end":6740354,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740359,"byte_end":6740362,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740367,"byte_end":6740457,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740462,"byte_end":6740476,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740481,"byte_end":6740484,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740489,"byte_end":6740503,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740508,"byte_end":6740511,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740516,"byte_end":6740523,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740528,"byte_end":6740585,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740590,"byte_end":6740634,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740639,"byte_end":6740642,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740647,"byte_end":6740677,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740682,"byte_end":6740712,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740717,"byte_end":6740767,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740772,"byte_end":6740779,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6742062,"byte_end":6742077,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6740966,"byte_end":6741062,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741067,"byte_end":6741161,"line_start":422,"line_end":422,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741166,"byte_end":6741237,"line_start":423,"line_end":423,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741242,"byte_end":6741245,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741250,"byte_end":6741345,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741350,"byte_end":6741441,"line_start":426,"line_end":426,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741446,"byte_end":6741459,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741464,"byte_end":6741467,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741472,"byte_end":6741557,"line_start":429,"line_end":429,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741562,"byte_end":6741593,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741598,"byte_end":6741601,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741606,"byte_end":6741620,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741625,"byte_end":6741628,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741633,"byte_end":6741640,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741645,"byte_end":6741709,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741714,"byte_end":6741758,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741763,"byte_end":6741766,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741771,"byte_end":6741801,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741806,"byte_end":6741809,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741814,"byte_end":6741844,"line_start":440,"line_end":440,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741849,"byte_end":6741886,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741891,"byte_end":6741961,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6741966,"byte_end":6742038,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6742043,"byte_end":6742050,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744546,"byte_end":6744566,"line_start":514,"line_end":514,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6742746,"byte_end":6742842,"line_start":468,"line_end":468,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6742847,"byte_end":6742941,"line_start":469,"line_end":469,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6742946,"byte_end":6743017,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743022,"byte_end":6743025,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743030,"byte_end":6743124,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743129,"byte_end":6743224,"line_start":473,"line_end":473,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743229,"byte_end":6743319,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743324,"byte_end":6743408,"line_start":475,"line_end":475,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743413,"byte_end":6743416,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743421,"byte_end":6743506,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743511,"byte_end":6743542,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743547,"byte_end":6743550,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743555,"byte_end":6743603,"line_start":480,"line_end":480,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743608,"byte_end":6743611,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743616,"byte_end":6743630,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743635,"byte_end":6743638,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743643,"byte_end":6743650,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743655,"byte_end":6743719,"line_start":485,"line_end":485,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743724,"byte_end":6743768,"line_start":486,"line_end":486,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743773,"byte_end":6743776,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743781,"byte_end":6743811,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743816,"byte_end":6743846,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743851,"byte_end":6743854,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743859,"byte_end":6743894,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743899,"byte_end":6743939,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743944,"byte_end":6743954,"line_start":493,"line_end":493,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6743959,"byte_end":6744022,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744027,"byte_end":6744049,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744054,"byte_end":6744078,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744083,"byte_end":6744105,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744110,"byte_end":6744123,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744128,"byte_end":6744153,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744158,"byte_end":6744192,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744197,"byte_end":6744227,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744232,"byte_end":6744245,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744250,"byte_end":6744259,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744264,"byte_end":6744269,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744274,"byte_end":6744277,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744282,"byte_end":6744323,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744328,"byte_end":6744338,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744343,"byte_end":6744418,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744423,"byte_end":6744450,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744455,"byte_end":6744498,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744503,"byte_end":6744512,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744517,"byte_end":6744522,"line_start":512,"line_end":512,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6744527,"byte_end":6744534,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745971,"byte_end":6745980,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745240,"byte_end":6745279,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745284,"byte_end":6745287,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745292,"byte_end":6745386,"line_start":539,"line_end":539,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745391,"byte_end":6745447,"line_start":540,"line_end":540,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745452,"byte_end":6745455,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745460,"byte_end":6745550,"line_start":542,"line_end":542,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745555,"byte_end":6745569,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745574,"byte_end":6745577,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745582,"byte_end":6745596,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745601,"byte_end":6745604,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745609,"byte_end":6745616,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745621,"byte_end":6745678,"line_start":548,"line_end":548,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745683,"byte_end":6745727,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745732,"byte_end":6745735,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745740,"byte_end":6745800,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745805,"byte_end":6745835,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745840,"byte_end":6745895,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745900,"byte_end":6745947,"line_start":554,"line_end":554,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6745952,"byte_end":6745959,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746879,"byte_end":6746887,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746151,"byte_end":6746189,"line_start":560,"line_end":560,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746194,"byte_end":6746197,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746202,"byte_end":6746295,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746300,"byte_end":6746356,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746361,"byte_end":6746364,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746369,"byte_end":6746459,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746464,"byte_end":6746478,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746483,"byte_end":6746486,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746491,"byte_end":6746505,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746510,"byte_end":6746513,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746518,"byte_end":6746525,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746530,"byte_end":6746587,"line_start":571,"line_end":571,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746592,"byte_end":6746636,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746641,"byte_end":6746644,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746649,"byte_end":6746709,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746714,"byte_end":6746744,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746749,"byte_end":6746803,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746808,"byte_end":6746855,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6746860,"byte_end":6746867,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747787,"byte_end":6747796,"line_start":602,"line_end":602,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747056,"byte_end":6747095,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747100,"byte_end":6747103,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747108,"byte_end":6747202,"line_start":585,"line_end":585,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747207,"byte_end":6747263,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747268,"byte_end":6747271,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747276,"byte_end":6747366,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747371,"byte_end":6747385,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747390,"byte_end":6747393,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747398,"byte_end":6747412,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747417,"byte_end":6747420,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747425,"byte_end":6747432,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747437,"byte_end":6747494,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747499,"byte_end":6747543,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747548,"byte_end":6747551,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747556,"byte_end":6747616,"line_start":597,"line_end":597,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747621,"byte_end":6747651,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747656,"byte_end":6747711,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747716,"byte_end":6747763,"line_start":600,"line_end":600,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747768,"byte_end":6747775,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749093,"byte_end":6749103,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6747966,"byte_end":6748001,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748006,"byte_end":6748009,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748014,"byte_end":6748103,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748108,"byte_end":6748194,"line_start":609,"line_end":609,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748199,"byte_end":6748234,"line_start":610,"line_end":610,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748239,"byte_end":6748242,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748247,"byte_end":6748259,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748264,"byte_end":6748267,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748272,"byte_end":6748331,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748336,"byte_end":6748339,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748344,"byte_end":6748356,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748361,"byte_end":6748364,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748369,"byte_end":6748456,"line_start":618,"line_end":618,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748461,"byte_end":6748494,"line_start":619,"line_end":619,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748499,"byte_end":6748502,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748507,"byte_end":6748521,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748526,"byte_end":6748529,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748534,"byte_end":6748545,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748550,"byte_end":6748569,"line_start":624,"line_end":624,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748574,"byte_end":6748608,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748613,"byte_end":6748639,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748644,"byte_end":6748671,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748676,"byte_end":6748681,"line_start":628,"line_end":628,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748686,"byte_end":6748689,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748694,"byte_end":6748727,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748732,"byte_end":6748760,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748765,"byte_end":6748859,"line_start":632,"line_end":632,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748864,"byte_end":6748911,"line_start":633,"line_end":633,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748916,"byte_end":6748936,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6748941,"byte_end":6749020,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749025,"byte_end":6749038,"line_start":636,"line_end":636,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749043,"byte_end":6749052,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749057,"byte_end":6749062,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749067,"byte_end":6749074,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751734,"byte_end":6751741,"line_start":743,"line_end":743,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751671,"byte_end":6751723,"line_start":742,"line_end":742,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751833,"byte_end":6751843,"line_start":745,"line_end":745,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751771,"byte_end":6751825,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752150,"byte_end":6752160,"line_start":753,"line_end":753,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751865,"byte_end":6751929,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751934,"byte_end":6751937,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751942,"byte_end":6751954,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751959,"byte_end":6751962,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751967,"byte_end":6752062,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752067,"byte_end":6752135,"line_start":752,"line_end":752,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752426,"byte_end":6752431,"line_start":762,"line_end":762,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752186,"byte_end":6752221,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752222,"byte_end":6752225,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752226,"byte_end":6752268,"line_start":758,"line_end":758,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752269,"byte_end":6752272,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752273,"byte_end":6752371,"line_start":760,"line_end":760,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752372,"byte_end":6752414,"line_start":761,"line_end":761,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753829,"byte_end":6753837,"line_start":813,"line_end":813,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753081,"byte_end":6753131,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753136,"byte_end":6753139,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753144,"byte_end":6753236,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753241,"byte_end":6753334,"line_start":794,"line_end":794,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753339,"byte_end":6753364,"line_start":795,"line_end":795,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753369,"byte_end":6753372,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753377,"byte_end":6753389,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753394,"byte_end":6753397,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753402,"byte_end":6753446,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753451,"byte_end":6753454,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753459,"byte_end":6753471,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753476,"byte_end":6753479,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753484,"byte_end":6753580,"line_start":803,"line_end":803,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753585,"byte_end":6753632,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753637,"byte_end":6753640,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753645,"byte_end":6753659,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753664,"byte_end":6753667,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753672,"byte_end":6753679,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753684,"byte_end":6753715,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753720,"byte_end":6753723,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753728,"byte_end":6753798,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753803,"byte_end":6753810,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754235,"byte_end":6754243,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753972,"byte_end":6754016,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754021,"byte_end":6754024,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754029,"byte_end":6754043,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754048,"byte_end":6754051,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754056,"byte_end":6754063,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754068,"byte_end":6754099,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754104,"byte_end":6754107,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754112,"byte_end":6754141,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754146,"byte_end":6754181,"line_start":827,"line_end":827,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754186,"byte_end":6754211,"line_start":828,"line_end":828,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754216,"byte_end":6754223,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754632,"byte_end":6754635,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754402,"byte_end":6754483,"line_start":836,"line_end":836,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754488,"byte_end":6754491,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754496,"byte_end":6754510,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754515,"byte_end":6754518,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754523,"byte_end":6754530,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754535,"byte_end":6754566,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754571,"byte_end":6754574,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754579,"byte_end":6754608,"line_start":843,"line_end":843,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754613,"byte_end":6754620,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754974,"byte_end":6754978,"line_start":860,"line_end":860,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754736,"byte_end":6754817,"line_start":851,"line_end":851,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754822,"byte_end":6754825,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754830,"byte_end":6754844,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754849,"byte_end":6754852,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754857,"byte_end":6754864,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754869,"byte_end":6754900,"line_start":856,"line_end":856,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754905,"byte_end":6754908,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754913,"byte_end":6754950,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754955,"byte_end":6754962,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755399,"byte_end":6755410,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755070,"byte_end":6755119,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755124,"byte_end":6755127,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755132,"byte_end":6755146,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755151,"byte_end":6755154,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755159,"byte_end":6755166,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755171,"byte_end":6755219,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755224,"byte_end":6755227,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755232,"byte_end":6755261,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755266,"byte_end":6755296,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755301,"byte_end":6755334,"line_start":873,"line_end":873,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755339,"byte_end":6755346,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755351,"byte_end":6755387,"line_start":875,"line_end":875,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755730,"byte_end":6755733,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755522,"byte_end":6755568,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755573,"byte_end":6755576,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755581,"byte_end":6755595,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755600,"byte_end":6755603,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755608,"byte_end":6755615,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755620,"byte_end":6755651,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755656,"byte_end":6755659,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755664,"byte_end":6755706,"line_start":887,"line_end":887,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755711,"byte_end":6755718,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756206,"byte_end":6756214,"line_start":907,"line_end":907,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755829,"byte_end":6755919,"line_start":894,"line_end":894,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755924,"byte_end":6755962,"line_start":895,"line_end":895,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755967,"byte_end":6755970,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755975,"byte_end":6755989,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6755994,"byte_end":6755997,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756002,"byte_end":6756009,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756014,"byte_end":6756045,"line_start":900,"line_end":900,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756050,"byte_end":6756053,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756058,"byte_end":6756087,"line_start":902,"line_end":902,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756092,"byte_end":6756119,"line_start":903,"line_end":903,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756124,"byte_end":6756150,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756155,"byte_end":6756182,"line_start":905,"line_end":905,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756187,"byte_end":6756194,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758676,"byte_end":6758682,"line_start":1010,"line_end":1010,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758397,"byte_end":6758450,"line_start":1004,"line_end":1004,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758451,"byte_end":6758454,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758455,"byte_end":6758518,"line_start":1006,"line_end":1006,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758519,"byte_end":6758522,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758523,"byte_end":6758621,"line_start":1008,"line_end":1008,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758622,"byte_end":6758664,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759853,"byte_end":6759859,"line_start":1059,"line_end":1059,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759334,"byte_end":6759394,"line_start":1042,"line_end":1042,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759399,"byte_end":6759402,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759407,"byte_end":6759421,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759426,"byte_end":6759429,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759434,"byte_end":6759441,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759446,"byte_end":6759502,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759507,"byte_end":6759551,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759556,"byte_end":6759559,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759564,"byte_end":6759593,"line_start":1050,"line_end":1050,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759598,"byte_end":6759628,"line_start":1051,"line_end":1051,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759633,"byte_end":6759661,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759666,"byte_end":6759669,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759674,"byte_end":6759704,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759709,"byte_end":6759743,"line_start":1055,"line_end":1055,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759748,"byte_end":6759780,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759785,"byte_end":6759792,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759797,"byte_end":6759841,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760236,"byte_end":6760240,"line_start":1076,"line_end":1076,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760020,"byte_end":6760051,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760056,"byte_end":6760059,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760064,"byte_end":6760078,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760083,"byte_end":6760086,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760091,"byte_end":6760098,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760103,"byte_end":6760135,"line_start":1071,"line_end":1071,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760140,"byte_end":6760143,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760148,"byte_end":6760182,"line_start":1073,"line_end":1073,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760187,"byte_end":6760212,"line_start":1074,"line_end":1074,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760217,"byte_end":6760224,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760846,"byte_end":6760853,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760355,"byte_end":6760397,"line_start":1083,"line_end":1083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760402,"byte_end":6760405,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760410,"byte_end":6760424,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760429,"byte_end":6760432,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760437,"byte_end":6760444,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760449,"byte_end":6760505,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760510,"byte_end":6760554,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760559,"byte_end":6760562,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760567,"byte_end":6760594,"line_start":1091,"line_end":1091,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760599,"byte_end":6760629,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760634,"byte_end":6760679,"line_start":1093,"line_end":1093,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760684,"byte_end":6760722,"line_start":1094,"line_end":1094,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760727,"byte_end":6760773,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760778,"byte_end":6760785,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760790,"byte_end":6760834,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762227,"byte_end":6762232,"line_start":1136,"line_end":1136,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760953,"byte_end":6760982,"line_start":1103,"line_end":1103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760987,"byte_end":6760990,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760995,"byte_end":6761073,"line_start":1105,"line_end":1105,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761078,"byte_end":6761081,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761086,"byte_end":6761098,"line_start":1107,"line_end":1107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761103,"byte_end":6761106,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761111,"byte_end":6761196,"line_start":1109,"line_end":1109,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761201,"byte_end":6761204,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761209,"byte_end":6761300,"line_start":1111,"line_end":1111,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761305,"byte_end":6761354,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761359,"byte_end":6761362,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761367,"byte_end":6761439,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761444,"byte_end":6761519,"line_start":1115,"line_end":1115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761524,"byte_end":6761527,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761532,"byte_end":6761625,"line_start":1117,"line_end":1117,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761630,"byte_end":6761723,"line_start":1118,"line_end":1118,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761728,"byte_end":6761766,"line_start":1119,"line_end":1119,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761771,"byte_end":6761774,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761779,"byte_end":6761793,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761798,"byte_end":6761801,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761806,"byte_end":6761813,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761818,"byte_end":6761867,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761872,"byte_end":6761916,"line_start":1125,"line_end":1125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761921,"byte_end":6761924,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761929,"byte_end":6761959,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761964,"byte_end":6761994,"line_start":1128,"line_end":1128,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6761999,"byte_end":6762033,"line_start":1129,"line_end":1129,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762038,"byte_end":6762050,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762055,"byte_end":6762092,"line_start":1131,"line_end":1131,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762097,"byte_end":6762102,"line_start":1132,"line_end":1132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762107,"byte_end":6762114,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762119,"byte_end":6762163,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762168,"byte_end":6762208,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763543,"byte_end":6763552,"line_start":1178,"line_end":1178,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762338,"byte_end":6762367,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762372,"byte_end":6762375,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762380,"byte_end":6762466,"line_start":1143,"line_end":1143,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762471,"byte_end":6762474,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762479,"byte_end":6762491,"line_start":1145,"line_end":1145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762496,"byte_end":6762499,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762504,"byte_end":6762599,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762604,"byte_end":6762641,"line_start":1148,"line_end":1148,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762646,"byte_end":6762649,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762654,"byte_end":6762743,"line_start":1150,"line_end":1150,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762748,"byte_end":6762751,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762756,"byte_end":6762830,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762835,"byte_end":6762838,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762843,"byte_end":6762857,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762862,"byte_end":6762865,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762870,"byte_end":6762877,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762882,"byte_end":6762931,"line_start":1157,"line_end":1157,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762936,"byte_end":6762980,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762985,"byte_end":6762988,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6762993,"byte_end":6763035,"line_start":1160,"line_end":1160,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763040,"byte_end":6763070,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763075,"byte_end":6763078,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763083,"byte_end":6763121,"line_start":1163,"line_end":1163,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763126,"byte_end":6763138,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763143,"byte_end":6763173,"line_start":1165,"line_end":1165,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763178,"byte_end":6763208,"line_start":1166,"line_end":1166,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763213,"byte_end":6763254,"line_start":1167,"line_end":1167,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763259,"byte_end":6763277,"line_start":1168,"line_end":1168,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763282,"byte_end":6763326,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763331,"byte_end":6763336,"line_start":1170,"line_end":1170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763341,"byte_end":6763344,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763349,"byte_end":6763383,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763388,"byte_end":6763400,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763405,"byte_end":6763457,"line_start":1174,"line_end":1174,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763462,"byte_end":6763467,"line_start":1175,"line_end":1175,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763472,"byte_end":6763479,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763484,"byte_end":6763524,"line_start":1177,"line_end":1177,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764934,"byte_end":6764940,"line_start":1215,"line_end":1215,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763670,"byte_end":6763710,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763715,"byte_end":6763718,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763723,"byte_end":6763818,"line_start":1185,"line_end":1185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763823,"byte_end":6763826,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763831,"byte_end":6763843,"line_start":1187,"line_end":1187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763848,"byte_end":6763851,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763856,"byte_end":6763941,"line_start":1189,"line_end":1189,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763946,"byte_end":6763949,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6763954,"byte_end":6764045,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764050,"byte_end":6764099,"line_start":1192,"line_end":1192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764104,"byte_end":6764107,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764112,"byte_end":6764184,"line_start":1194,"line_end":1194,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764189,"byte_end":6764264,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764269,"byte_end":6764272,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764277,"byte_end":6764370,"line_start":1197,"line_end":1197,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764375,"byte_end":6764468,"line_start":1198,"line_end":1198,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764473,"byte_end":6764511,"line_start":1199,"line_end":1199,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764516,"byte_end":6764519,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764524,"byte_end":6764538,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764543,"byte_end":6764546,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764551,"byte_end":6764558,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764563,"byte_end":6764612,"line_start":1204,"line_end":1204,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764617,"byte_end":6764661,"line_start":1205,"line_end":1205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764666,"byte_end":6764669,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764674,"byte_end":6764704,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764709,"byte_end":6764739,"line_start":1208,"line_end":1208,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764744,"byte_end":6764778,"line_start":1209,"line_end":1209,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764783,"byte_end":6764795,"line_start":1210,"line_end":1210,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764800,"byte_end":6764844,"line_start":1211,"line_end":1211,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764849,"byte_end":6764854,"line_start":1212,"line_end":1212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764859,"byte_end":6764866,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6764871,"byte_end":6764915,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765800,"byte_end":6765810,"line_start":1248,"line_end":1248,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765130,"byte_end":6765165,"line_start":1224,"line_end":1224,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765170,"byte_end":6765173,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765178,"byte_end":6765190,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765195,"byte_end":6765198,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765203,"byte_end":6765262,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765267,"byte_end":6765270,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765275,"byte_end":6765287,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765292,"byte_end":6765295,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765300,"byte_end":6765387,"line_start":1232,"line_end":1232,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765392,"byte_end":6765425,"line_start":1233,"line_end":1233,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765430,"byte_end":6765433,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765438,"byte_end":6765452,"line_start":1235,"line_end":1235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765457,"byte_end":6765460,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765465,"byte_end":6765472,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765477,"byte_end":6765526,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765531,"byte_end":6765575,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765580,"byte_end":6765583,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765588,"byte_end":6765618,"line_start":1241,"line_end":1241,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765623,"byte_end":6765635,"line_start":1242,"line_end":1242,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765640,"byte_end":6765682,"line_start":1243,"line_end":1243,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765687,"byte_end":6765725,"line_start":1244,"line_end":1244,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765730,"byte_end":6765759,"line_start":1245,"line_end":1245,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765764,"byte_end":6765769,"line_start":1246,"line_end":1246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765774,"byte_end":6765781,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766419,"byte_end":6766422,"line_start":1267,"line_end":1267,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6765962,"byte_end":6766008,"line_start":1253,"line_end":1253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766013,"byte_end":6766016,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766021,"byte_end":6766035,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766040,"byte_end":6766043,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766048,"byte_end":6766055,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766060,"byte_end":6766116,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766121,"byte_end":6766165,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766170,"byte_end":6766173,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766178,"byte_end":6766240,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766245,"byte_end":6766275,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766280,"byte_end":6766314,"line_start":1263,"line_end":1263,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766319,"byte_end":6766346,"line_start":1264,"line_end":1264,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766351,"byte_end":6766358,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766363,"byte_end":6766407,"line_start":1266,"line_end":1266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767145,"byte_end":6767153,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766518,"byte_end":6766608,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766613,"byte_end":6766651,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766656,"byte_end":6766659,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766664,"byte_end":6766678,"line_start":1275,"line_end":1275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766683,"byte_end":6766686,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766691,"byte_end":6766698,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766703,"byte_end":6766752,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766757,"byte_end":6766801,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766806,"byte_end":6766809,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766814,"byte_end":6766844,"line_start":1281,"line_end":1281,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766849,"byte_end":6766879,"line_start":1282,"line_end":1282,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766884,"byte_end":6766919,"line_start":1283,"line_end":1283,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766924,"byte_end":6766952,"line_start":1284,"line_end":1284,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766957,"byte_end":6766960,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766965,"byte_end":6766993,"line_start":1286,"line_end":1286,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6766998,"byte_end":6767026,"line_start":1287,"line_end":1287,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767031,"byte_end":6767072,"line_start":1288,"line_end":1288,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767077,"byte_end":6767084,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767089,"byte_end":6767133,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769664,"byte_end":6769673,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769615,"byte_end":6769652,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769980,"byte_end":6769983,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769940,"byte_end":6769968,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770088,"byte_end":6770096,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770031,"byte_end":6770076,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770764,"byte_end":6770775,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":298}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770716,"byte_end":6770752,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770886,"byte_end":6770889,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770840,"byte_end":6770860,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770865,"byte_end":6770874,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771027,"byte_end":6771036,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770958,"byte_end":6771001,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771006,"byte_end":6771015,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771192,"byte_end":6771201,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771110,"byte_end":6771166,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771171,"byte_end":6771180,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790089,"byte_end":6790094,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788373,"byte_end":6788422,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788423,"byte_end":6788426,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788427,"byte_end":6788440,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788441,"byte_end":6788444,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788445,"byte_end":6788524,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788525,"byte_end":6788528,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788529,"byte_end":6788536,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788537,"byte_end":6788570,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788571,"byte_end":6788574,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788575,"byte_end":6788673,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788674,"byte_end":6788766,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788767,"byte_end":6788797,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788798,"byte_end":6788805,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788806,"byte_end":6788809,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788810,"byte_end":6788886,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788887,"byte_end":6788890,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788891,"byte_end":6788918,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788919,"byte_end":6788922,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6788923,"byte_end":6789010,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789011,"byte_end":6789027,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789028,"byte_end":6789031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789032,"byte_end":6789039,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789040,"byte_end":6789089,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789090,"byte_end":6789134,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789135,"byte_end":6789138,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789139,"byte_end":6789177,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789178,"byte_end":6789207,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789208,"byte_end":6789211,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789212,"byte_end":6789242,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789243,"byte_end":6789273,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789274,"byte_end":6789277,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789278,"byte_end":6789352,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789353,"byte_end":6789387,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789388,"byte_end":6789391,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789392,"byte_end":6789443,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789444,"byte_end":6789490,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789491,"byte_end":6789534,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789535,"byte_end":6789540,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789541,"byte_end":6789548,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789549,"byte_end":6789552,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789553,"byte_end":6789574,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789575,"byte_end":6789578,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789579,"byte_end":6789674,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789675,"byte_end":6789773,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789774,"byte_end":6789793,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789794,"byte_end":6789797,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789798,"byte_end":6789805,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789806,"byte_end":6789839,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789840,"byte_end":6789843,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789844,"byte_end":6789874,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789875,"byte_end":6789905,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789906,"byte_end":6789938,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789939,"byte_end":6789956,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789957,"byte_end":6789989,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6789990,"byte_end":6790007,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790008,"byte_end":6790041,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790042,"byte_end":6790049,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790050,"byte_end":6790053,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790054,"byte_end":6790077,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791069,"byte_end":6791074,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790153,"byte_end":6790242,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790247,"byte_end":6790272,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790277,"byte_end":6790280,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790285,"byte_end":6790378,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790383,"byte_end":6790471,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790476,"byte_end":6790566,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790571,"byte_end":6790611,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790616,"byte_end":6790619,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790624,"byte_end":6790714,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790719,"byte_end":6790810,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790815,"byte_end":6790902,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790907,"byte_end":6790927,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790932,"byte_end":6790935,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790940,"byte_end":6791027,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791032,"byte_end":6791057,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795374,"byte_end":6795389,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791238,"byte_end":6791327,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791332,"byte_end":6791357,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791362,"byte_end":6791365,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791370,"byte_end":6791463,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791468,"byte_end":6791556,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791561,"byte_end":6791651,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791656,"byte_end":6791696,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791701,"byte_end":6791704,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791709,"byte_end":6791799,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791804,"byte_end":6791895,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791900,"byte_end":6791987,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6791992,"byte_end":6792012,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792017,"byte_end":6792020,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792025,"byte_end":6792112,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792117,"byte_end":6792142,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792147,"byte_end":6792150,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792155,"byte_end":6792167,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792172,"byte_end":6792175,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792180,"byte_end":6792272,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792277,"byte_end":6792364,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792369,"byte_end":6792381,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792386,"byte_end":6792389,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792394,"byte_end":6792401,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792406,"byte_end":6792439,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792444,"byte_end":6792447,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792452,"byte_end":6792482,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792487,"byte_end":6792514,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792519,"byte_end":6792531,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792536,"byte_end":6792611,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792616,"byte_end":6792655,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792660,"byte_end":6792696,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792701,"byte_end":6792712,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792717,"byte_end":6792722,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792727,"byte_end":6792734,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792739,"byte_end":6792742,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792747,"byte_end":6792841,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792846,"byte_end":6792877,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792882,"byte_end":6792885,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792890,"byte_end":6792985,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6792990,"byte_end":6793082,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793087,"byte_end":6793176,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793181,"byte_end":6793184,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793189,"byte_end":6793202,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793207,"byte_end":6793260,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793265,"byte_end":6793347,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793352,"byte_end":6793359,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793364,"byte_end":6793367,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793372,"byte_end":6793465,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793470,"byte_end":6793565,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793570,"byte_end":6793630,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793635,"byte_end":6793638,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793643,"byte_end":6793657,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793662,"byte_end":6793665,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793670,"byte_end":6793756,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793761,"byte_end":6793855,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793860,"byte_end":6793956,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6793961,"byte_end":6794053,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794058,"byte_end":6794114,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794119,"byte_end":6794122,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794127,"byte_end":6794134,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794139,"byte_end":6794195,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794200,"byte_end":6794244,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794249,"byte_end":6794252,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794257,"byte_end":6794288,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794293,"byte_end":6794296,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794301,"byte_end":6794378,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794383,"byte_end":6794414,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794419,"byte_end":6794422,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794427,"byte_end":6794457,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794462,"byte_end":6794492,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794497,"byte_end":6794500,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794505,"byte_end":6794582,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794587,"byte_end":6794659,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794664,"byte_end":6794667,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794672,"byte_end":6794693,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794698,"byte_end":6794758,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794763,"byte_end":6794845,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794850,"byte_end":6794866,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794871,"byte_end":6794950,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6794955,"byte_end":6794998,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795003,"byte_end":6795071,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795076,"byte_end":6795168,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795173,"byte_end":6795257,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795262,"byte_end":6795299,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795304,"byte_end":6795319,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795324,"byte_end":6795333,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795338,"byte_end":6795343,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795348,"byte_end":6795355,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798976,"byte_end":6798989,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795628,"byte_end":6795721,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795726,"byte_end":6795778,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795783,"byte_end":6795786,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795791,"byte_end":6795884,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795889,"byte_end":6795979,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6795984,"byte_end":6796073,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796078,"byte_end":6796132,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796137,"byte_end":6796140,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796145,"byte_end":6796238,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796243,"byte_end":6796336,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796341,"byte_end":6796434,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796439,"byte_end":6796470,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796475,"byte_end":6796478,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796483,"byte_end":6796572,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796577,"byte_end":6796602,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796607,"byte_end":6796610,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796615,"byte_end":6796627,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796632,"byte_end":6796635,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796640,"byte_end":6796733,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796738,"byte_end":6796771,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796776,"byte_end":6796779,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796784,"byte_end":6796879,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796884,"byte_end":6796922,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796927,"byte_end":6796930,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6796935,"byte_end":6797030,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797035,"byte_end":6797127,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797132,"byte_end":6797221,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797226,"byte_end":6797229,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797234,"byte_end":6797247,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797252,"byte_end":6797305,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797310,"byte_end":6797369,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797374,"byte_end":6797381,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797386,"byte_end":6797389,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797394,"byte_end":6797488,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797493,"byte_end":6797580,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797585,"byte_end":6797645,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797650,"byte_end":6797653,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797658,"byte_end":6797672,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797677,"byte_end":6797680,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797685,"byte_end":6797771,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797776,"byte_end":6797870,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797875,"byte_end":6797971,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6797976,"byte_end":6798068,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798073,"byte_end":6798129,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798134,"byte_end":6798137,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798142,"byte_end":6798149,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798154,"byte_end":6798210,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798215,"byte_end":6798259,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798264,"byte_end":6798267,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798272,"byte_end":6798303,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798308,"byte_end":6798311,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798316,"byte_end":6798393,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798398,"byte_end":6798429,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798434,"byte_end":6798437,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798442,"byte_end":6798472,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798477,"byte_end":6798507,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798512,"byte_end":6798515,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798520,"byte_end":6798597,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798602,"byte_end":6798674,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798679,"byte_end":6798682,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798687,"byte_end":6798708,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798713,"byte_end":6798773,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798778,"byte_end":6798860,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798865,"byte_end":6798881,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798886,"byte_end":6798921,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798926,"byte_end":6798935,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798940,"byte_end":6798945,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6798950,"byte_end":6798957,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799874,"byte_end":6799879,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799089,"byte_end":6799184,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799189,"byte_end":6799206,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799211,"byte_end":6799214,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799219,"byte_end":6799313,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799318,"byte_end":6799410,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799415,"byte_end":6799483,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799488,"byte_end":6799491,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799496,"byte_end":6799588,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799593,"byte_end":6799596,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799601,"byte_end":6799615,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799620,"byte_end":6799623,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799628,"byte_end":6799635,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799640,"byte_end":6799673,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799678,"byte_end":6799681,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799686,"byte_end":6799716,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799721,"byte_end":6799746,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799751,"byte_end":6799815,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799820,"byte_end":6799827,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799832,"byte_end":6799850,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6799855,"byte_end":6799862,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801041,"byte_end":6801046,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800003,"byte_end":6800054,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800059,"byte_end":6800062,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800067,"byte_end":6800157,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800162,"byte_end":6800256,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800261,"byte_end":6800355,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800360,"byte_end":6800412,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800417,"byte_end":6800420,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800425,"byte_end":6800518,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800523,"byte_end":6800526,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800531,"byte_end":6800545,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800550,"byte_end":6800553,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800558,"byte_end":6800565,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800570,"byte_end":6800619,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800624,"byte_end":6800668,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800673,"byte_end":6800676,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800681,"byte_end":6800710,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800715,"byte_end":6800748,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800753,"byte_end":6800758,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800763,"byte_end":6800802,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800807,"byte_end":6800861,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800866,"byte_end":6800871,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800876,"byte_end":6800894,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800899,"byte_end":6800904,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800909,"byte_end":6800948,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6800953,"byte_end":6801007,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801012,"byte_end":6801017,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801022,"byte_end":6801029,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802373,"byte_end":6802384,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801170,"byte_end":6801261,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801266,"byte_end":6801269,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801274,"byte_end":6801365,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801370,"byte_end":6801466,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801471,"byte_end":6801565,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801570,"byte_end":6801589,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801594,"byte_end":6801597,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801602,"byte_end":6801696,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801701,"byte_end":6801743,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801748,"byte_end":6801751,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801756,"byte_end":6801770,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801775,"byte_end":6801778,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801783,"byte_end":6801790,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801795,"byte_end":6801844,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801849,"byte_end":6801893,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801898,"byte_end":6801918,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801923,"byte_end":6801951,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801956,"byte_end":6801959,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801964,"byte_end":6801993,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6801998,"byte_end":6802031,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802036,"byte_end":6802041,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802046,"byte_end":6802085,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802090,"byte_end":6802144,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802149,"byte_end":6802154,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802159,"byte_end":6802226,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802231,"byte_end":6802236,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802241,"byte_end":6802280,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802285,"byte_end":6802339,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802344,"byte_end":6802349,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802354,"byte_end":6802361,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803530,"byte_end":6803539,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6802989,"byte_end":6803044,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803049,"byte_end":6803052,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803057,"byte_end":6803132,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803137,"byte_end":6803187,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803192,"byte_end":6803195,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803200,"byte_end":6803284,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803289,"byte_end":6803292,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803297,"byte_end":6803311,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803316,"byte_end":6803319,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803324,"byte_end":6803331,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803336,"byte_end":6803369,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803374,"byte_end":6803377,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803382,"byte_end":6803412,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803417,"byte_end":6803447,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803452,"byte_end":6803506,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803511,"byte_end":6803518,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806838,"byte_end":6806849,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803949,"byte_end":6804036,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804037,"byte_end":6804040,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804041,"byte_end":6804136,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804137,"byte_end":6804226,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804227,"byte_end":6804230,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804231,"byte_end":6804324,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804325,"byte_end":6804362,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804363,"byte_end":6804366,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804367,"byte_end":6804463,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804464,"byte_end":6804467,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804468,"byte_end":6804480,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804481,"byte_end":6804484,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804485,"byte_end":6804575,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804576,"byte_end":6804643,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804644,"byte_end":6804647,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804648,"byte_end":6804662,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804663,"byte_end":6804666,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804667,"byte_end":6804674,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804675,"byte_end":6804724,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804725,"byte_end":6804770,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804771,"byte_end":6804774,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804775,"byte_end":6804802,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804803,"byte_end":6804806,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804807,"byte_end":6804819,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804820,"byte_end":6804875,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804876,"byte_end":6804922,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804923,"byte_end":6804926,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6804927,"byte_end":6805001,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805002,"byte_end":6805052,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805053,"byte_end":6805056,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805057,"byte_end":6805086,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805087,"byte_end":6805143,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805144,"byte_end":6805155,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805156,"byte_end":6805159,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805160,"byte_end":6805241,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805242,"byte_end":6805247,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805248,"byte_end":6805255,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805256,"byte_end":6805259,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805260,"byte_end":6805354,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805355,"byte_end":6805358,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805359,"byte_end":6805453,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805454,"byte_end":6805539,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805540,"byte_end":6805543,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805544,"byte_end":6805643,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805644,"byte_end":6805742,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805743,"byte_end":6805763,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805764,"byte_end":6805767,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805768,"byte_end":6805775,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805776,"byte_end":6805825,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805826,"byte_end":6805857,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805858,"byte_end":6805903,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805904,"byte_end":6805907,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805908,"byte_end":6805929,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805930,"byte_end":6805960,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805961,"byte_end":6805966,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805967,"byte_end":6805970,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805971,"byte_end":6805991,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6805992,"byte_end":6806022,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806023,"byte_end":6806053,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806054,"byte_end":6806059,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806060,"byte_end":6806063,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806064,"byte_end":6806095,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806096,"byte_end":6806124,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806125,"byte_end":6806145,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806146,"byte_end":6806182,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806183,"byte_end":6806260,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806261,"byte_end":6806264,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806265,"byte_end":6806316,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806317,"byte_end":6806357,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806358,"byte_end":6806432,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806433,"byte_end":6806436,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806437,"byte_end":6806525,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806526,"byte_end":6806576,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806577,"byte_end":6806629,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806630,"byte_end":6806658,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806659,"byte_end":6806662,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806663,"byte_end":6806695,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806696,"byte_end":6806713,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806714,"byte_end":6806727,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806728,"byte_end":6806737,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806738,"byte_end":6806743,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806744,"byte_end":6806751,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806752,"byte_end":6806755,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806756,"byte_end":6806785,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806786,"byte_end":6806813,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6806814,"byte_end":6806823,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798657,"byte_end":7798660,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798611,"byte_end":7798639,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798640,"byte_end":7798649,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798785,"byte_end":7798794,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798716,"byte_end":7798767,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798768,"byte_end":7798777,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798904,"byte_end":7798921,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\default.rs","byte_start":7798855,"byte_end":7798896,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728631,"byte_end":6728649,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729827,"byte_end":6729835,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733588,"byte_end":6733589,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736674,"byte_end":6736680,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736745,"byte_end":6736751,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736767,"byte_end":6736773,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737106,"byte_end":6737112,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":672},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749226,"byte_end":6749232,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749579,"byte_end":6749585,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749873,"byte_end":6749879,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750226,"byte_end":6750232,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750344,"byte_end":6750350,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750745,"byte_end":6750751,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750854,"byte_end":6750860,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750980,"byte_end":6750986,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751335,"byte_end":6751341,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752554,"byte_end":6752559,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753066,"byte_end":6753071,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754721,"byte_end":6754726,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756396,"byte_end":6756401,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756591,"byte_end":6756596,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756874,"byte_end":6756879,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757020,"byte_end":6757025,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757218,"byte_end":6757223,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757389,"byte_end":6757394,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757484,"byte_end":6757489,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757962,"byte_end":6757967,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758077,"byte_end":6758082,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758204,"byte_end":6758209,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758315,"byte_end":6758320,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758821,"byte_end":6758827,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759001,"byte_end":6759007,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759062,"byte_end":6759068,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759314,"byte_end":6759320,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760000,"byte_end":6760006,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767298,"byte_end":6767304,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767867,"byte_end":6767873,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768000,"byte_end":6768006,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768080,"byte_end":6768086,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768251,"byte_end":6768257,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768405,"byte_end":6768411,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768714,"byte_end":6768720,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768911,"byte_end":6768917,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769736,"byte_end":6769745,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769770,"byte_end":6769779,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769801,"byte_end":6769810,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769924,"byte_end":6769933,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770175,"byte_end":6770184,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770382,"byte_end":6770391,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770519,"byte_end":6770528,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770702,"byte_end":6770711,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770822,"byte_end":6770833,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771293,"byte_end":6771304,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771451,"byte_end":6771462,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":6781400,"byte_end":6781408,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":6781532,"byte_end":6781540,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":6785387,"byte_end":6785392,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":6787147,"byte_end":6787158,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790141,"byte_end":6790146,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803664,"byte_end":6803669,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803839,"byte_end":6803844,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6807128,"byte_end":6807140,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6810172,"byte_end":6810175,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6810185,"byte_end":6810188,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6811115,"byte_end":6811118,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6814396,"byte_end":6814399,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6814798,"byte_end":6814801,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6815227,"byte_end":6815236,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6815246,"byte_end":6815255,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6815930,"byte_end":6815936,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6820922,"byte_end":6820927,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6829447,"byte_end":6829452,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6835442,"byte_end":6835447,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6835583,"byte_end":6835588,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6836094,"byte_end":6836098,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6838650,"byte_end":6838654,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6839186,"byte_end":6839190,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6848968,"byte_end":6848973,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6849010,"byte_end":6849015,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6849031,"byte_end":6849036,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6854650,"byte_end":6854655,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6728631,"byte_end":6728649,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6729827,"byte_end":6729835,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":30417},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6733588,"byte_end":6733589,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736674,"byte_end":6736680,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1940}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736745,"byte_end":6736751,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6736767,"byte_end":6736773,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6737106,"byte_end":6737112,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749226,"byte_end":6749232,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749579,"byte_end":6749585,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6281}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6749873,"byte_end":6749879,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1638}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750226,"byte_end":6750232,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1928}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750344,"byte_end":6750350,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750745,"byte_end":6750751,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750854,"byte_end":6750860,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6750980,"byte_end":6750986,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6751335,"byte_end":6751341,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6752554,"byte_end":6752559,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":166},"to":{"krate":0,"index":162}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6753066,"byte_end":6753071,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6754721,"byte_end":6754726,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756396,"byte_end":6756401,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2135}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756591,"byte_end":6756596,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6756874,"byte_end":6756879,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1638}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757020,"byte_end":6757025,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757218,"byte_end":6757223,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2124}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757389,"byte_end":6757394,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757484,"byte_end":6757489,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6757962,"byte_end":6757967,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1616}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758077,"byte_end":6758082,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1619}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758204,"byte_end":6758209,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1849}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758315,"byte_end":6758320,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6758821,"byte_end":6758827,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1638}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759001,"byte_end":6759007,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1950}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759062,"byte_end":6759068,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":162}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6759314,"byte_end":6759320,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6760000,"byte_end":6760006,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767298,"byte_end":6767304,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1858}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6767867,"byte_end":6767873,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1666}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768000,"byte_end":6768006,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1671}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768080,"byte_end":6768086,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768251,"byte_end":6768257,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1692}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768405,"byte_end":6768411,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768714,"byte_end":6768720,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6281}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\atomic.rs","byte_start":6768911,"byte_end":6768917,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1928}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769736,"byte_end":6769745,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1940}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769770,"byte_end":6769779,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769801,"byte_end":6769810,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1928}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6769924,"byte_end":6769933,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770175,"byte_end":6770184,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1638}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770382,"byte_end":6770391,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770519,"byte_end":6770528,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1666}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770702,"byte_end":6770711,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1671}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6770822,"byte_end":6770833,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771293,"byte_end":6771304,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":2135}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\collector.rs","byte_start":6771451,"byte_end":6771462,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":6781400,"byte_end":6781408,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\deferred.rs","byte_start":6781532,"byte_end":6781540,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":6785387,"byte_end":6785392,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\epoch.rs","byte_start":6787147,"byte_end":6787158,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6790141,"byte_end":6790146,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803664,"byte_end":6803669,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2135}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6803839,"byte_end":6803844,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\guard.rs","byte_start":6807128,"byte_end":6807140,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6810172,"byte_end":6810175,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":1940}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6810185,"byte_end":6810188,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6811115,"byte_end":6811118,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":1928}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6814396,"byte_end":6814399,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":2135}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6814798,"byte_end":6814801,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":6266}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6815227,"byte_end":6815236,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6815246,"byte_end":6815255,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6815930,"byte_end":6815936,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6820922,"byte_end":6820927,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\internal.rs","byte_start":6829447,"byte_end":6829452,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":451},"to":{"krate":0,"index":489}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6835442,"byte_end":6835447,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":1928}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6835583,"byte_end":6835588,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6836094,"byte_end":6836098,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6838650,"byte_end":6838654,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2135}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\list.rs","byte_start":6839186,"byte_end":6839190,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":4992}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6848968,"byte_end":6848973,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6849010,"byte_end":6849015,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":1940}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6849031,"byte_end":6849036,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tucker_alt\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.1\\src\\sync\\queue.rs","byte_start":6854650,"byte_end":6854655,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2135}}]}