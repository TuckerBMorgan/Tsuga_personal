{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8","program":"/Users/hiroko/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=630a1dab1a838e19","-C","extra-filename=-630a1dab1a838e19","--out-dir","/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps","-L","dependency=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps","--extern","futures_core=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libfutures_core-d68b4e2fab9f4636.rmeta","--extern","futures_io=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libfutures_io-5720b01c6a13e9cd.rmeta","--extern","futures_task=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libfutures_task-05e761650c633f40.rmeta","--extern","memchr=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libmemchr-8e547c2a17a48b8d.rmeta","--extern","pin_project=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libpin_project-a0dbe2449360f18b.rmeta","--extern","pin_utils=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libpin_utils-09e5825ea8d2367c.rmeta","--extern","slab=/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libslab-a37f95979e5d0aa1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hiroko/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/hiroko/rl/Tsuga_personal/target/rls/debug/deps/libfutures_util-630a1dab1a838e19.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[11605304640434316809,4571276616842054304]},"crate_root":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src","external_crates":[{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17558105223599808375,8641134072992365986]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[16391569226461738429,2396501197197794813]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15218473559130501536,10412498800867537882]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15002797972794468225,1552711559034990603]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4646254705103034450,52903416994518094]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12433302035576608964,14843331431738146314]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13168698047779456167,15405996809305099045]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1207314236617024250,12058638532209810988]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9504436150329069197,1560099004311970383]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3218777832644284082,1601517877419470567]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17216814665906341115,9093190657978815784]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11427017693389760726,5196118128760041763]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[12191498035001760627,7809175471304527825]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13343118316727369485,17294320461155615024]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[1642168034010785250,9564000522961009442]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":16,"id":{"name":"futures_core","disambiguator":[855789017062525589,16561019229623159282]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","num":17,"id":{"name":"pin_utils","disambiguator":[7589176443691725190,16093333701456548169]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","num":18,"id":{"name":"futures_task","disambiguator":[9041499458678680705,15973877324409119479]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","num":19,"id":{"name":"once_cell","disambiguator":[14055028504419523487,1631505655955144591]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","num":20,"id":{"name":"pin_project","disambiguator":[14945130771901594545,13277785152832233820]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","num":21,"id":{"name":"pin_project_internal","disambiguator":[8099157643208993035,10315345117764884064]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","num":22,"id":{"name":"slab","disambiguator":[14435110741701195862,13440999491209112952]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","num":23,"id":{"name":"futures_io","disambiguator":[16046268904650294477,11221644060594239537]}},{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","num":24,"id":{"name":"memchr","disambiguator":[7780152702004321814,1255476627536403405]}}],"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":131},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":1863,"byte_end":1868,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":7},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":1889,"byte_end":1896,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":11},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12860,"byte_end":12869,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":16,"index":14},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12871,"byte_end":12885,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":16,"index":17},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12919,"byte_end":12930,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":2,"index":9132},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12932,"byte_end":12938,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":16,"index":32},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12940,"byte_end":12949,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":111},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12975,"byte_end":12984,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":77},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12986,"byte_end":13000,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":132},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13002,"byte_end":13017,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4526},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":18623,"byte_end":18634,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":3965},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13132,"byte_end":13139,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":3858},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13141,"byte_end":13145,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13147,"byte_end":13156,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4352},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13158,"byte_end":13165,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4143},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13167,"byte_end":13177,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4075},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13179,"byte_end":13182,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4420},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13184,"byte_end":13194,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4269},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13196,"byte_end":13200,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4474},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13202,"byte_end":13211,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4199},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13213,"byte_end":13220,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4019},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13316,"byte_end":13329,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4526},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13378,"byte_end":13389,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13589,"byte_end":13595,"line_start":31,"line_end":31,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13597,"byte_end":13607,"line_start":31,"line_end":31,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4929},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13659,"byte_end":13666,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5096},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13668,"byte_end":13675,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5165},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13677,"byte_end":13683,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5303},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13685,"byte_end":13695,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5234},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13697,"byte_end":13706,"line_start":35,"line_end":35,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4571},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13708,"byte_end":13718,"line_start":35,"line_end":35,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5441},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13720,"byte_end":13726,"line_start":35,"line_end":35,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5372},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13728,"byte_end":13733,"line_start":35,"line_end":35,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5013},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13735,"byte_end":13741,"line_start":35,"line_end":35,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4872},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13743,"byte_end":13759,"line_start":35,"line_end":35,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13765,"byte_end":13777,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5594},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13779,"byte_end":13791,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5511},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13793,"byte_end":13804,"line_start":36,"line_end":36,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4735},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13806,"byte_end":13816,"line_start":36,"line_end":36,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":464},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13988,"byte_end":13992,"line_start":46,"line_end":46,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5660},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":13994,"byte_end":13998,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14039,"byte_end":14046,"line_start":49,"line_end":49,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5666},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14048,"byte_end":14055,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":514},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14102,"byte_end":14112,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5672},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14114,"byte_end":14123,"line_start":52,"line_end":52,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14178,"byte_end":14192,"line_start":55,"line_end":55,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5731},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14194,"byte_end":14206,"line_start":55,"line_end":55,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5790},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14244,"byte_end":14256,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14296,"byte_end":14303,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14305,"byte_end":14311,"line_start":61,"line_end":61,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14348,"byte_end":14351,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14353,"byte_end":14355,"line_start":64,"line_end":64,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14357,"byte_end":14362,"line_start":64,"line_end":64,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5838},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14364,"byte_end":14369,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14404,"byte_end":14408,"line_start":67,"line_end":67,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14410,"byte_end":14415,"line_start":67,"line_end":67,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":657},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14417,"byte_end":14422,"line_start":67,"line_end":67,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14424,"byte_end":14429,"line_start":67,"line_end":67,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5940},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14431,"byte_end":14435,"line_start":67,"line_end":67,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5993},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14437,"byte_end":14442,"line_start":67,"line_end":67,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6060},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14444,"byte_end":14449,"line_start":67,"line_end":67,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6141},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14451,"byte_end":14456,"line_start":67,"line_end":67,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":699},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14551,"byte_end":14559,"line_start":72,"line_end":72,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14561,"byte_end":14568,"line_start":72,"line_end":72,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14607,"byte_end":14613,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6236},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14615,"byte_end":14621,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14720,"byte_end":14730,"line_start":80,"line_end":80,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6244},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14732,"byte_end":14741,"line_start":80,"line_end":80,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14789,"byte_end":14797,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14799,"byte_end":14808,"line_start":84,"line_end":84,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14810,"byte_end":14819,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14821,"byte_end":14830,"line_start":84,"line_end":84,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6320},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14832,"byte_end":14839,"line_start":84,"line_end":84,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6373},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14841,"byte_end":14849,"line_start":84,"line_end":84,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6440},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14851,"byte_end":14859,"line_start":84,"line_end":84,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6521},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14861,"byte_end":14869,"line_start":84,"line_end":84,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":842},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14974,"byte_end":14986,"line_start":90,"line_end":90,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":836},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":14988,"byte_end":14998,"line_start":90,"line_end":90,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15045,"byte_end":15055,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6616},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15057,"byte_end":15066,"line_start":93,"line_end":93,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":895},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15163,"byte_end":15172,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6624},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15174,"byte_end":15182,"line_start":98,"line_end":98,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6630},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15220,"byte_end":15226,"line_start":101,"line_end":101,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6706},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15363,"byte_end":15372,"line_start":107,"line_end":107,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":11915},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15374,"byte_end":15383,"line_start":107,"line_end":107,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6727},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15385,"byte_end":15396,"line_start":107,"line_end":107,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6723},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15398,"byte_end":15415,"line_start":107,"line_end":107,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6738},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15417,"byte_end":15424,"line_start":107,"line_end":107,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6739},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":15417,"byte_end":15424,"line_start":107,"line_end":107,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":6722}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":11873,"byte_end":11882,"line_start":311,"line_end":311,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":11884,"byte_end":11896,"line_start":311,"line_end":311,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":62},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137060,"byte_end":137069,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":16,"index":65},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137071,"byte_end":137085,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":16,"index":82},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137119,"byte_end":137130,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":16,"index":68},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137132,"byte_end":137138,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":16,"index":97},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137140,"byte_end":137149,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8254},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":144575,"byte_end":144581,"line_start":153,"line_end":153,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8306},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":144758,"byte_end":144769,"line_start":159,"line_end":159,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8539},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146110,"byte_end":146121,"line_start":199,"line_end":199,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":6751},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137265,"byte_end":137270,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":6808},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137272,"byte_end":137279,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":6864},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137281,"byte_end":137287,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":6909},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137289,"byte_end":137294,"line_start":16,"line_end":16,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":6954},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137296,"byte_end":137305,"line_start":16,"line_end":16,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7003},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137307,"byte_end":137313,"line_start":16,"line_end":16,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7076},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137315,"byte_end":137324,"line_start":16,"line_end":16,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7605},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137326,"byte_end":137333,"line_start":16,"line_end":16,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7209},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137335,"byte_end":137342,"line_start":16,"line_end":16,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7268},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137344,"byte_end":137348,"line_start":16,"line_end":16,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7347},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137350,"byte_end":137357,"line_start":16,"line_end":16,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7413},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137363,"byte_end":137367,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7471},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137369,"byte_end":137376,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7545},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137378,"byte_end":137381,"line_start":17,"line_end":17,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7694},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137383,"byte_end":137387,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7759},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137389,"byte_end":137393,"line_start":17,"line_end":17,"column_start":31,"column_end":35},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7710},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137395,"byte_end":137403,"line_start":17,"line_end":17,"column_start":37,"column_end":45},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8358},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137405,"byte_end":137409,"line_start":17,"line_end":17,"column_start":47,"column_end":51},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7702},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137411,"byte_end":137425,"line_start":17,"line_end":17,"column_start":53,"column_end":67},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7808},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137427,"byte_end":137431,"line_start":17,"line_end":17,"column_start":69,"column_end":73},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7857},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137433,"byte_end":137442,"line_start":17,"line_end":17,"column_start":75,"column_end":84},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1819},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137444,"byte_end":137453,"line_start":17,"line_end":17,"column_start":86,"column_end":95},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7462},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137459,"byte_end":137471,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7933},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137473,"byte_end":137477,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":7982},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137479,"byte_end":137488,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8058},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137490,"byte_end":137499,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8121},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137501,"byte_end":137505,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8191},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137507,"byte_end":137510,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8539},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137562,"byte_end":137573,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8254},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137624,"byte_end":137630,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8306},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137681,"byte_end":137692,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":11870},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137928,"byte_end":137943,"line_start":36,"line_end":36,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":11825},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137945,"byte_end":137953,"line_start":36,"line_end":36,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":11757},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":137955,"byte_end":137972,"line_start":36,"line_end":36,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9922},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262263,"byte_end":262276,"line_start":137,"line_end":137,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1930}},{"kind":"Use","ref_id":{"krate":0,"index":2284},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138265,"byte_end":138275,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8588},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138277,"byte_end":138284,"line_start":46,"line_end":46,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8661},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138286,"byte_end":138293,"line_start":46,"line_end":46,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8815},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138295,"byte_end":138305,"line_start":46,"line_end":46,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8738},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138307,"byte_end":138316,"line_start":46,"line_end":46,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8889},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138318,"byte_end":138328,"line_start":46,"line_end":46,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9015},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138330,"byte_end":138336,"line_start":46,"line_end":46,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":8938},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138338,"byte_end":138343,"line_start":46,"line_end":46,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9089},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138345,"byte_end":138351,"line_start":46,"line_end":46,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9426},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138357,"byte_end":138367,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9482},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138369,"byte_end":138378,"line_start":47,"line_end":47,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9233},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138380,"byte_end":138389,"line_start":47,"line_end":47,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9306},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138391,"byte_end":138403,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9376},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138405,"byte_end":138415,"line_start":47,"line_end":47,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9527},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138417,"byte_end":138424,"line_start":47,"line_end":47,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9167},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138426,"byte_end":138436,"line_start":47,"line_end":47,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9159},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138438,"byte_end":138445,"line_start":47,"line_end":47,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9671},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138451,"byte_end":138463,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138465,"byte_end":138477,"line_start":48,"line_end":48,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9747},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138479,"byte_end":138491,"line_start":48,"line_end":48,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9606},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138493,"byte_end":138502,"line_start":48,"line_end":48,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9922},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138627,"byte_end":138640,"line_start":54,"line_end":54,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":11709},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138775,"byte_end":138793,"line_start":58,"line_end":58,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":11661},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138795,"byte_end":138806,"line_start":58,"line_end":58,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":11593},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138808,"byte_end":138828,"line_start":58,"line_end":58,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2499},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138885,"byte_end":138889,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9941},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138891,"byte_end":138895,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2517},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138934,"byte_end":138940,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9950},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138942,"byte_end":138948,"line_start":66,"line_end":66,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138985,"byte_end":138990,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9959},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":138992,"byte_end":138997,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2569},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139032,"byte_end":139036,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":9965},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139038,"byte_end":139042,"line_start":72,"line_end":72,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2594},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139083,"byte_end":139090,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":10007},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139092,"byte_end":139099,"line_start":75,"line_end":75,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2627},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139140,"byte_end":139147,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2619},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139149,"byte_end":139155,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2650},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139194,"byte_end":139200,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":10013},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139202,"byte_end":139208,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":2686},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139247,"byte_end":139253,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":10073},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139255,"byte_end":139261,"line_start":84,"line_end":84,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":10175},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139410,"byte_end":139424,"line_start":90,"line_end":90,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":10525},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959778,"byte_end":8959782,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10213}},{"kind":"Use","ref_id":{"krate":0,"index":10526},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959778,"byte_end":8959782,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10294}},{"kind":"Use","ref_id":{"krate":0,"index":10505},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959784,"byte_end":8959791,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10213}},{"kind":"Use","ref_id":{"krate":0,"index":10506},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959784,"byte_end":8959791,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10295}},{"kind":"Use","ref_id":{"krate":0,"index":10495},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959793,"byte_end":8959803,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":10213}},{"kind":"Use","ref_id":{"krate":0,"index":10514},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959805,"byte_end":8959815,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":10213}},{"kind":"Use","ref_id":{"krate":0,"index":10379},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139574,"byte_end":139590,"line_start":96,"line_end":96,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":10482},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139704,"byte_end":139714,"line_start":101,"line_end":101,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":10460},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139716,"byte_end":139725,"line_start":101,"line_end":101,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1819},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":11955,"byte_end":11964,"line_start":314,"line_end":314,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":11966,"byte_end":11978,"line_start":314,"line_end":314,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":260},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":348784,"byte_end":348791,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":274},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":348850,"byte_end":348855,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":305},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":348915,"byte_end":348924,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":310},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":348926,"byte_end":348934,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":16,"index":142},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":348982,"byte_end":348993,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":2733},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349031,"byte_end":349039,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":2736},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349041,"byte_end":349054,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":2,"index":9307},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349087,"byte_end":349094,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":2,"index":35028},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349096,"byte_end":349100,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":2,"index":9317},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349102,"byte_end":349107,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":2,"index":35068},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349109,"byte_end":349117,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":2,"index":35077},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349119,"byte_end":349133,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":10},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349165,"byte_end":349170,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":13},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349172,"byte_end":349182,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":16},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349184,"byte_end":349194,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":111},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349200,"byte_end":349209,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":77},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349211,"byte_end":349225,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":132},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349227,"byte_end":349242,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":237},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349270,"byte_end":349280,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":18,"index":238},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":349328,"byte_end":349342,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356533,"byte_end":356542,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356544,"byte_end":356554,"line_start":18,"line_end":18,"column_start":16,"column_end":26},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356556,"byte_end":356565,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356567,"byte_end":356579,"line_start":18,"line_end":18,"column_start":39,"column_end":51},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":1,"index":2704},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356581,"byte_end":356586,"line_start":18,"line_end":18,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":1,"index":7195},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356588,"byte_end":356597,"line_start":18,"line_end":18,"column_start":60,"column_end":69},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":1,"index":7258},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356603,"byte_end":356610,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":1,"index":3132},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356612,"byte_end":356622,"line_start":19,"line_end":19,"column_start":14,"column_end":24},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":1,"index":2702},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356624,"byte_end":356630,"line_start":19,"line_end":19,"column_start":26,"column_end":32},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":1,"index":7272},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356632,"byte_end":356640,"line_start":19,"line_end":19,"column_start":34,"column_end":42},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10540},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357370,"byte_end":357380,"line_start":44,"line_end":44,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10577},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357425,"byte_end":357434,"line_start":47,"line_end":47,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10633},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357479,"byte_end":357488,"line_start":50,"line_end":50,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10686},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357523,"byte_end":357528,"line_start":53,"line_end":53,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10742},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357563,"byte_end":357568,"line_start":56,"line_end":56,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":2997},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357602,"byte_end":357606,"line_start":59,"line_end":59,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10750},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357608,"byte_end":357612,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3019},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357655,"byte_end":357663,"line_start":62,"line_end":62,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10815},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357665,"byte_end":357672,"line_start":62,"line_end":62,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10886},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357710,"byte_end":357716,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3081},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357752,"byte_end":357757,"line_start":68,"line_end":68,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3079},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357759,"byte_end":357764,"line_start":68,"line_end":68,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10914},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357806,"byte_end":357813,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10922},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":357848,"byte_end":357853,"line_start":74,"line_end":74,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10930},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358085,"byte_end":358090,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10981},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358123,"byte_end":358127,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10990},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358178,"byte_end":358190,"line_start":90,"line_end":90,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":10999},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358235,"byte_end":358244,"line_start":93,"line_end":93,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11008},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358287,"byte_end":358295,"line_start":96,"line_end":96,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11019},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358342,"byte_end":358351,"line_start":99,"line_end":99,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11029},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358404,"byte_end":358416,"line_start":102,"line_end":102,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11040},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358461,"byte_end":358470,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3324},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358508,"byte_end":358514,"line_start":108,"line_end":108,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3322},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358516,"byte_end":358522,"line_start":108,"line_end":108,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11051},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358556,"byte_end":358560,"line_start":111,"line_end":111,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3366},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358594,"byte_end":358598,"line_start":114,"line_end":114,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3364},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358600,"byte_end":358604,"line_start":114,"line_end":114,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11060},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358641,"byte_end":358649,"line_start":117,"line_end":117,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11066},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358651,"byte_end":358660,"line_start":117,"line_end":117,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3421},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358662,"byte_end":358674,"line_start":117,"line_end":117,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3422},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358662,"byte_end":358674,"line_start":117,"line_end":117,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3437}},{"kind":"Use","ref_id":{"krate":0,"index":11072},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358708,"byte_end":358712,"line_start":120,"line_end":120,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11121},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358749,"byte_end":358755,"line_start":123,"line_end":123,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11128},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358790,"byte_end":358795,"line_start":126,"line_end":126,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11137},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358848,"byte_end":358861,"line_start":129,"line_end":129,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":11146},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":358904,"byte_end":358912,"line_start":132,"line_end":132,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":2759}},{"kind":"Use","ref_id":{"krate":0,"index":3545},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12452,"byte_end":12464,"line_start":336,"line_end":336,"column_start":36,"column_end":48},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3562},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12466,"byte_end":12479,"line_start":336,"line_end":336,"column_start":50,"column_end":63},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3573},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12481,"byte_end":12493,"line_start":336,"line_end":336,"column_start":65,"column_end":77},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12495,"byte_end":12510,"line_start":336,"line_end":336,"column_start":79,"column_end":94},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11414},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007890,"byte_end":9007906,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":11312}},{"kind":"Use","ref_id":{"krate":0,"index":11335},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007908,"byte_end":9007913,"line_start":9,"line_end":9,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":11312}},{"kind":"Use","ref_id":{"krate":0,"index":11372},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007915,"byte_end":9007930,"line_start":9,"line_end":9,"column_start":48,"column_end":63},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":11312}},{"kind":"Use","ref_id":{"krate":0,"index":11391},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007932,"byte_end":9007942,"line_start":9,"line_end":9,"column_start":65,"column_end":75},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":11312}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":15},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":11312}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":650,"byte_end":671,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":876,"byte_end":953,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":988},{"krate":0,"index":6688},{"krate":0,"index":6717},{"krate":0,"index":6718},{"krate":0,"index":6719},{"krate":0,"index":6720},{"krate":0,"index":6721},{"krate":0,"index":6722},{"krate":0,"index":12653},{"krate":0,"index":989}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"/ Futures","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12601,"byte_end":12612,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12613,"byte_end":12616,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Future`s,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12617,"byte_end":12691,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12692,"byte_end":12770,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Future` types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/mod.rs","byte_start":12771,"byte_end":12801,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35827,"byte_end":35832,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":3800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35851,"byte_end":35857,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":3800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3807},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35876,"byte_end":35881,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":3800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35801,"byte_end":35808,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3803},{"krate":0,"index":3805},{"krate":0,"index":3807}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = FlattenProj))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35737,"byte_end":35774,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35801,"byte_end":35808,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35737,"byte_end":35774,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40213,"byte_end":40217,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40134,"byte_end":40201,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40102,"byte_end":40116,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40213,"byte_end":40217,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":3884},{"krate":0,"index":3885}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40102,"byte_end":40116,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41994,"byte_end":42004,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40372,"byte_end":40440,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40445,"byte_end":40448,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40453,"byte_end":40521,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40526,"byte_end":40571,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40576,"byte_end":40579,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40584,"byte_end":40598,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40603,"byte_end":40606,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40611,"byte_end":40618,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40623,"byte_end":40664,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40669,"byte_end":40700,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40705,"byte_end":40761,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40766,"byte_end":40790,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40795,"byte_end":40830,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40835,"byte_end":40860,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40865,"byte_end":40868,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40873,"byte_end":40922,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40927,"byte_end":40930,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40935,"byte_end":40977,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40982,"byte_end":41021,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41026,"byte_end":41065,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41070,"byte_end":41087,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41092,"byte_end":41095,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41100,"byte_end":41170,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41175,"byte_end":41214,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41219,"byte_end":41260,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41265,"byte_end":41291,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41296,"byte_end":41299,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41304,"byte_end":41314,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41319,"byte_end":41336,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41341,"byte_end":41375,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41380,"byte_end":41427,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41432,"byte_end":41481,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41486,"byte_end":41548,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41553,"byte_end":41577,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41582,"byte_end":41625,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41630,"byte_end":41687,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41692,"byte_end":41767,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41772,"byte_end":41802,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41807,"byte_end":41824,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41829,"byte_end":41843,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41848,"byte_end":41932,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41937,"byte_end":41946,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41951,"byte_end":41956,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41961,"byte_end":41970,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":41975,"byte_end":41982,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":3906},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":42975,"byte_end":42985,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":3903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":43049,"byte_end":43057,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":3903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3903},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":42957,"byte_end":42960,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        #[pin]\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":3906},{"krate":0,"index":3908}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":42880,"byte_end":42947,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private(project = MapProj, project_replace = MapProjOwn))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":42799,"byte_end":42862,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":42957,"byte_end":42960,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3940}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":42799,"byte_end":42862,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":16376,"byte_end":16383,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":3967}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3985},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":16376,"byte_end":16383,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3989}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4019},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":16634,"byte_end":16647,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4021}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4039},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":16634,"byte_end":16647,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4075},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":16987,"byte_end":16990,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4078}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":16987,"byte_end":16990,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4143},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17197,"byte_end":17207,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4145}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4163},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17197,"byte_end":17207,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4167}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4199},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17413,"byte_end":17420,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4202}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4224},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17413,"byte_end":17420,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":4228},{"krate":0,"index":4229}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4269},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17613,"byte_end":17617,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4273}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4299},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17613,"byte_end":17617,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4305}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4352},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17862,"byte_end":17869,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4355}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4377},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":17862,"byte_end":17869,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4382}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4420},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":18110,"byte_end":18120,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4422}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4440},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":18110,"byte_end":18120,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":4443},{"krate":0,"index":4444}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":18333,"byte_end":18342,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4476}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4494},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":18333,"byte_end":18342,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":4497},{"krate":0,"index":4498}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4526},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44597,"byte_end":44608,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44518,"byte_end":44585,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44486,"byte_end":44500,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44597,"byte_end":44608,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::future::future::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4552},{"krate":0,"index":4553}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44486,"byte_end":44500,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":45565,"byte_end":45571,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":45422,"byte_end":45485,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":45486,"byte_end":45553,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":45945,"byte_end":45955,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":45856,"byte_end":45933,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47976,"byte_end":47980,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47707,"byte_end":47781,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47786,"byte_end":47859,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47864,"byte_end":47932,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47937,"byte_end":47964,"line_start":108,"line_end":108,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":48475,"byte_end":48484,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":48332,"byte_end":48385,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":48390,"byte_end":48393,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":48398,"byte_end":48463,"line_start":122,"line_end":122,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":55080,"byte_end":55087,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54890,"byte_end":54952,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54957,"byte_end":54960,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54965,"byte_end":55045,"line_start":341,"line_end":341,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":55050,"byte_end":55068,"line_start":342,"line_end":342,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19324,"byte_end":19333,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19225,"byte_end":19299,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19300,"byte_end":19313,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20165,"byte_end":20168,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19348,"byte_end":19423,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19428,"byte_end":19451,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19456,"byte_end":19459,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19464,"byte_end":19538,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19543,"byte_end":19614,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19619,"byte_end":19681,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19686,"byte_end":19689,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19694,"byte_end":19765,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19770,"byte_end":19841,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19846,"byte_end":19867,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19872,"byte_end":19875,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19880,"byte_end":19894,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19899,"byte_end":19902,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19907,"byte_end":19914,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19919,"byte_end":19960,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19965,"byte_end":20000,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20005,"byte_end":20008,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20013,"byte_end":20042,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20047,"byte_end":20090,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20095,"byte_end":20131,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20136,"byte_end":20145,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20150,"byte_end":20157,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20565,"byte_end":20573,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20338,"byte_end":20413,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20418,"byte_end":20441,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20446,"byte_end":20449,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20454,"byte_end":20532,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20537,"byte_end":20557,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21585,"byte_end":21589,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20732,"byte_end":20808,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20813,"byte_end":20856,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20861,"byte_end":20864,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20869,"byte_end":20940,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":20945,"byte_end":21019,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21024,"byte_end":21040,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21045,"byte_end":21048,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21053,"byte_end":21128,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21133,"byte_end":21144,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21149,"byte_end":21152,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21157,"byte_end":21228,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21233,"byte_end":21259,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21264,"byte_end":21267,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21272,"byte_end":21286,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21291,"byte_end":21294,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21299,"byte_end":21306,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21311,"byte_end":21352,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21357,"byte_end":21392,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21397,"byte_end":21400,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21405,"byte_end":21439,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21444,"byte_end":21509,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21514,"byte_end":21551,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21556,"byte_end":21565,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21570,"byte_end":21577,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22459,"byte_end":22470,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21801,"byte_end":21876,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21881,"byte_end":21902,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21907,"byte_end":21910,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":21915,"byte_end":21995,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22000,"byte_end":22072,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22077,"byte_end":22080,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22085,"byte_end":22099,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22104,"byte_end":22107,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22112,"byte_end":22119,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22124,"byte_end":22165,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22170,"byte_end":22205,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22210,"byte_end":22213,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22218,"byte_end":22232,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22237,"byte_end":22265,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22270,"byte_end":22306,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22311,"byte_end":22323,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22328,"byte_end":22366,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22371,"byte_end":22377,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22382,"byte_end":22385,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22390,"byte_end":22425,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22430,"byte_end":22439,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22444,"byte_end":22451,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23309,"byte_end":23321,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22650,"byte_end":22726,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22731,"byte_end":22752,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22757,"byte_end":22760,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22765,"byte_end":22844,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22849,"byte_end":22921,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22926,"byte_end":22929,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22934,"byte_end":22948,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22953,"byte_end":22956,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22961,"byte_end":22968,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":22973,"byte_end":23014,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23019,"byte_end":23054,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23059,"byte_end":23062,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23067,"byte_end":23081,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23086,"byte_end":23114,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23119,"byte_end":23155,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23160,"byte_end":23172,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23177,"byte_end":23215,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23220,"byte_end":23226,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23231,"byte_end":23234,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23239,"byte_end":23275,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23280,"byte_end":23289,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23294,"byte_end":23301,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24100,"byte_end":24111,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23502,"byte_end":23555,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23560,"byte_end":23563,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23568,"byte_end":23642,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23647,"byte_end":23710,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23715,"byte_end":23718,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23723,"byte_end":23737,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23742,"byte_end":23745,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23750,"byte_end":23757,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23762,"byte_end":23803,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23808,"byte_end":23843,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23848,"byte_end":23883,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23888,"byte_end":23891,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23896,"byte_end":23926,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23931,"byte_end":23969,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":23974,"byte_end":24025,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24030,"byte_end":24066,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24071,"byte_end":24080,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24085,"byte_end":24092,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24976,"byte_end":24983,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24250,"byte_end":24314,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24319,"byte_end":24355,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24360,"byte_end":24363,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24368,"byte_end":24437,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24442,"byte_end":24479,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24484,"byte_end":24487,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24492,"byte_end":24552,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24557,"byte_end":24560,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24565,"byte_end":24636,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24641,"byte_end":24667,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24672,"byte_end":24675,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24680,"byte_end":24694,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24699,"byte_end":24702,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24707,"byte_end":24714,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24719,"byte_end":24760,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24765,"byte_end":24800,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24805,"byte_end":24808,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24813,"byte_end":24859,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24864,"byte_end":24905,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24910,"byte_end":24942,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24947,"byte_end":24956,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":24961,"byte_end":24968,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26088,"byte_end":26102,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25197,"byte_end":25272,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25277,"byte_end":25300,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25305,"byte_end":25308,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25313,"byte_end":25385,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25390,"byte_end":25463,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25468,"byte_end":25482,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25487,"byte_end":25490,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25495,"byte_end":25565,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25570,"byte_end":25588,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25593,"byte_end":25596,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25601,"byte_end":25615,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25620,"byte_end":25623,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25628,"byte_end":25635,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25640,"byte_end":25681,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25686,"byte_end":25721,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25726,"byte_end":25769,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25774,"byte_end":25777,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25782,"byte_end":25822,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25827,"byte_end":25893,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25906,"byte_end":25959,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":25964,"byte_end":26010,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26015,"byte_end":26054,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26059,"byte_end":26068,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26073,"byte_end":26080,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27190,"byte_end":27194,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26295,"byte_end":26368,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26373,"byte_end":26439,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26444,"byte_end":26462,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26467,"byte_end":26470,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26475,"byte_end":26542,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26547,"byte_end":26612,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26617,"byte_end":26689,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26694,"byte_end":26768,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26773,"byte_end":26799,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26804,"byte_end":26807,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26812,"byte_end":26883,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26888,"byte_end":26963,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":26968,"byte_end":27022,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27027,"byte_end":27030,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27035,"byte_end":27109,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27114,"byte_end":27182,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28034,"byte_end":28041,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27340,"byte_end":27406,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27411,"byte_end":27414,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27419,"byte_end":27494,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27499,"byte_end":27572,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27577,"byte_end":27646,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27651,"byte_end":27701,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27706,"byte_end":27709,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27714,"byte_end":27728,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27733,"byte_end":27736,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27741,"byte_end":27748,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27753,"byte_end":27794,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27799,"byte_end":27834,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27839,"byte_end":27842,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27847,"byte_end":27876,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27881,"byte_end":27959,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":27964,"byte_end":28000,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28005,"byte_end":28014,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28019,"byte_end":28026,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29579,"byte_end":29591,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28223,"byte_end":28277,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28282,"byte_end":28285,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28290,"byte_end":28365,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28370,"byte_end":28444,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28449,"byte_end":28523,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28528,"byte_end":28579,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28584,"byte_end":28587,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28592,"byte_end":28667,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28672,"byte_end":28742,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28747,"byte_end":28814,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28819,"byte_end":28894,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28899,"byte_end":28971,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28976,"byte_end":28979,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":28984,"byte_end":29048,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29053,"byte_end":29110,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29115,"byte_end":29118,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29123,"byte_end":29137,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29142,"byte_end":29145,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29150,"byte_end":29157,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29162,"byte_end":29203,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29208,"byte_end":29258,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29263,"byte_end":29266,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29271,"byte_end":29305,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29310,"byte_end":29359,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29364,"byte_end":29367,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29372,"byte_end":29421,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29426,"byte_end":29450,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29455,"byte_end":29462,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29467,"byte_end":29517,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29522,"byte_end":29531,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29536,"byte_end":29543,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29548,"byte_end":29571,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31343,"byte_end":31349,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29821,"byte_end":29896,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29901,"byte_end":29924,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29929,"byte_end":29932,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":29937,"byte_end":30011,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30016,"byte_end":30089,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30094,"byte_end":30106,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30111,"byte_end":30114,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30119,"byte_end":30183,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30188,"byte_end":30245,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30250,"byte_end":30253,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30258,"byte_end":30272,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30277,"byte_end":30280,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30285,"byte_end":30292,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30297,"byte_end":30338,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30343,"byte_end":30378,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30383,"byte_end":30386,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30391,"byte_end":30420,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30425,"byte_end":30459,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30464,"byte_end":30498,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30503,"byte_end":30506,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30511,"byte_end":30544,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30549,"byte_end":30582,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30587,"byte_end":30596,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30601,"byte_end":30608,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30613,"byte_end":30616,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30621,"byte_end":30628,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30633,"byte_end":30702,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30707,"byte_end":30782,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30787,"byte_end":30818,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30823,"byte_end":30826,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30831,"byte_end":30872,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30877,"byte_end":30912,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30917,"byte_end":30953,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30958,"byte_end":30978,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30983,"byte_end":30986,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":30991,"byte_end":31020,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31025,"byte_end":31059,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31064,"byte_end":31098,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31103,"byte_end":31148,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31153,"byte_end":31194,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31199,"byte_end":31206,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31211,"byte_end":31244,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31249,"byte_end":31281,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31286,"byte_end":31295,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31300,"byte_end":31307,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":31312,"byte_end":31335,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32436,"byte_end":32441,"line_start":517,"line_end":517,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32207,"byte_end":32248,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32253,"byte_end":32256,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32261,"byte_end":32336,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32341,"byte_end":32398,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32403,"byte_end":32428,"line_start":516,"line_end":516,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32901,"byte_end":32912,"line_start":531,"line_end":531,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32600,"byte_end":32641,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32646,"byte_end":32649,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32654,"byte_end":32713,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32718,"byte_end":32721,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32726,"byte_end":32801,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32806,"byte_end":32863,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":32868,"byte_end":32893,"line_start":530,"line_end":530,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33202,"byte_end":33212,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33069,"byte_end":33118,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33123,"byte_end":33194,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33497,"byte_end":33508,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33361,"byte_end":33410,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33415,"byte_end":33489,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33739,"byte_end":33749,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33662,"byte_end":33731,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":35145,"byte_end":35157,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33885,"byte_end":33957,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":33962,"byte_end":34025,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34030,"byte_end":34033,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34038,"byte_end":34104,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34109,"byte_end":34112,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34117,"byte_end":34190,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34195,"byte_end":34264,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34269,"byte_end":34339,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34344,"byte_end":34347,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34352,"byte_end":34366,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34371,"byte_end":34374,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34379,"byte_end":34386,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34391,"byte_end":34421,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34426,"byte_end":34476,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34481,"byte_end":34520,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34525,"byte_end":34576,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34581,"byte_end":34584,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34589,"byte_end":34649,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34654,"byte_end":34706,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34711,"byte_end":34718,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34723,"byte_end":34726,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34731,"byte_end":34800,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34805,"byte_end":34878,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34883,"byte_end":34915,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34920,"byte_end":34923,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34928,"byte_end":34935,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34940,"byte_end":34987,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":34992,"byte_end":35031,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":35036,"byte_end":35039,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":35044,"byte_end":35125,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":35130,"byte_end":35137,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4571},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77121,"byte_end":77131,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77042,"byte_end":77109,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77010,"byte_end":77024,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4594},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77121,"byte_end":77131,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4597},{"krate":0,"index":4598}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77010,"byte_end":77024,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78022,"byte_end":78027,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78046,"byte_end":78052,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4623},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78071,"byte_end":78076,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":77993,"byte_end":78003,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4619},{"krate":0,"index":4621},{"krate":0,"index":4623}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenProj))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":77926,"byte_end":77966,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4645},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":77993,"byte_end":78003,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":77926,"byte_end":77966,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4677},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83097,"byte_end":83102,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4679},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83121,"byte_end":83127,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4681},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83146,"byte_end":83151,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83065,"byte_end":83078,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4679},{"krate":0,"index":4681}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenErrProj))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":82995,"byte_end":83038,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4703},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83065,"byte_end":83078,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4709}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":82995,"byte_end":83038,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4735},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":56099,"byte_end":56109,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4738}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4760},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":56099,"byte_end":56109,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4764},{"krate":0,"index":4765}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4804},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":56357,"byte_end":56370,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4807}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4829},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":56357,"byte_end":56370,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4833},{"krate":0,"index":4834}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4872},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":56638,"byte_end":56654,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4874}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4892},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":56638,"byte_end":56654,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4895},{"krate":0,"index":4896}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4929},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57242,"byte_end":57249,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":4933}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4959},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57242,"byte_end":57249,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":4964},{"krate":0,"index":4965}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5013},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57489,"byte_end":57495,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5017}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5043},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57489,"byte_end":57495,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":5048},{"krate":0,"index":5049}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5096},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57745,"byte_end":57752,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5099}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5121},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57745,"byte_end":57752,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":5125},{"krate":0,"index":5126}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5165},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57960,"byte_end":57966,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5168}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5190},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":57960,"byte_end":57966,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":5194},{"krate":0,"index":5195}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5234},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":58185,"byte_end":58194,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5237}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5259},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":58185,"byte_end":58194,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5264}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5303},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":58466,"byte_end":58476,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5306}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5328},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":58466,"byte_end":58476,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":5332},{"krate":0,"index":5333}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5372},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":58849,"byte_end":58854,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5375}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5397},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":58849,"byte_end":58854,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5402}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5441},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59095,"byte_end":59101,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5444}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5466},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59095,"byte_end":59101,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":5470},{"krate":0,"index":5471}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5511},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59358,"byte_end":59369,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5515}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5541},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59358,"byte_end":59369,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5546},{"krate":0,"index":5547}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5594},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59653,"byte_end":59665,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5597}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5619},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59653,"byte_end":59665,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5623},{"krate":0,"index":5624}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":408},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59955,"byte_end":59967,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59891,"byte_end":59944,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62677,"byte_end":62683,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61305,"byte_end":61363,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61368,"byte_end":61371,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61376,"byte_end":61451,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61456,"byte_end":61526,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61531,"byte_end":61604,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61609,"byte_end":61638,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61643,"byte_end":61646,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61651,"byte_end":61726,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61731,"byte_end":61806,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61811,"byte_end":61858,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61863,"byte_end":61866,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61871,"byte_end":61946,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61951,"byte_end":61977,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61982,"byte_end":61985,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":61990,"byte_end":62004,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62009,"byte_end":62012,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62017,"byte_end":62024,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62029,"byte_end":62067,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62072,"byte_end":62075,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62080,"byte_end":62121,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62126,"byte_end":62171,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62176,"byte_end":62218,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62223,"byte_end":62259,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62264,"byte_end":62273,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62278,"byte_end":62285,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62290,"byte_end":62293,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62298,"byte_end":62370,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62375,"byte_end":62386,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62391,"byte_end":62394,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62399,"byte_end":62406,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62411,"byte_end":62449,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62454,"byte_end":62457,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62462,"byte_end":62503,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62508,"byte_end":62554,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62559,"byte_end":62601,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62606,"byte_end":62643,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62648,"byte_end":62657,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62662,"byte_end":62669,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64242,"byte_end":64256,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62874,"byte_end":62991,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":62996,"byte_end":62999,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63004,"byte_end":63126,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63131,"byte_end":63181,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63186,"byte_end":63189,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63194,"byte_end":63269,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63274,"byte_end":63349,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63354,"byte_end":63401,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63406,"byte_end":63409,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63414,"byte_end":63489,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63494,"byte_end":63569,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63574,"byte_end":63621,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63626,"byte_end":63629,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63634,"byte_end":63709,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63714,"byte_end":63740,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63745,"byte_end":63748,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63753,"byte_end":63767,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63772,"byte_end":63775,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63780,"byte_end":63787,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63792,"byte_end":63830,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63835,"byte_end":63838,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63843,"byte_end":63884,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63889,"byte_end":63934,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":63939,"byte_end":64000,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64005,"byte_end":64037,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64042,"byte_end":64045,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64050,"byte_end":64096,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64101,"byte_end":64162,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64167,"byte_end":64200,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64205,"byte_end":64214,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64219,"byte_end":64226,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64231,"byte_end":64234,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65939,"byte_end":65946,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64490,"byte_end":64546,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64551,"byte_end":64554,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64559,"byte_end":64633,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64638,"byte_end":64699,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64704,"byte_end":64774,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64779,"byte_end":64854,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64859,"byte_end":64894,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64899,"byte_end":64902,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64907,"byte_end":64982,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":64987,"byte_end":65062,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65067,"byte_end":65114,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65119,"byte_end":65122,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65127,"byte_end":65202,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65207,"byte_end":65233,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65238,"byte_end":65241,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65246,"byte_end":65260,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65265,"byte_end":65268,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65273,"byte_end":65280,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65285,"byte_end":65323,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65328,"byte_end":65331,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65336,"byte_end":65377,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65382,"byte_end":65428,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65433,"byte_end":65476,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65481,"byte_end":65518,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65523,"byte_end":65532,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65537,"byte_end":65544,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65549,"byte_end":65552,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65557,"byte_end":65630,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65635,"byte_end":65649,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65654,"byte_end":65657,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65662,"byte_end":65669,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65674,"byte_end":65712,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65717,"byte_end":65720,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65725,"byte_end":65766,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65771,"byte_end":65816,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65821,"byte_end":65864,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65869,"byte_end":65905,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65910,"byte_end":65919,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":65924,"byte_end":65931,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67036,"byte_end":67044,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66139,"byte_end":66209,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66214,"byte_end":66263,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66268,"byte_end":66271,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66276,"byte_end":66339,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66344,"byte_end":66412,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66417,"byte_end":66490,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66495,"byte_end":66571,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66576,"byte_end":66621,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66626,"byte_end":66629,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66634,"byte_end":66709,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66714,"byte_end":66740,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66745,"byte_end":66748,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66753,"byte_end":66767,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66772,"byte_end":66775,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66780,"byte_end":66787,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66792,"byte_end":66830,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66835,"byte_end":66838,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66843,"byte_end":66884,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66889,"byte_end":66940,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":66945,"byte_end":67002,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67007,"byte_end":67016,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67021,"byte_end":67028,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67340,"byte_end":67347,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67220,"byte_end":67278,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67283,"byte_end":67332,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68902,"byte_end":68910,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67521,"byte_end":67590,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67595,"byte_end":67669,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67674,"byte_end":67677,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67682,"byte_end":67757,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67762,"byte_end":67832,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67837,"byte_end":67902,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67907,"byte_end":67973,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":67978,"byte_end":68012,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68017,"byte_end":68020,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68025,"byte_end":68100,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68105,"byte_end":68131,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68136,"byte_end":68139,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68144,"byte_end":68158,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68163,"byte_end":68166,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68171,"byte_end":68178,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68183,"byte_end":68221,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68226,"byte_end":68229,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68234,"byte_end":68275,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68280,"byte_end":68325,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68330,"byte_end":68405,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68410,"byte_end":68446,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68451,"byte_end":68460,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68465,"byte_end":68472,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68477,"byte_end":68480,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68485,"byte_end":68561,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68566,"byte_end":68577,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68582,"byte_end":68585,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68590,"byte_end":68597,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68602,"byte_end":68640,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68645,"byte_end":68648,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68653,"byte_end":68694,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68699,"byte_end":68745,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68750,"byte_end":68826,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68831,"byte_end":68868,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68873,"byte_end":68882,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":68887,"byte_end":68894,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70531,"byte_end":70538,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69164,"byte_end":69229,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69234,"byte_end":69306,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69311,"byte_end":69314,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69319,"byte_end":69394,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69399,"byte_end":69469,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69474,"byte_end":69539,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69544,"byte_end":69620,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69625,"byte_end":69643,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69648,"byte_end":69651,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69656,"byte_end":69731,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69736,"byte_end":69762,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69767,"byte_end":69770,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69775,"byte_end":69789,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69794,"byte_end":69797,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69802,"byte_end":69809,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69814,"byte_end":69852,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69857,"byte_end":69860,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69865,"byte_end":69906,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69911,"byte_end":69957,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":69962,"byte_end":70037,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70042,"byte_end":70079,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70084,"byte_end":70093,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70098,"byte_end":70105,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70110,"byte_end":70113,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70118,"byte_end":70191,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70196,"byte_end":70210,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70215,"byte_end":70218,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70223,"byte_end":70230,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70235,"byte_end":70273,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70278,"byte_end":70281,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70286,"byte_end":70327,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70332,"byte_end":70377,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70382,"byte_end":70456,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70461,"byte_end":70497,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70502,"byte_end":70511,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70516,"byte_end":70523,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71514,"byte_end":71524,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70787,"byte_end":70860,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70865,"byte_end":70868,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70873,"byte_end":70948,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":70953,"byte_end":71026,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71031,"byte_end":71100,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71105,"byte_end":71158,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71163,"byte_end":71166,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71171,"byte_end":71185,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71190,"byte_end":71193,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71198,"byte_end":71205,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71210,"byte_end":71251,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71256,"byte_end":71294,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71299,"byte_end":71302,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71307,"byte_end":71349,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71354,"byte_end":71435,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71440,"byte_end":71480,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71485,"byte_end":71494,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71499,"byte_end":71506,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72450,"byte_end":72461,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71723,"byte_end":71794,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71799,"byte_end":71802,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71807,"byte_end":71882,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71887,"byte_end":71960,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":71965,"byte_end":72034,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72039,"byte_end":72093,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72098,"byte_end":72101,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72106,"byte_end":72120,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72125,"byte_end":72128,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72133,"byte_end":72140,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72145,"byte_end":72186,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72191,"byte_end":72229,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72234,"byte_end":72237,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72242,"byte_end":72285,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72290,"byte_end":72370,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72375,"byte_end":72416,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72421,"byte_end":72430,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72435,"byte_end":72442,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72846,"byte_end":72857,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72665,"byte_end":72740,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72745,"byte_end":72774,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72779,"byte_end":72782,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":72787,"byte_end":72838,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73966,"byte_end":73984,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73022,"byte_end":73097,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73102,"byte_end":73125,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73130,"byte_end":73133,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73138,"byte_end":73210,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73215,"byte_end":73288,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73293,"byte_end":73307,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73312,"byte_end":73315,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73320,"byte_end":73390,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73395,"byte_end":73413,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73418,"byte_end":73421,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73426,"byte_end":73440,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73445,"byte_end":73448,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73453,"byte_end":73460,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73465,"byte_end":73506,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73511,"byte_end":73549,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73554,"byte_end":73600,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73605,"byte_end":73608,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73613,"byte_end":73673,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73678,"byte_end":73757,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73762,"byte_end":73765,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73770,"byte_end":73827,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73832,"byte_end":73884,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73889,"byte_end":73932,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73937,"byte_end":73946,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":73951,"byte_end":73958,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75074,"byte_end":75088,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74244,"byte_end":74314,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74319,"byte_end":74356,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74361,"byte_end":74410,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74415,"byte_end":74418,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74423,"byte_end":74492,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74497,"byte_end":74570,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74575,"byte_end":74645,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74650,"byte_end":74668,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74673,"byte_end":74676,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74681,"byte_end":74749,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74754,"byte_end":74757,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74762,"byte_end":74776,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74781,"byte_end":74784,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74789,"byte_end":74796,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74801,"byte_end":74839,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74844,"byte_end":74847,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74852,"byte_end":74893,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74898,"byte_end":74950,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":74955,"byte_end":75002,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75007,"byte_end":75040,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75045,"byte_end":75054,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75059,"byte_end":75066,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76342,"byte_end":76353,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75641,"byte_end":75694,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75699,"byte_end":75735,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75740,"byte_end":75743,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75748,"byte_end":75797,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75802,"byte_end":75869,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75874,"byte_end":75887,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75892,"byte_end":75895,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75900,"byte_end":75914,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75919,"byte_end":75922,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75927,"byte_end":75934,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":75939,"byte_end":75998,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76003,"byte_end":76006,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76011,"byte_end":76030,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76035,"byte_end":76053,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76058,"byte_end":76130,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76135,"byte_end":76167,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76172,"byte_end":76179,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76184,"byte_end":76260,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76265,"byte_end":76268,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76273,"byte_end":76322,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76327,"byte_end":76334,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76612,"byte_end":76626,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76509,"byte_end":76582,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":76587,"byte_end":76604,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5660},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":84829,"byte_end":84833,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5662}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":84695,"byte_end":84732,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":84750,"byte_end":84817,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85374,"byte_end":85378,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":84937,"byte_end":85005,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85006,"byte_end":85009,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85010,"byte_end":85073,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85074,"byte_end":85077,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85078,"byte_end":85092,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85093,"byte_end":85096,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85097,"byte_end":85104,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85105,"byte_end":85146,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85147,"byte_end":85171,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85172,"byte_end":85175,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85176,"byte_end":85208,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85209,"byte_end":85236,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85237,"byte_end":85240,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85241,"byte_end":85278,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85279,"byte_end":85303,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85304,"byte_end":85311,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85312,"byte_end":85348,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85349,"byte_end":85358,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85359,"byte_end":85366,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5666},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86144,"byte_end":86151,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5668}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86005,"byte_end":86047,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86065,"byte_end":86132,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86670,"byte_end":86677,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86292,"byte_end":86372,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86373,"byte_end":86386,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86387,"byte_end":86390,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86391,"byte_end":86453,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86454,"byte_end":86457,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86458,"byte_end":86472,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86473,"byte_end":86476,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86477,"byte_end":86490,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86491,"byte_end":86532,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86533,"byte_end":86557,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86558,"byte_end":86561,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86562,"byte_end":86597,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86598,"byte_end":86624,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86625,"byte_end":86644,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86645,"byte_end":86654,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86655,"byte_end":86662,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5674},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87480,"byte_end":87486,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5672},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87445,"byte_end":87475,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5676},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87547,"byte_end":87551,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5672},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87504,"byte_end":87542,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5679},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87713,"byte_end":87717,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5672},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87570,"byte_end":87636,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87641,"byte_end":87708,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5672},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87416,"byte_end":87425,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5674},{"krate":0,"index":5676},{"krate":0,"index":5679}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private(project = MaybeDoneProj, project_replace = MaybeDoneProjOwn))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87314,"byte_end":87389,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5709},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87416,"byte_end":87425,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":5712},{"krate":0,"index":5713}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87314,"byte_end":87389,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":514},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88183,"byte_end":88193,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87722,"byte_end":87759,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87760,"byte_end":87763,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87764,"byte_end":87778,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87779,"byte_end":87782,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87783,"byte_end":87790,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87791,"byte_end":87832,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87833,"byte_end":87857,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87858,"byte_end":87883,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87884,"byte_end":87887,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87888,"byte_end":87937,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87938,"byte_end":87959,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":87960,"byte_end":88012,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88013,"byte_end":88048,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88049,"byte_end":88104,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88105,"byte_end":88157,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88158,"byte_end":88167,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88168,"byte_end":88175,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88610,"byte_end":88620,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88312,"byte_end":88397,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88402,"byte_end":88473,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88478,"byte_end":88551,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88556,"byte_end":88584,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88589,"byte_end":88598,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88919,"byte_end":88930,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88799,"byte_end":88865,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88870,"byte_end":88893,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88898,"byte_end":88907,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5733},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90470,"byte_end":90476,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90435,"byte_end":90465,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5735},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90537,"byte_end":90541,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90494,"byte_end":90532,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5738},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90749,"byte_end":90753,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90556,"byte_end":90625,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90630,"byte_end":90700,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90705,"byte_end":90744,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5731},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90400,"byte_end":90412,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5733},{"krate":0,"index":5735},{"krate":0,"index":5738}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private(project = TryMaybeDoneProj, project_replace =\n                TryMaybeDoneProjOwn))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90292,"byte_end":90373,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":5768},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90400,"byte_end":90412,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":5771},{"krate":0,"index":5772}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90292,"byte_end":90373,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":540},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90806,"byte_end":90820,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90758,"byte_end":90798,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91263,"byte_end":91273,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90954,"byte_end":91039,"line_start":30,"line_end":30,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91044,"byte_end":91115,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91120,"byte_end":91204,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91209,"byte_end":91237,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91242,"byte_end":91251,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91574,"byte_end":91585,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91451,"byte_end":91520,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91525,"byte_end":91548,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91553,"byte_end":91562,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5790},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":93625,"byte_end":93637,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":93546,"byte_end":93613,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":93507,"byte_end":93521,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5813},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":93625,"byte_end":93637,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5816},{"krate":0,"index":5817}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":93507,"byte_end":93521,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94599,"byte_end":94605,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":585}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94479,"byte_end":94519,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94520,"byte_end":94587,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95192,"byte_end":95199,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94656,"byte_end":94727,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94728,"byte_end":94731,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94732,"byte_end":94798,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94799,"byte_end":94802,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94803,"byte_end":94817,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94818,"byte_end":94821,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94822,"byte_end":94829,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94830,"byte_end":94871,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94872,"byte_end":94905,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94906,"byte_end":94945,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94946,"byte_end":94949,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94950,"byte_end":95007,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95008,"byte_end":95051,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95052,"byte_end":95057,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95058,"byte_end":95061,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95062,"byte_end":95103,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95104,"byte_end":95166,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95167,"byte_end":95176,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95177,"byte_end":95184,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5838},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":95919,"byte_end":95924,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":95768,"byte_end":95815,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":95840,"byte_end":95907,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96047,"byte_end":96057,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":95964,"byte_end":96021,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96026,"byte_end":96035,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":622},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96723,"byte_end":96728,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96477,"byte_end":96537,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96538,"byte_end":96541,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96542,"byte_end":96556,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96557,"byte_end":96560,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96561,"byte_end":96568,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96569,"byte_end":96610,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96611,"byte_end":96635,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96636,"byte_end":96639,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96640,"byte_end":96669,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96670,"byte_end":96697,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96698,"byte_end":96707,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96708,"byte_end":96715,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":624},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97040,"byte_end":97042,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96774,"byte_end":96841,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96842,"byte_end":96845,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96846,"byte_end":96860,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96861,"byte_end":96864,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96865,"byte_end":96872,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96873,"byte_end":96914,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96915,"byte_end":96939,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96940,"byte_end":96943,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96944,"byte_end":96982,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96983,"byte_end":97014,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97015,"byte_end":97024,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97025,"byte_end":97032,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":627},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97373,"byte_end":97376,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97106,"byte_end":97172,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97173,"byte_end":97176,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97177,"byte_end":97191,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97192,"byte_end":97195,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97196,"byte_end":97203,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97204,"byte_end":97245,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97246,"byte_end":97270,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97271,"byte_end":97274,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97275,"byte_end":97314,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97315,"byte_end":97347,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97348,"byte_end":97357,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":97358,"byte_end":97365,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5940},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99628,"byte_end":99632,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":5943},{"krate":0,"index":5944}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97864,"byte_end":97931,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5968},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99628,"byte_end":99632,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":5974}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5993},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99698,"byte_end":99703,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":5999}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97864,"byte_end":97931,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6029},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99698,"byte_end":99703,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6036},{"krate":0,"index":6037}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6060},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99775,"byte_end":99780,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6065},{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97864,"byte_end":97931,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6104},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99775,"byte_end":99780,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6114}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6141},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99858,"byte_end":99863,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":6149},{"krate":0,"index":6150},{"krate":0,"index":6151}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97864,"byte_end":97931,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6193},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99858,"byte_end":99863,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":6200},{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":97841,"byte_end":97855,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100478,"byte_end":100482,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99901,"byte_end":99972,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99973,"byte_end":99976,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":99977,"byte_end":100048,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100049,"byte_end":100124,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100125,"byte_end":100128,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100129,"byte_end":100198,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100199,"byte_end":100225,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100226,"byte_end":100229,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100230,"byte_end":100244,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100245,"byte_end":100248,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100249,"byte_end":100256,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100257,"byte_end":100298,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100299,"byte_end":100323,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100324,"byte_end":100327,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100328,"byte_end":100352,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100353,"byte_end":100377,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100378,"byte_end":100412,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100413,"byte_end":100416,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100417,"byte_end":100452,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100453,"byte_end":100462,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100463,"byte_end":100470,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101028,"byte_end":101033,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100689,"byte_end":100741,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100742,"byte_end":100745,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100746,"byte_end":100760,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100761,"byte_end":100764,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100765,"byte_end":100772,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100773,"byte_end":100814,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100815,"byte_end":100839,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100840,"byte_end":100843,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100844,"byte_end":100868,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100869,"byte_end":100893,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100894,"byte_end":100918,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100919,"byte_end":100958,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100959,"byte_end":100962,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":100963,"byte_end":101002,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101003,"byte_end":101012,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101013,"byte_end":101020,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":657},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101616,"byte_end":101621,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101246,"byte_end":101298,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101299,"byte_end":101302,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101303,"byte_end":101317,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101318,"byte_end":101321,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101322,"byte_end":101329,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101330,"byte_end":101371,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101372,"byte_end":101396,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101397,"byte_end":101400,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101401,"byte_end":101425,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101426,"byte_end":101450,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101451,"byte_end":101475,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101476,"byte_end":101500,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101501,"byte_end":101543,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101544,"byte_end":101547,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101548,"byte_end":101590,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101591,"byte_end":101600,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101601,"byte_end":101608,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":662},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102293,"byte_end":102298,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101892,"byte_end":101944,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101945,"byte_end":101948,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101949,"byte_end":101963,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101964,"byte_end":101967,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101968,"byte_end":101975,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":101976,"byte_end":102017,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102018,"byte_end":102042,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102043,"byte_end":102046,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102047,"byte_end":102071,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102072,"byte_end":102096,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102097,"byte_end":102121,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102122,"byte_end":102146,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102147,"byte_end":102171,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102172,"byte_end":102217,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102218,"byte_end":102221,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102222,"byte_end":102267,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102268,"byte_end":102277,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join.rs","byte_start":102278,"byte_end":102285,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103459,"byte_end":103466,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":695}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103338,"byte_end":103379,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103380,"byte_end":103447,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":699},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":105106,"byte_end":105114,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103799,"byte_end":103879,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103880,"byte_end":103890,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103891,"byte_end":103894,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103895,"byte_end":103974,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103975,"byte_end":104055,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104056,"byte_end":104074,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104075,"byte_end":104078,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104079,"byte_end":104156,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104157,"byte_end":104214,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104215,"byte_end":104218,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104219,"byte_end":104233,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104234,"byte_end":104237,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104238,"byte_end":104313,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104314,"byte_end":104362,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104363,"byte_end":104440,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104441,"byte_end":104511,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104512,"byte_end":104515,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104516,"byte_end":104585,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104586,"byte_end":104589,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104590,"byte_end":104658,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104659,"byte_end":104662,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104663,"byte_end":104740,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104741,"byte_end":104822,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104823,"byte_end":104826,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104827,"byte_end":104841,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104842,"byte_end":104845,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104846,"byte_end":104853,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104854,"byte_end":104895,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104896,"byte_end":104930,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104931,"byte_end":104934,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104935,"byte_end":104972,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104973,"byte_end":104976,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":104977,"byte_end":105024,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":105025,"byte_end":105028,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":105029,"byte_end":105080,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":105081,"byte_end":105090,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":105091,"byte_end":105098,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6236},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106427,"byte_end":106433,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6239}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106289,"byte_end":106330,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106331,"byte_end":106398,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":727},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108581,"byte_end":108587,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106524,"byte_end":106594,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106595,"byte_end":106598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106599,"byte_end":106677,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106678,"byte_end":106754,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106755,"byte_end":106827,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106828,"byte_end":106831,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106832,"byte_end":106904,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106905,"byte_end":106933,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106934,"byte_end":106937,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106938,"byte_end":107005,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107006,"byte_end":107070,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107071,"byte_end":107121,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107122,"byte_end":107125,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107126,"byte_end":107140,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107141,"byte_end":107144,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107145,"byte_end":107165,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107166,"byte_end":107169,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107170,"byte_end":107177,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107178,"byte_end":107219,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107220,"byte_end":107260,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107261,"byte_end":107286,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107287,"byte_end":107290,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107291,"byte_end":107381,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107382,"byte_end":107412,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107413,"byte_end":107443,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107444,"byte_end":107447,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107448,"byte_end":107494,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107495,"byte_end":107517,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107518,"byte_end":107540,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107541,"byte_end":107544,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107545,"byte_end":107607,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107608,"byte_end":107691,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107692,"byte_end":107764,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107765,"byte_end":107849,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107850,"byte_end":107923,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107924,"byte_end":107930,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107931,"byte_end":107934,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107935,"byte_end":107973,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107974,"byte_end":107983,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107984,"byte_end":107991,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107992,"byte_end":107995,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":107996,"byte_end":108022,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108023,"byte_end":108026,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108027,"byte_end":108034,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108035,"byte_end":108094,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108095,"byte_end":108098,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108099,"byte_end":108152,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108153,"byte_end":108156,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108157,"byte_end":108232,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108233,"byte_end":108265,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108266,"byte_end":108298,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108299,"byte_end":108304,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108305,"byte_end":108349,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108350,"byte_end":108376,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108377,"byte_end":108454,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108455,"byte_end":108534,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108535,"byte_end":108548,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108549,"byte_end":108559,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108560,"byte_end":108565,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108566,"byte_end":108573,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6244},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":109939,"byte_end":109948,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6246}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":109799,"byte_end":109842,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":109860,"byte_end":109927,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":754},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110728,"byte_end":110738,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110026,"byte_end":110092,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110093,"byte_end":110096,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110097,"byte_end":110177,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110178,"byte_end":110256,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110257,"byte_end":110325,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110326,"byte_end":110329,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110330,"byte_end":110410,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110411,"byte_end":110485,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110486,"byte_end":110489,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110490,"byte_end":110567,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110568,"byte_end":110625,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110626,"byte_end":110629,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110630,"byte_end":110642,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110643,"byte_end":110646,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110647,"byte_end":110720,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6320},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114653,"byte_end":114660,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6323},{"krate":0,"index":6324}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112230,"byte_end":112297,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6348},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114653,"byte_end":114660,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":6352},{"krate":0,"index":6353},{"krate":0,"index":6354}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6373},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114730,"byte_end":114738,"line_start":96,"line_end":96,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112230,"byte_end":112297,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6409},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114730,"byte_end":114738,"line_start":96,"line_end":96,"column_start":6,"column_end":14},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6440},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114814,"byte_end":114822,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6447},{"krate":0,"index":6448}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112230,"byte_end":112297,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6484},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114814,"byte_end":114822,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6494}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6521},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114904,"byte_end":114912,"line_start":102,"line_end":102,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6527},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6531}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112230,"byte_end":112297,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6573},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114904,"byte_end":114912,"line_start":102,"line_end":102,"column_start":6,"column_end":14},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6584},{"krate":0,"index":6585}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":112207,"byte_end":112221,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":782},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116184,"byte_end":116192,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":114950,"byte_end":115023,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115024,"byte_end":115056,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115057,"byte_end":115060,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115061,"byte_end":115132,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115133,"byte_end":115209,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115210,"byte_end":115281,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115282,"byte_end":115298,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115299,"byte_end":115302,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115303,"byte_end":115372,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115373,"byte_end":115399,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115400,"byte_end":115403,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115404,"byte_end":115418,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115419,"byte_end":115422,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115423,"byte_end":115499,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115500,"byte_end":115536,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115537,"byte_end":115540,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115541,"byte_end":115548,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115549,"byte_end":115590,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115591,"byte_end":115615,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115616,"byte_end":115619,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115620,"byte_end":115665,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115666,"byte_end":115711,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115712,"byte_end":115750,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115751,"byte_end":115754,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115755,"byte_end":115794,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115795,"byte_end":115804,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115805,"byte_end":115812,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115813,"byte_end":115816,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115817,"byte_end":115887,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115888,"byte_end":115903,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115904,"byte_end":115907,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115908,"byte_end":115915,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115916,"byte_end":115957,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115958,"byte_end":115982,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115983,"byte_end":115986,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":115987,"byte_end":116032,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116033,"byte_end":116079,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116080,"byte_end":116118,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116119,"byte_end":116122,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116123,"byte_end":116158,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116159,"byte_end":116168,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116169,"byte_end":116176,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116785,"byte_end":116794,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116367,"byte_end":116427,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116428,"byte_end":116431,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116432,"byte_end":116446,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116447,"byte_end":116450,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116451,"byte_end":116458,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116459,"byte_end":116500,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116501,"byte_end":116525,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116526,"byte_end":116529,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116530,"byte_end":116575,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116576,"byte_end":116621,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116622,"byte_end":116667,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116668,"byte_end":116711,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116712,"byte_end":116715,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116716,"byte_end":116759,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116760,"byte_end":116769,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":116770,"byte_end":116777,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117534,"byte_end":117543,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117064,"byte_end":117124,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117125,"byte_end":117128,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117129,"byte_end":117143,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117144,"byte_end":117147,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117148,"byte_end":117155,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117156,"byte_end":117197,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117198,"byte_end":117222,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117223,"byte_end":117226,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117227,"byte_end":117272,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117273,"byte_end":117318,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117319,"byte_end":117364,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117365,"byte_end":117410,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117411,"byte_end":117457,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117458,"byte_end":117461,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117462,"byte_end":117508,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117509,"byte_end":117518,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117519,"byte_end":117526,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":794},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118417,"byte_end":118426,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117895,"byte_end":117955,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117956,"byte_end":117959,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117960,"byte_end":117974,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117975,"byte_end":117978,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117979,"byte_end":117986,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":117987,"byte_end":118028,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118029,"byte_end":118053,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118054,"byte_end":118057,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118058,"byte_end":118103,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118104,"byte_end":118149,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118150,"byte_end":118195,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118196,"byte_end":118241,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118242,"byte_end":118287,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118288,"byte_end":118337,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118338,"byte_end":118341,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118342,"byte_end":118391,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118392,"byte_end":118401,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join.rs","byte_start":118402,"byte_end":118409,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":836},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":119812,"byte_end":119822,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":838}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":119687,"byte_end":119732,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":119733,"byte_end":119800,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":842},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121441,"byte_end":121453,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120192,"byte_end":120271,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120272,"byte_end":120302,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120303,"byte_end":120306,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120307,"byte_end":120386,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120387,"byte_end":120467,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120468,"byte_end":120486,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120487,"byte_end":120490,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120491,"byte_end":120569,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120570,"byte_end":120650,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120651,"byte_end":120725,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120726,"byte_end":120749,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120750,"byte_end":120753,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120754,"byte_end":120831,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120832,"byte_end":120889,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120890,"byte_end":120893,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120894,"byte_end":120908,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120909,"byte_end":120912,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120913,"byte_end":120920,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120921,"byte_end":120962,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":120963,"byte_end":121009,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121010,"byte_end":121013,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121014,"byte_end":121037,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121038,"byte_end":121072,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121073,"byte_end":121107,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121108,"byte_end":121142,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121143,"byte_end":121149,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121150,"byte_end":121153,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121154,"byte_end":121217,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121218,"byte_end":121221,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121222,"byte_end":121245,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121246,"byte_end":121280,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121281,"byte_end":121316,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121317,"byte_end":121351,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121352,"byte_end":121358,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121359,"byte_end":121362,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121363,"byte_end":121415,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121416,"byte_end":121425,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121426,"byte_end":121433,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6616},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123282,"byte_end":123291,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6619}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123140,"byte_end":123185,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123186,"byte_end":123253,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":870},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124876,"byte_end":124886,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123385,"byte_end":123455,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123456,"byte_end":123459,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123460,"byte_end":123538,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123539,"byte_end":123615,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123616,"byte_end":123688,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123689,"byte_end":123692,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123693,"byte_end":123765,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123766,"byte_end":123794,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123795,"byte_end":123798,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123799,"byte_end":123866,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123867,"byte_end":123938,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123939,"byte_end":123989,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123990,"byte_end":123993,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123994,"byte_end":124008,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124009,"byte_end":124012,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124013,"byte_end":124020,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124021,"byte_end":124105,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124106,"byte_end":124109,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124110,"byte_end":124167,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124168,"byte_end":124171,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124172,"byte_end":124254,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124255,"byte_end":124312,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124313,"byte_end":124370,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124371,"byte_end":124397,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124398,"byte_end":124403,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124404,"byte_end":124499,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124500,"byte_end":124523,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124524,"byte_end":124604,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124605,"byte_end":124686,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124687,"byte_end":124757,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124758,"byte_end":124829,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124830,"byte_end":124843,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124844,"byte_end":124854,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124855,"byte_end":124860,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":124861,"byte_end":124868,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6624},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126375,"byte_end":126383,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":6626}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126236,"byte_end":126278,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126296,"byte_end":126363,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":127105,"byte_end":127114,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126460,"byte_end":126554,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126555,"byte_end":126558,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126559,"byte_end":126648,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126649,"byte_end":126733,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126734,"byte_end":126815,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126816,"byte_end":126861,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126862,"byte_end":126865,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126866,"byte_end":126944,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126945,"byte_end":127002,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":127003,"byte_end":127006,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":127007,"byte_end":127019,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":127020,"byte_end":127023,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":127024,"byte_end":127097,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6633},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129450,"byte_end":129454,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6630},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129417,"byte_end":129445,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6635},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129504,"byte_end":129509,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6630},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129470,"byte_end":129499,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6630},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129398,"byte_end":129404,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(\n         #[pin]\n         A),\n\n    /// Second branch of the type\n    Right(\n          #[pin]\n          B),\n}","parent":null,"children":[{"krate":0,"index":6633},{"krate":0,"index":6635}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129328,"byte_end":129364,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6655},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129398,"byte_end":129404,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6661}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129328,"byte_end":129364,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129715,"byte_end":129727,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129567,"byte_end":129625,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129630,"byte_end":129633,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129638,"byte_end":129703,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130107,"byte_end":130120,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129958,"byte_end":130016,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130021,"byte_end":130024,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130029,"byte_end":130095,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130408,"byte_end":130418,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130335,"byte_end":130396,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11915},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8900925,"byte_end":8900934,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":11918},{"krate":0,"index":11917}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8900846,"byte_end":8900913,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8900807,"byte_end":8900821,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11938},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8900925,"byte_end":8900934,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__Abortable","qualname":"::future::abortable::_::__Abortable","value":"__Abortable {  }","parent":null,"children":[{"krate":0,"index":11941},{"krate":0,"index":11942}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8900807,"byte_end":8900821,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6703},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901817,"byte_end":8901820,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901050,"byte_end":8901125,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901130,"byte_end":8901198,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901203,"byte_end":8901206,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901211,"byte_end":8901283,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901288,"byte_end":8901364,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901369,"byte_end":8901394,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901399,"byte_end":8901402,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901407,"byte_end":8901419,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901424,"byte_end":8901427,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901432,"byte_end":8901439,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901444,"byte_end":8901485,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901490,"byte_end":8901549,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901554,"byte_end":8901557,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901562,"byte_end":8901631,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901636,"byte_end":8901701,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901706,"byte_end":8901731,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901736,"byte_end":8901779,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901784,"byte_end":8901793,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901798,"byte_end":8901805,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6723},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902143,"byte_end":8902160,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":6724}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901952,"byte_end":8902003,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902004,"byte_end":8902080,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902081,"byte_end":8902114,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6727},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902267,"byte_end":8902278,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":6728}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902194,"byte_end":8902231,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6705},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902948,"byte_end":8902956,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902335,"byte_end":8902409,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902414,"byte_end":8902444,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902449,"byte_end":8902452,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902457,"byte_end":8902525,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902530,"byte_end":8902533,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902538,"byte_end":8902550,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902555,"byte_end":8902558,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902563,"byte_end":8902570,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902575,"byte_end":8902616,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902621,"byte_end":8902680,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902685,"byte_end":8902688,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902693,"byte_end":8902762,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902767,"byte_end":8902832,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902837,"byte_end":8902862,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902867,"byte_end":8902910,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902915,"byte_end":8902924,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902929,"byte_end":8902936,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6706},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903852,"byte_end":8903861,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903483,"byte_end":8903569,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903570,"byte_end":8903573,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903574,"byte_end":8903650,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903651,"byte_end":8903704,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903705,"byte_end":8903708,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903709,"byte_end":8903786,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8903787,"byte_end":8903844,"line_start":111,"line_end":111,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6738},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904165,"byte_end":8904172,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904054,"byte_end":8904108,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6716},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905785,"byte_end":8905790,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905421,"byte_end":8905482,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905487,"byte_end":8905490,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905495,"byte_end":8905564,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905569,"byte_end":8905639,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905644,"byte_end":8905718,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905723,"byte_end":8905773,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":995},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":10138},{"krate":0,"index":10212},{"krate":0,"index":10213},{"krate":0,"index":10443},{"krate":0,"index":10444},{"krate":0,"index":10492},{"krate":0,"index":10493},{"krate":0,"index":10494},{"krate":0,"index":2712}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"/ Streams","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":136802,"byte_end":136813,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":136814,"byte_end":136817,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":136818,"byte_end":136892,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":136893,"byte_end":136971,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Stream` types","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":136972,"byte_end":137001,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6751},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":188978,"byte_end":188983,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6754},{"krate":0,"index":6755}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":188918,"byte_end":188966,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":188886,"byte_end":188900,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6779},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":188978,"byte_end":188983,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":188886,"byte_end":188900,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6808},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191084,"byte_end":191091,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6812},{"krate":0,"index":6811}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191005,"byte_end":191072,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":190973,"byte_end":190987,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6836},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191084,"byte_end":191091,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":6840},{"krate":0,"index":6841}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":190973,"byte_end":190987,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6864},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192477,"byte_end":192483,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6867},{"krate":0,"index":6866}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192398,"byte_end":192465,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192366,"byte_end":192380,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6887},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192477,"byte_end":192483,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":6890},{"krate":0,"index":6891}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192366,"byte_end":192380,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6909},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194174,"byte_end":194179,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6912}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194114,"byte_end":194162,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194082,"byte_end":194096,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6932},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194174,"byte_end":194179,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"__Cycle","qualname":"::stream::stream::cycle::_::__Cycle","value":"__Cycle {  }","parent":null,"children":[{"krate":0,"index":6935},{"krate":0,"index":6936}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194082,"byte_end":194096,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6954},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":195795,"byte_end":195804,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6957},{"krate":0,"index":6956}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":195735,"byte_end":195783,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":195703,"byte_end":195717,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6977},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":195795,"byte_end":195804,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":6980},{"krate":0,"index":6981}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":195703,"byte_end":195717,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7003},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":197432,"byte_end":197438,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7009},{"krate":0,"index":7007},{"krate":0,"index":7010},{"krate":0,"index":7008}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":197372,"byte_end":197420,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":197357,"byte_end":197371,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7042},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":197432,"byte_end":197438,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":197357,"byte_end":197371,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7076},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":200864,"byte_end":200873,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7081},{"krate":0,"index":7080},{"krate":0,"index":7082}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":200804,"byte_end":200852,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":200789,"byte_end":200803,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7112},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":200864,"byte_end":200873,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7119}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":200789,"byte_end":200803,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7146},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":203872,"byte_end":203879,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7149},{"krate":0,"index":7150}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":203812,"byte_end":203860,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":203780,"byte_end":203794,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7174},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":203872,"byte_end":203879,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7178},{"krate":0,"index":7179},{"krate":0,"index":7180}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":203780,"byte_end":203794,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7209},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":141504,"byte_end":141511,"line_start":56,"line_end":56,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7211}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7229},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":141504,"byte_end":141511,"line_start":56,"line_end":56,"column_start":5,"column_end":12},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7232},{"krate":0,"index":7233}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7268},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":205632,"byte_end":205636,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7275},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7276}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":205553,"byte_end":205620,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":205538,"byte_end":205552,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7312},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":205632,"byte_end":205636,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":7318},{"krate":0,"index":7319},{"krate":0,"index":7320}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":205538,"byte_end":205552,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7347},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208127,"byte_end":208134,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7352},{"krate":0,"index":7351},{"krate":0,"index":7353}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208048,"byte_end":208115,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208033,"byte_end":208047,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7383},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208127,"byte_end":208134,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7390}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208033,"byte_end":208047,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7413},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210088,"byte_end":210092,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7416},{"krate":0,"index":7415}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210028,"byte_end":210076,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":209996,"byte_end":210010,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7436},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210088,"byte_end":210092,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":7439},{"krate":0,"index":7440}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":209996,"byte_end":210010,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210526,"byte_end":210533,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210257,"byte_end":210319,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210324,"byte_end":210327,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210332,"byte_end":210400,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210405,"byte_end":210471,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210476,"byte_end":210514,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7462},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":211890,"byte_end":211902,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7464}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":211720,"byte_end":211793,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":211811,"byte_end":211878,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212465,"byte_end":212472,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212073,"byte_end":212146,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212151,"byte_end":212168,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212173,"byte_end":212176,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212181,"byte_end":212262,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212267,"byte_end":212349,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212354,"byte_end":212433,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212438,"byte_end":212453,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213083,"byte_end":213090,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212537,"byte_end":212604,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212609,"byte_end":212640,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212645,"byte_end":212648,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212653,"byte_end":212726,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212731,"byte_end":212786,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212791,"byte_end":212794,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212799,"byte_end":212880,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212885,"byte_end":212967,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":212972,"byte_end":213051,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213056,"byte_end":213071,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213716,"byte_end":213727,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213163,"byte_end":213237,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213242,"byte_end":213273,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213278,"byte_end":213281,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213286,"byte_end":213359,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213364,"byte_end":213419,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213424,"byte_end":213427,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213432,"byte_end":213513,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213518,"byte_end":213600,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213605,"byte_end":213684,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213689,"byte_end":213704,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214360,"byte_end":214370,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213840,"byte_end":213902,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213907,"byte_end":213910,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213915,"byte_end":213987,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":213992,"byte_end":214063,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214068,"byte_end":214071,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214076,"byte_end":214157,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214162,"byte_end":214244,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214249,"byte_end":214328,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214333,"byte_end":214348,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7471},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":142631,"byte_end":142638,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7474}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7496},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":142631,"byte_end":142638,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":7501}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7545},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215375,"byte_end":215378,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7549},{"krate":0,"index":7548}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215315,"byte_end":215363,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215300,"byte_end":215314,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7573},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215375,"byte_end":215378,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":7577},{"krate":0,"index":7578}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215300,"byte_end":215314,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7605},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":142999,"byte_end":143006,"line_start":104,"line_end":104,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7609}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7635},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":142999,"byte_end":143006,"line_start":104,"line_end":104,"column_start":5,"column_end":12},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":7640},{"krate":0,"index":7641}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7694},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217087,"byte_end":217091,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7697}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":216931,"byte_end":216990,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217008,"byte_end":217075,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7702},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218097,"byte_end":218111,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":7705}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":217913,"byte_end":217988,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":217989,"byte_end":218000,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218018,"byte_end":218085,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7710},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219584,"byte_end":219592,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":7713},{"krate":0,"index":7712}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219524,"byte_end":219572,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219492,"byte_end":219506,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7733},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219584,"byte_end":219592,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":7736},{"krate":0,"index":7737}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219492,"byte_end":219506,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220047,"byte_end":220051,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219892,"byte_end":219965,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219970,"byte_end":220035,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220376,"byte_end":220385,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220138,"byte_end":220200,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220205,"byte_end":220208,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220213,"byte_end":220286,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220291,"byte_end":220364,"line_start":44,"line_end":44,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":7759},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222095,"byte_end":222099,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":7762}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222035,"byte_end":222083,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222020,"byte_end":222034,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7784},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222095,"byte_end":222099,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":7788},{"krate":0,"index":7789}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222020,"byte_end":222034,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7808},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223351,"byte_end":223355,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7811},{"krate":0,"index":7810}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223291,"byte_end":223339,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223259,"byte_end":223273,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7831},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223351,"byte_end":223355,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":7834},{"krate":0,"index":7835}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223259,"byte_end":223273,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7857},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225197,"byte_end":225206,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7864},{"krate":0,"index":7861},{"krate":0,"index":7865},{"krate":0,"index":7862},{"krate":0,"index":7863}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225137,"byte_end":225185,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225122,"byte_end":225136,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7899},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225197,"byte_end":225206,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7904},{"krate":0,"index":7905},{"krate":0,"index":7906}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225122,"byte_end":225136,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7933},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":228770,"byte_end":228774,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7935}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":228710,"byte_end":228758,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":228678,"byte_end":228692,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7956},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":228770,"byte_end":228774,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":7959},{"krate":0,"index":7960}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":228678,"byte_end":228692,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7982},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":230805,"byte_end":230814,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7989},{"krate":0,"index":7986},{"krate":0,"index":7990},{"krate":0,"index":7987},{"krate":0,"index":7988}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":230745,"byte_end":230793,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":230730,"byte_end":230744,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8024},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":230805,"byte_end":230814,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8029},{"krate":0,"index":8030},{"krate":0,"index":8031}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":230730,"byte_end":230744,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8058},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":234346,"byte_end":234355,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8063},{"krate":0,"index":8064},{"krate":0,"index":8061},{"krate":0,"index":8062}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":234286,"byte_end":234334,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":234271,"byte_end":234285,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8092},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":234346,"byte_end":234355,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8096},{"krate":0,"index":8097},{"krate":0,"index":8098}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":234271,"byte_end":234285,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235693,"byte_end":235704,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235393,"byte_end":235447,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235452,"byte_end":235546,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235551,"byte_end":235614,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235619,"byte_end":235681,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236988,"byte_end":236999,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235841,"byte_end":235906,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235911,"byte_end":235968,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235973,"byte_end":235976,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235981,"byte_end":236046,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236051,"byte_end":236111,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236116,"byte_end":236119,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236124,"byte_end":236192,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236197,"byte_end":236240,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236245,"byte_end":236248,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236253,"byte_end":236267,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236272,"byte_end":236275,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236280,"byte_end":236287,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236292,"byte_end":236333,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236338,"byte_end":236362,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236367,"byte_end":236410,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236415,"byte_end":236443,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236448,"byte_end":236451,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236456,"byte_end":236494,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236499,"byte_end":236502,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236507,"byte_end":236525,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236530,"byte_end":236572,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236577,"byte_end":236592,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236597,"byte_end":236616,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236621,"byte_end":236646,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236651,"byte_end":236667,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236672,"byte_end":236705,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236710,"byte_end":236719,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236724,"byte_end":236731,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236736,"byte_end":236739,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236744,"byte_end":236793,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236798,"byte_end":236852,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236857,"byte_end":236860,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236865,"byte_end":236912,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236917,"byte_end":236950,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236955,"byte_end":236964,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":236969,"byte_end":236976,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":237175,"byte_end":237185,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":237078,"byte_end":237139,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":237144,"byte_end":237163,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8121},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239075,"byte_end":239079,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8125}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239015,"byte_end":239063,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239000,"byte_end":239014,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8157},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239075,"byte_end":239079,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239000,"byte_end":239014,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8191},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":241709,"byte_end":241712,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8196},{"krate":0,"index":8197},{"krate":0,"index":8194},{"krate":0,"index":8195}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":241649,"byte_end":241697,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":241617,"byte_end":241631,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8225},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":241709,"byte_end":241712,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":8229},{"krate":0,"index":8230},{"krate":0,"index":8231}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":241617,"byte_end":241631,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242257,"byte_end":242264,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242149,"byte_end":242223,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242228,"byte_end":242245,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242620,"byte_end":242627,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242358,"byte_end":242426,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242431,"byte_end":242462,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242467,"byte_end":242470,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242475,"byte_end":242548,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242553,"byte_end":242608,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243002,"byte_end":243013,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242733,"byte_end":242808,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242813,"byte_end":242844,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242849,"byte_end":242852,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242857,"byte_end":242930,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":242935,"byte_end":242990,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243419,"byte_end":243429,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243183,"byte_end":243246,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243251,"byte_end":243254,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243259,"byte_end":243331,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243336,"byte_end":243407,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8254},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246225,"byte_end":246231,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8258},{"krate":0,"index":8256},{"krate":0,"index":8257}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246165,"byte_end":246213,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246133,"byte_end":246147,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8280},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246225,"byte_end":246231,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"__Chunks","qualname":"::stream::stream::chunks::_::__Chunks","value":"__Chunks {  }","parent":null,"children":[{"krate":0,"index":8283},{"krate":0,"index":8284}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246133,"byte_end":246147,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8306},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249308,"byte_end":249319,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8310},{"krate":0,"index":8308},{"krate":0,"index":8309}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249248,"byte_end":249296,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249216,"byte_end":249230,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8332},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249308,"byte_end":249319,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__ReadyChunks","qualname":"::stream::stream::ready_chunks::_::__ReadyChunks","value":"__ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8335},{"krate":0,"index":8336}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249216,"byte_end":249230,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8358},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":252735,"byte_end":252739,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8364},{"krate":0,"index":8363},{"krate":0,"index":8365}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":252675,"byte_end":252723,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":252660,"byte_end":252674,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8399},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":252735,"byte_end":252739,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":8405},{"krate":0,"index":8406},{"krate":0,"index":8407}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":252660,"byte_end":252674,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11870},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8920823,"byte_end":8920838,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11874},{"krate":0,"index":11872},{"krate":0,"index":11873}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8920763,"byte_end":8920811,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8920748,"byte_end":8920762,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11896},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8920823,"byte_end":8920838,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"__BufferUnordered","qualname":"::stream::stream::buffer_unordered::_::__BufferUnordered","value":"__BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11899},{"krate":0,"index":11900}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8920748,"byte_end":8920762,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11825},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924096,"byte_end":8924104,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11829},{"krate":0,"index":11827},{"krate":0,"index":11828}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924036,"byte_end":8924084,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924021,"byte_end":8924035,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11851},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924096,"byte_end":8924104,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"__Buffered","qualname":"::stream::stream::buffered::_::__Buffered","value":"__Buffered {  }","parent":null,"children":[{"krate":0,"index":11854},{"krate":0,"index":11855}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924021,"byte_end":8924035,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11757},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927107,"byte_end":8927124,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11764},{"krate":0,"index":11761},{"krate":0,"index":11762},{"krate":0,"index":11763}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927028,"byte_end":8927095,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927013,"byte_end":8927027,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11796},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927107,"byte_end":8927124,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"__ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::_::__ForEachConcurrent","value":"__ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11801},{"krate":0,"index":11802}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927013,"byte_end":8927027,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8539},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256130,"byte_end":256141,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8542},{"krate":0,"index":8541}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256070,"byte_end":256118,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256038,"byte_end":256052,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8562},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256130,"byte_end":256141,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::stream::stream::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8565},{"krate":0,"index":8566}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256038,"byte_end":256052,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146321,"byte_end":146330,"line_start":206,"line_end":206,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1893}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146210,"byte_end":146284,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146285,"byte_end":146310,"line_start":205,"line_end":205,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147240,"byte_end":147244,"line_start":230,"line_end":230,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146345,"byte_end":146411,"line_start":207,"line_end":207,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146416,"byte_end":146419,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146424,"byte_end":146492,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146497,"byte_end":146572,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146577,"byte_end":146652,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146657,"byte_end":146711,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146716,"byte_end":146791,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146796,"byte_end":146806,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146811,"byte_end":146814,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146819,"byte_end":146833,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146838,"byte_end":146841,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146846,"byte_end":146853,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146858,"byte_end":146899,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146904,"byte_end":146947,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146952,"byte_end":146955,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146960,"byte_end":147001,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147006,"byte_end":147009,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147014,"byte_end":147059,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147064,"byte_end":147109,"line_start":225,"line_end":225,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147114,"byte_end":147159,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147164,"byte_end":147206,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147211,"byte_end":147220,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147225,"byte_end":147232,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148483,"byte_end":148494,"line_start":265,"line_end":265,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147386,"byte_end":147458,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147463,"byte_end":147524,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147529,"byte_end":147532,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147537,"byte_end":147612,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147617,"byte_end":147671,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147676,"byte_end":147679,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147684,"byte_end":147757,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147762,"byte_end":147824,"line_start":244,"line_end":244,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147829,"byte_end":147904,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147909,"byte_end":147963,"line_start":246,"line_end":246,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":147968,"byte_end":148043,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148048,"byte_end":148058,"line_start":248,"line_end":248,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148063,"byte_end":148066,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148071,"byte_end":148085,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148090,"byte_end":148093,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148098,"byte_end":148105,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148110,"byte_end":148151,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148156,"byte_end":148199,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148204,"byte_end":148207,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148212,"byte_end":148249,"line_start":256,"line_end":256,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148254,"byte_end":148257,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148262,"byte_end":148314,"line_start":258,"line_end":258,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148319,"byte_end":148349,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148354,"byte_end":148357,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148362,"byte_end":148414,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148419,"byte_end":148449,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148454,"byte_end":148463,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148468,"byte_end":148475,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149495,"byte_end":149498,"line_start":295,"line_end":295,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148659,"byte_end":148734,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148739,"byte_end":148762,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148767,"byte_end":148770,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148775,"byte_end":148847,"line_start":275,"line_end":275,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148852,"byte_end":148916,"line_start":276,"line_end":276,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148921,"byte_end":148958,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148963,"byte_end":148966,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":148971,"byte_end":149047,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149052,"byte_end":149123,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149128,"byte_end":149149,"line_start":281,"line_end":281,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149154,"byte_end":149157,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149162,"byte_end":149176,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149181,"byte_end":149184,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149189,"byte_end":149196,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149201,"byte_end":149242,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149247,"byte_end":149290,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149295,"byte_end":149298,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149303,"byte_end":149340,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149345,"byte_end":149384,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149389,"byte_end":149392,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149397,"byte_end":149461,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149466,"byte_end":149475,"line_start":293,"line_end":293,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149480,"byte_end":149487,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151058,"byte_end":151067,"line_start":341,"line_end":341,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149665,"byte_end":149736,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149741,"byte_end":149760,"line_start":304,"line_end":304,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149765,"byte_end":149768,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149773,"byte_end":149838,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149843,"byte_end":149912,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149917,"byte_end":149928,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149933,"byte_end":149936,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":149941,"byte_end":150016,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150021,"byte_end":150103,"line_start":311,"line_end":311,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150108,"byte_end":150126,"line_start":312,"line_end":312,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150131,"byte_end":150134,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150139,"byte_end":150162,"line_start":314,"line_end":314,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150167,"byte_end":150170,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150175,"byte_end":150250,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150255,"byte_end":150342,"line_start":317,"line_end":317,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150347,"byte_end":150403,"line_start":318,"line_end":318,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150408,"byte_end":150411,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150416,"byte_end":150428,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150433,"byte_end":150436,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150441,"byte_end":150510,"line_start":322,"line_end":322,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150515,"byte_end":150540,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150545,"byte_end":150548,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150553,"byte_end":150567,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150572,"byte_end":150575,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150580,"byte_end":150587,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150592,"byte_end":150633,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150638,"byte_end":150681,"line_start":329,"line_end":329,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150686,"byte_end":150689,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150694,"byte_end":150745,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150750,"byte_end":150753,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150758,"byte_end":150798,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150803,"byte_end":150806,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150811,"byte_end":150863,"line_start":335,"line_end":335,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150868,"byte_end":150920,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150925,"byte_end":150977,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":150982,"byte_end":151024,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151029,"byte_end":151038,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151043,"byte_end":151050,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152296,"byte_end":152302,"line_start":374,"line_end":374,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151211,"byte_end":151283,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151288,"byte_end":151315,"line_start":349,"line_end":349,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151320,"byte_end":151323,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151328,"byte_end":151403,"line_start":351,"line_end":351,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151408,"byte_end":151479,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151484,"byte_end":151556,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151561,"byte_end":151635,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151640,"byte_end":151698,"line_start":355,"line_end":355,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151703,"byte_end":151706,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151711,"byte_end":151787,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151792,"byte_end":151866,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151871,"byte_end":151892,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151897,"byte_end":151900,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151905,"byte_end":151919,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151924,"byte_end":151927,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151932,"byte_end":151939,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151944,"byte_end":151985,"line_start":364,"line_end":364,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":151990,"byte_end":152014,"line_start":365,"line_end":365,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152019,"byte_end":152062,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152067,"byte_end":152070,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152075,"byte_end":152113,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152118,"byte_end":152179,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152184,"byte_end":152187,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152192,"byte_end":152262,"line_start":371,"line_end":371,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152267,"byte_end":152276,"line_start":372,"line_end":372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152281,"byte_end":152288,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153627,"byte_end":153637,"line_start":408,"line_end":408,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152530,"byte_end":152605,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152610,"byte_end":152686,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152691,"byte_end":152694,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152699,"byte_end":152774,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152779,"byte_end":152854,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152859,"byte_end":152935,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":152940,"byte_end":153005,"line_start":389,"line_end":389,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153010,"byte_end":153013,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153018,"byte_end":153094,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153099,"byte_end":153173,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153178,"byte_end":153203,"line_start":393,"line_end":393,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153208,"byte_end":153211,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153216,"byte_end":153230,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153235,"byte_end":153242,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153247,"byte_end":153288,"line_start":397,"line_end":397,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153293,"byte_end":153336,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153341,"byte_end":153344,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153349,"byte_end":153387,"line_start":400,"line_end":400,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153392,"byte_end":153442,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153447,"byte_end":153498,"line_start":402,"line_end":402,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153503,"byte_end":153510,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153515,"byte_end":153518,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153523,"byte_end":153593,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153598,"byte_end":153607,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153612,"byte_end":153619,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154666,"byte_end":154670,"line_start":439,"line_end":439,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153869,"byte_end":153942,"line_start":417,"line_end":417,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153947,"byte_end":153975,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153980,"byte_end":153983,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":153988,"byte_end":154062,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154067,"byte_end":154134,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154139,"byte_end":154184,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154189,"byte_end":154192,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154197,"byte_end":154273,"line_start":424,"line_end":424,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154278,"byte_end":154304,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154309,"byte_end":154312,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154317,"byte_end":154331,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154336,"byte_end":154339,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154344,"byte_end":154351,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154356,"byte_end":154397,"line_start":430,"line_end":430,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154402,"byte_end":154445,"line_start":431,"line_end":431,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154450,"byte_end":154453,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154458,"byte_end":154495,"line_start":433,"line_end":433,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154500,"byte_end":154555,"line_start":434,"line_end":434,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154560,"byte_end":154563,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154568,"byte_end":154632,"line_start":436,"line_end":436,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154637,"byte_end":154646,"line_start":437,"line_end":437,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154651,"byte_end":154658,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155604,"byte_end":155611,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154879,"byte_end":154933,"line_start":448,"line_end":448,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154938,"byte_end":154993,"line_start":449,"line_end":449,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":154998,"byte_end":155001,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155006,"byte_end":155074,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155079,"byte_end":155082,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155087,"byte_end":155101,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155106,"byte_end":155109,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155114,"byte_end":155121,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155126,"byte_end":155167,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155172,"byte_end":155203,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155208,"byte_end":155243,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155248,"byte_end":155268,"line_start":459,"line_end":459,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155273,"byte_end":155276,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155281,"byte_end":155318,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155323,"byte_end":155326,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155331,"byte_end":155358,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155363,"byte_end":155387,"line_start":464,"line_end":464,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155392,"byte_end":155434,"line_start":465,"line_end":465,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155439,"byte_end":155448,"line_start":466,"line_end":466,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155453,"byte_end":155460,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155465,"byte_end":155468,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155473,"byte_end":155521,"line_start":469,"line_end":469,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155526,"byte_end":155570,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155575,"byte_end":155584,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155589,"byte_end":155596,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156804,"byte_end":156810,"line_start":512,"line_end":512,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155769,"byte_end":155831,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155836,"byte_end":155900,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155905,"byte_end":155908,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155913,"byte_end":155977,"line_start":483,"line_end":483,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":155982,"byte_end":156047,"line_start":484,"line_end":484,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156052,"byte_end":156098,"line_start":485,"line_end":485,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156103,"byte_end":156106,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156111,"byte_end":156160,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156165,"byte_end":156205,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156210,"byte_end":156213,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156218,"byte_end":156232,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156237,"byte_end":156240,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156245,"byte_end":156252,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156257,"byte_end":156298,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156303,"byte_end":156334,"line_start":494,"line_end":494,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156339,"byte_end":156374,"line_start":495,"line_end":495,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156379,"byte_end":156399,"line_start":496,"line_end":496,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156404,"byte_end":156407,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156412,"byte_end":156449,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156454,"byte_end":156457,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156462,"byte_end":156489,"line_start":500,"line_end":500,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156494,"byte_end":156525,"line_start":501,"line_end":501,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156530,"byte_end":156556,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156561,"byte_end":156627,"line_start":503,"line_end":503,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156632,"byte_end":156641,"line_start":504,"line_end":504,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156646,"byte_end":156653,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156658,"byte_end":156661,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156666,"byte_end":156701,"line_start":507,"line_end":507,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156706,"byte_end":156709,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156714,"byte_end":156770,"line_start":509,"line_end":509,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156775,"byte_end":156784,"line_start":510,"line_end":510,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":156789,"byte_end":156796,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157874,"byte_end":157879,"line_start":543,"line_end":543,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157040,"byte_end":157071,"line_start":520,"line_end":520,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157076,"byte_end":157079,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157084,"byte_end":157151,"line_start":522,"line_end":522,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157156,"byte_end":157228,"line_start":523,"line_end":523,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157233,"byte_end":157290,"line_start":524,"line_end":524,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157295,"byte_end":157298,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157303,"byte_end":157317,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157322,"byte_end":157325,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157330,"byte_end":157337,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157342,"byte_end":157383,"line_start":529,"line_end":529,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157388,"byte_end":157431,"line_start":530,"line_end":530,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157436,"byte_end":157458,"line_start":531,"line_end":531,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157463,"byte_end":157510,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157515,"byte_end":157518,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157523,"byte_end":157564,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157569,"byte_end":157610,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157615,"byte_end":157656,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157661,"byte_end":157702,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157707,"byte_end":157748,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157753,"byte_end":157794,"line_start":539,"line_end":539,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157799,"byte_end":157840,"line_start":540,"line_end":540,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157845,"byte_end":157854,"line_start":541,"line_end":541,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":157859,"byte_end":157866,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158829,"byte_end":158833,"line_start":570,"line_end":570,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158014,"byte_end":158081,"line_start":550,"line_end":550,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158086,"byte_end":158138,"line_start":551,"line_end":551,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158143,"byte_end":158146,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158151,"byte_end":158221,"line_start":553,"line_end":553,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158226,"byte_end":158302,"line_start":554,"line_end":554,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158307,"byte_end":158383,"line_start":555,"line_end":555,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158388,"byte_end":158458,"line_start":556,"line_end":556,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158463,"byte_end":158489,"line_start":557,"line_end":557,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158494,"byte_end":158497,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158502,"byte_end":158516,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158521,"byte_end":158524,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158529,"byte_end":158536,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158541,"byte_end":158582,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158587,"byte_end":158630,"line_start":563,"line_end":563,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158635,"byte_end":158638,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158643,"byte_end":158686,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158691,"byte_end":158760,"line_start":566,"line_end":566,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158765,"byte_end":158795,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158800,"byte_end":158809,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":158814,"byte_end":158821,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160027,"byte_end":160034,"line_start":610,"line_end":610,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159068,"byte_end":159133,"line_start":579,"line_end":579,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159138,"byte_end":159141,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159146,"byte_end":159160,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159165,"byte_end":159168,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159173,"byte_end":159180,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159185,"byte_end":159226,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159231,"byte_end":159262,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159267,"byte_end":159302,"line_start":586,"line_end":586,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159307,"byte_end":159327,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159332,"byte_end":159335,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159340,"byte_end":159379,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159384,"byte_end":159423,"line_start":590,"line_end":590,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159428,"byte_end":159467,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159472,"byte_end":159475,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159480,"byte_end":159507,"line_start":593,"line_end":593,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159512,"byte_end":159551,"line_start":594,"line_end":594,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159556,"byte_end":159595,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159600,"byte_end":159607,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159612,"byte_end":159639,"line_start":597,"line_end":597,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159644,"byte_end":159683,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159688,"byte_end":159727,"line_start":599,"line_end":599,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159732,"byte_end":159739,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159744,"byte_end":159771,"line_start":601,"line_end":601,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159776,"byte_end":159817,"line_start":602,"line_end":602,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159822,"byte_end":159863,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159868,"byte_end":159875,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159880,"byte_end":159883,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159888,"byte_end":159947,"line_start":606,"line_end":606,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159952,"byte_end":159993,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":159998,"byte_end":160007,"line_start":608,"line_end":608,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160012,"byte_end":160019,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161296,"byte_end":161304,"line_start":643,"line_end":643,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160211,"byte_end":160283,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160288,"byte_end":160291,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160296,"byte_end":160373,"line_start":620,"line_end":620,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160378,"byte_end":160453,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160458,"byte_end":160534,"line_start":622,"line_end":622,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160539,"byte_end":160542,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160547,"byte_end":160629,"line_start":624,"line_end":624,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160634,"byte_end":160717,"line_start":625,"line_end":625,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160722,"byte_end":160725,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160730,"byte_end":160806,"line_start":627,"line_end":627,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160811,"byte_end":160887,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160892,"byte_end":160913,"line_start":629,"line_end":629,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160918,"byte_end":160921,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160926,"byte_end":160940,"line_start":631,"line_end":631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160945,"byte_end":160948,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160953,"byte_end":160960,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":160965,"byte_end":161006,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161011,"byte_end":161054,"line_start":635,"line_end":635,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161059,"byte_end":161062,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161067,"byte_end":161104,"line_start":637,"line_end":637,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161109,"byte_end":161176,"line_start":638,"line_end":638,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161181,"byte_end":161184,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161189,"byte_end":161262,"line_start":640,"line_end":640,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161267,"byte_end":161276,"line_start":641,"line_end":641,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161281,"byte_end":161288,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162287,"byte_end":162291,"line_start":676,"line_end":676,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161478,"byte_end":161549,"line_start":652,"line_end":652,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161554,"byte_end":161584,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161589,"byte_end":161592,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161597,"byte_end":161672,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161677,"byte_end":161748,"line_start":656,"line_end":656,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161753,"byte_end":161793,"line_start":657,"line_end":657,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161798,"byte_end":161801,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161806,"byte_end":161820,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161825,"byte_end":161828,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161833,"byte_end":161840,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161845,"byte_end":161886,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161891,"byte_end":161915,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161920,"byte_end":161963,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161968,"byte_end":161971,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":161976,"byte_end":162014,"line_start":666,"line_end":666,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162019,"byte_end":162022,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162027,"byte_end":162071,"line_start":668,"line_end":668,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162076,"byte_end":162096,"line_start":669,"line_end":669,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162101,"byte_end":162164,"line_start":670,"line_end":670,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162169,"byte_end":162176,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162181,"byte_end":162184,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162189,"byte_end":162253,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162258,"byte_end":162267,"line_start":674,"line_end":674,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162272,"byte_end":162279,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163315,"byte_end":163325,"line_start":707,"line_end":707,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162537,"byte_end":162611,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162616,"byte_end":162639,"line_start":686,"line_end":686,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162644,"byte_end":162647,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162652,"byte_end":162725,"line_start":688,"line_end":688,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162730,"byte_end":162802,"line_start":689,"line_end":689,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162807,"byte_end":162884,"line_start":690,"line_end":690,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162889,"byte_end":162900,"line_start":691,"line_end":691,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162905,"byte_end":162908,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162913,"byte_end":162927,"line_start":693,"line_end":693,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162932,"byte_end":162935,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162940,"byte_end":162947,"line_start":695,"line_end":695,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162952,"byte_end":162993,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":162998,"byte_end":163022,"line_start":697,"line_end":697,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163027,"byte_end":163070,"line_start":698,"line_end":698,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163075,"byte_end":163078,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163083,"byte_end":163121,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163126,"byte_end":163129,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163134,"byte_end":163197,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163202,"byte_end":163205,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163210,"byte_end":163281,"line_start":704,"line_end":704,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163286,"byte_end":163295,"line_start":705,"line_end":705,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163300,"byte_end":163307,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164314,"byte_end":164324,"line_start":737,"line_end":737,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163559,"byte_end":163635,"line_start":716,"line_end":716,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163640,"byte_end":163663,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163668,"byte_end":163671,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163676,"byte_end":163751,"line_start":719,"line_end":719,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163756,"byte_end":163828,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163833,"byte_end":163900,"line_start":721,"line_end":721,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163905,"byte_end":163908,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163913,"byte_end":163927,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163932,"byte_end":163935,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163940,"byte_end":163947,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163952,"byte_end":163993,"line_start":726,"line_end":726,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":163998,"byte_end":164022,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164027,"byte_end":164070,"line_start":728,"line_end":728,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164075,"byte_end":164078,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164083,"byte_end":164121,"line_start":730,"line_end":730,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164126,"byte_end":164129,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164134,"byte_end":164197,"line_start":732,"line_end":732,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164202,"byte_end":164205,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164210,"byte_end":164280,"line_start":734,"line_end":734,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164285,"byte_end":164294,"line_start":735,"line_end":735,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164299,"byte_end":164306,"line_start":736,"line_end":736,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165840,"byte_end":165850,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164558,"byte_end":164628,"line_start":746,"line_end":746,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164633,"byte_end":164636,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164641,"byte_end":164712,"line_start":748,"line_end":748,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164717,"byte_end":164789,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164794,"byte_end":164864,"line_start":750,"line_end":750,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164869,"byte_end":164872,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164877,"byte_end":164948,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":164953,"byte_end":165039,"line_start":753,"line_end":753,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165044,"byte_end":165111,"line_start":754,"line_end":754,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165116,"byte_end":165180,"line_start":755,"line_end":755,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165185,"byte_end":165188,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165193,"byte_end":165207,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165212,"byte_end":165215,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165220,"byte_end":165227,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165232,"byte_end":165273,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165278,"byte_end":165302,"line_start":761,"line_end":761,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165307,"byte_end":165350,"line_start":762,"line_end":762,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165355,"byte_end":165383,"line_start":763,"line_end":763,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165388,"byte_end":165391,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165396,"byte_end":165434,"line_start":765,"line_end":765,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165439,"byte_end":165442,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165447,"byte_end":165465,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165470,"byte_end":165512,"line_start":768,"line_end":768,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165517,"byte_end":165532,"line_start":769,"line_end":769,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165537,"byte_end":165556,"line_start":770,"line_end":770,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165561,"byte_end":165586,"line_start":771,"line_end":771,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165591,"byte_end":165607,"line_start":772,"line_end":772,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165612,"byte_end":165639,"line_start":773,"line_end":773,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165644,"byte_end":165653,"line_start":774,"line_end":774,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165658,"byte_end":165665,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165670,"byte_end":165673,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165678,"byte_end":165723,"line_start":777,"line_end":777,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165728,"byte_end":165731,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165736,"byte_end":165806,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165811,"byte_end":165820,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165825,"byte_end":165832,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167057,"byte_end":167065,"line_start":823,"line_end":823,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":165999,"byte_end":166070,"line_start":790,"line_end":790,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166075,"byte_end":166118,"line_start":791,"line_end":791,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166123,"byte_end":166126,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166131,"byte_end":166206,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166211,"byte_end":166281,"line_start":794,"line_end":794,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166286,"byte_end":166324,"line_start":795,"line_end":795,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166329,"byte_end":166332,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166337,"byte_end":166412,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166417,"byte_end":166460,"line_start":798,"line_end":798,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166465,"byte_end":166468,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166473,"byte_end":166546,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166551,"byte_end":166594,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166599,"byte_end":166602,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166607,"byte_end":166621,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166626,"byte_end":166629,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166634,"byte_end":166641,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166646,"byte_end":166687,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166692,"byte_end":166716,"line_start":807,"line_end":807,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166721,"byte_end":166764,"line_start":808,"line_end":808,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166769,"byte_end":166772,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166777,"byte_end":166795,"line_start":810,"line_end":810,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166800,"byte_end":166803,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166808,"byte_end":166813,"line_start":812,"line_end":812,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166818,"byte_end":166879,"line_start":813,"line_end":813,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166884,"byte_end":166906,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166911,"byte_end":166940,"line_start":815,"line_end":815,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166945,"byte_end":166956,"line_start":816,"line_end":816,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166961,"byte_end":166979,"line_start":817,"line_end":817,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166984,"byte_end":166989,"line_start":818,"line_end":818,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":166994,"byte_end":166997,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167002,"byte_end":167023,"line_start":820,"line_end":820,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167028,"byte_end":167037,"line_start":821,"line_end":821,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167042,"byte_end":167049,"line_start":822,"line_end":822,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169271,"byte_end":169290,"line_start":879,"line_end":879,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167284,"byte_end":167355,"line_start":832,"line_end":832,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167360,"byte_end":167434,"line_start":833,"line_end":833,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167439,"byte_end":167453,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167458,"byte_end":167461,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167466,"byte_end":167529,"line_start":836,"line_end":836,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167534,"byte_end":167605,"line_start":837,"line_end":837,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167610,"byte_end":167662,"line_start":838,"line_end":838,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167667,"byte_end":167670,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167675,"byte_end":167750,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167755,"byte_end":167825,"line_start":841,"line_end":841,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167830,"byte_end":167894,"line_start":842,"line_end":842,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167899,"byte_end":167902,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167907,"byte_end":167978,"line_start":844,"line_end":844,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":167983,"byte_end":168053,"line_start":845,"line_end":845,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168058,"byte_end":168119,"line_start":846,"line_end":846,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168124,"byte_end":168191,"line_start":847,"line_end":847,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168196,"byte_end":168265,"line_start":848,"line_end":848,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168270,"byte_end":168342,"line_start":849,"line_end":849,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168347,"byte_end":168350,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168355,"byte_end":168430,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168435,"byte_end":168492,"line_start":852,"line_end":852,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168497,"byte_end":168500,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168505,"byte_end":168519,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168524,"byte_end":168527,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168532,"byte_end":168539,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168544,"byte_end":168585,"line_start":857,"line_end":857,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168590,"byte_end":168624,"line_start":858,"line_end":858,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168629,"byte_end":168672,"line_start":859,"line_end":859,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168677,"byte_end":168680,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168685,"byte_end":168725,"line_start":861,"line_end":861,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168730,"byte_end":168770,"line_start":862,"line_end":862,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168775,"byte_end":168815,"line_start":863,"line_end":863,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168820,"byte_end":168823,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168828,"byte_end":168896,"line_start":865,"line_end":865,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168901,"byte_end":168923,"line_start":866,"line_end":866,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168928,"byte_end":168953,"line_start":867,"line_end":867,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168958,"byte_end":168988,"line_start":868,"line_end":868,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":168993,"byte_end":169002,"line_start":869,"line_end":869,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169007,"byte_end":169013,"line_start":870,"line_end":870,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169018,"byte_end":169044,"line_start":871,"line_end":871,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169049,"byte_end":169075,"line_start":872,"line_end":872,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169080,"byte_end":169106,"line_start":873,"line_end":873,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169111,"byte_end":169125,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169130,"byte_end":169138,"line_start":875,"line_end":875,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169143,"byte_end":169150,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169238,"byte_end":169263,"line_start":878,"line_end":878,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170115,"byte_end":170119,"line_start":908,"line_end":908,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169607,"byte_end":169678,"line_start":892,"line_end":892,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169683,"byte_end":169686,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169691,"byte_end":169764,"line_start":894,"line_end":894,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169769,"byte_end":169804,"line_start":895,"line_end":895,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169809,"byte_end":169812,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169817,"byte_end":169831,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169836,"byte_end":169839,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169844,"byte_end":169851,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169856,"byte_end":169897,"line_start":900,"line_end":900,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169902,"byte_end":169945,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169950,"byte_end":169953,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":169958,"byte_end":170004,"line_start":903,"line_end":903,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170009,"byte_end":170012,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170017,"byte_end":170081,"line_start":905,"line_end":905,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170086,"byte_end":170095,"line_start":906,"line_end":906,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170100,"byte_end":170107,"line_start":907,"line_end":907,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170784,"byte_end":170788,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170257,"byte_end":170329,"line_start":915,"line_end":915,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170334,"byte_end":170337,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170342,"byte_end":170415,"line_start":917,"line_end":917,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170420,"byte_end":170466,"line_start":918,"line_end":918,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170471,"byte_end":170474,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170479,"byte_end":170493,"line_start":920,"line_end":920,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170498,"byte_end":170501,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170506,"byte_end":170513,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170518,"byte_end":170559,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170564,"byte_end":170607,"line_start":924,"line_end":924,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170612,"byte_end":170615,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170620,"byte_end":170666,"line_start":926,"line_end":926,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170671,"byte_end":170674,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170679,"byte_end":170750,"line_start":928,"line_end":928,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170755,"byte_end":170764,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170769,"byte_end":170776,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172409,"byte_end":172413,"line_start":977,"line_end":977,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":170926,"byte_end":170997,"line_start":938,"line_end":938,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171002,"byte_end":171075,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171080,"byte_end":171118,"line_start":940,"line_end":940,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171123,"byte_end":171126,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171131,"byte_end":171185,"line_start":942,"line_end":942,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171190,"byte_end":171262,"line_start":943,"line_end":943,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171267,"byte_end":171343,"line_start":944,"line_end":944,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171348,"byte_end":171416,"line_start":945,"line_end":945,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171421,"byte_end":171497,"line_start":946,"line_end":946,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171502,"byte_end":171524,"line_start":947,"line_end":947,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171529,"byte_end":171532,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171537,"byte_end":171604,"line_start":949,"line_end":949,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171609,"byte_end":171677,"line_start":950,"line_end":950,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171682,"byte_end":171695,"line_start":951,"line_end":951,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171700,"byte_end":171703,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171708,"byte_end":171722,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171727,"byte_end":171730,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171735,"byte_end":171742,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171747,"byte_end":171790,"line_start":956,"line_end":956,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171795,"byte_end":171838,"line_start":957,"line_end":957,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171843,"byte_end":171871,"line_start":958,"line_end":958,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171876,"byte_end":171879,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171884,"byte_end":171902,"line_start":960,"line_end":960,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171907,"byte_end":171945,"line_start":961,"line_end":961,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171950,"byte_end":171965,"line_start":962,"line_end":962,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171970,"byte_end":171987,"line_start":963,"line_end":963,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":171992,"byte_end":172034,"line_start":964,"line_end":964,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172039,"byte_end":172074,"line_start":965,"line_end":965,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172079,"byte_end":172123,"line_start":966,"line_end":966,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172128,"byte_end":172137,"line_start":967,"line_end":967,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172142,"byte_end":172156,"line_start":968,"line_end":968,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172161,"byte_end":172164,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172169,"byte_end":172212,"line_start":970,"line_end":970,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172217,"byte_end":172254,"line_start":971,"line_end":971,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172259,"byte_end":172296,"line_start":972,"line_end":972,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172301,"byte_end":172335,"line_start":973,"line_end":973,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172340,"byte_end":172374,"line_start":974,"line_end":974,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172379,"byte_end":172389,"line_start":975,"line_end":975,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172394,"byte_end":172401,"line_start":976,"line_end":976,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173342,"byte_end":173348,"line_start":1010,"line_end":1010,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172538,"byte_end":172585,"line_start":984,"line_end":984,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172590,"byte_end":172593,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172598,"byte_end":172672,"line_start":986,"line_end":986,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172677,"byte_end":172714,"line_start":987,"line_end":987,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172719,"byte_end":172722,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172727,"byte_end":172741,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172746,"byte_end":172749,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172754,"byte_end":172761,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172766,"byte_end":172807,"line_start":992,"line_end":992,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172812,"byte_end":172855,"line_start":993,"line_end":993,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172860,"byte_end":172863,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172868,"byte_end":172908,"line_start":995,"line_end":995,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172913,"byte_end":172916,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172921,"byte_end":172950,"line_start":997,"line_end":997,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172955,"byte_end":172983,"line_start":998,"line_end":998,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":172988,"byte_end":173045,"line_start":999,"line_end":999,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173050,"byte_end":173077,"line_start":1000,"line_end":1000,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173082,"byte_end":173105,"line_start":1001,"line_end":1001,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173110,"byte_end":173113,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173118,"byte_end":173153,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173158,"byte_end":173186,"line_start":1004,"line_end":1004,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173191,"byte_end":173248,"line_start":1005,"line_end":1005,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173253,"byte_end":173280,"line_start":1006,"line_end":1006,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173285,"byte_end":173308,"line_start":1007,"line_end":1007,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173313,"byte_end":173322,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173327,"byte_end":173334,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175107,"byte_end":175119,"line_start":1055,"line_end":1055,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173399,"byte_end":173453,"line_start":1014,"line_end":1014,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173458,"byte_end":173461,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173466,"byte_end":173541,"line_start":1016,"line_end":1016,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173546,"byte_end":173549,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173554,"byte_end":173629,"line_start":1018,"line_end":1018,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173634,"byte_end":173708,"line_start":1019,"line_end":1019,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173713,"byte_end":173787,"line_start":1020,"line_end":1020,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173792,"byte_end":173841,"line_start":1021,"line_end":1021,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173846,"byte_end":173849,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173854,"byte_end":173929,"line_start":1023,"line_end":1023,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":173934,"byte_end":174004,"line_start":1024,"line_end":1024,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174009,"byte_end":174076,"line_start":1025,"line_end":1025,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174081,"byte_end":174153,"line_start":1026,"line_end":1026,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174158,"byte_end":174227,"line_start":1027,"line_end":1027,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174232,"byte_end":174247,"line_start":1028,"line_end":1028,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174252,"byte_end":174255,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174260,"byte_end":174324,"line_start":1030,"line_end":1030,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174329,"byte_end":174386,"line_start":1031,"line_end":1031,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174391,"byte_end":174394,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174399,"byte_end":174413,"line_start":1033,"line_end":1033,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174418,"byte_end":174421,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174426,"byte_end":174433,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174438,"byte_end":174479,"line_start":1036,"line_end":1036,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174484,"byte_end":174527,"line_start":1037,"line_end":1037,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174532,"byte_end":174535,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174540,"byte_end":174602,"line_start":1039,"line_end":1039,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174607,"byte_end":174637,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174642,"byte_end":174696,"line_start":1041,"line_end":1041,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174701,"byte_end":174731,"line_start":1042,"line_end":1042,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174736,"byte_end":174785,"line_start":1043,"line_end":1043,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174790,"byte_end":174793,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174798,"byte_end":174860,"line_start":1045,"line_end":1045,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174865,"byte_end":174887,"line_start":1046,"line_end":1046,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174892,"byte_end":174912,"line_start":1047,"line_end":1047,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174917,"byte_end":174959,"line_start":1048,"line_end":1048,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174964,"byte_end":174969,"line_start":1049,"line_end":1049,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":174974,"byte_end":175007,"line_start":1050,"line_end":1050,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175012,"byte_end":175045,"line_start":1051,"line_end":1051,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175050,"byte_end":175059,"line_start":1052,"line_end":1052,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175064,"byte_end":175071,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175076,"byte_end":175099,"line_start":1054,"line_end":1054,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175495,"byte_end":175500,"line_start":1067,"line_end":1067,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175266,"byte_end":175307,"line_start":1062,"line_end":1062,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175312,"byte_end":175315,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175320,"byte_end":175395,"line_start":1064,"line_end":1064,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175400,"byte_end":175457,"line_start":1065,"line_end":1065,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175462,"byte_end":175487,"line_start":1066,"line_end":1066,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175956,"byte_end":175967,"line_start":1081,"line_end":1081,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175655,"byte_end":175696,"line_start":1074,"line_end":1074,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175701,"byte_end":175704,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175709,"byte_end":175768,"line_start":1076,"line_end":1076,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175773,"byte_end":175776,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175781,"byte_end":175856,"line_start":1078,"line_end":1078,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175861,"byte_end":175918,"line_start":1079,"line_end":1079,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":175923,"byte_end":175948,"line_start":1080,"line_end":1080,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176904,"byte_end":176912,"line_start":1102,"line_end":1102,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176120,"byte_end":176183,"line_start":1088,"line_end":1088,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176188,"byte_end":176191,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176196,"byte_end":176271,"line_start":1090,"line_end":1090,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176276,"byte_end":176352,"line_start":1091,"line_end":1091,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176357,"byte_end":176430,"line_start":1092,"line_end":1092,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176435,"byte_end":176508,"line_start":1093,"line_end":1093,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176513,"byte_end":176555,"line_start":1094,"line_end":1094,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176560,"byte_end":176563,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176568,"byte_end":176633,"line_start":1096,"line_end":1096,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176638,"byte_end":176641,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176646,"byte_end":176721,"line_start":1098,"line_end":1098,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176726,"byte_end":176783,"line_start":1099,"line_end":1099,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":176871,"byte_end":176896,"line_start":1101,"line_end":1101,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178636,"byte_end":178652,"line_start":1147,"line_end":1147,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177106,"byte_end":177181,"line_start":1110,"line_end":1110,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177186,"byte_end":177189,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177194,"byte_end":177269,"line_start":1112,"line_end":1112,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177274,"byte_end":177348,"line_start":1113,"line_end":1113,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177353,"byte_end":177425,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177430,"byte_end":177504,"line_start":1115,"line_end":1115,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177509,"byte_end":177538,"line_start":1116,"line_end":1116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177543,"byte_end":177546,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177551,"byte_end":177616,"line_start":1118,"line_end":1118,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177621,"byte_end":177624,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177629,"byte_end":177704,"line_start":1120,"line_end":1120,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177709,"byte_end":177766,"line_start":1121,"line_end":1121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177771,"byte_end":177774,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177779,"byte_end":177793,"line_start":1123,"line_end":1123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177798,"byte_end":177801,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177806,"byte_end":177813,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177818,"byte_end":177859,"line_start":1126,"line_end":1126,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177864,"byte_end":177898,"line_start":1127,"line_end":1127,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177903,"byte_end":177946,"line_start":1128,"line_end":1128,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177951,"byte_end":177954,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":177959,"byte_end":178009,"line_start":1130,"line_end":1130,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178014,"byte_end":178064,"line_start":1131,"line_end":1131,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178069,"byte_end":178072,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178077,"byte_end":178144,"line_start":1133,"line_end":1133,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178149,"byte_end":178211,"line_start":1134,"line_end":1134,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178216,"byte_end":178219,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178224,"byte_end":178249,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178254,"byte_end":178308,"line_start":1137,"line_end":1137,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178313,"byte_end":178316,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178321,"byte_end":178346,"line_start":1139,"line_end":1139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178351,"byte_end":178405,"line_start":1140,"line_end":1140,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178410,"byte_end":178413,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178418,"byte_end":178462,"line_start":1142,"line_end":1142,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178467,"byte_end":178503,"line_start":1143,"line_end":1143,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178508,"byte_end":178515,"line_start":1144,"line_end":1144,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178603,"byte_end":178628,"line_start":1146,"line_end":1146,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179548,"byte_end":179551,"line_start":1177,"line_end":1177,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178860,"byte_end":178908,"line_start":1155,"line_end":1155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178913,"byte_end":178916,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178921,"byte_end":178994,"line_start":1157,"line_end":1157,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":178999,"byte_end":179071,"line_start":1158,"line_end":1158,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179076,"byte_end":179089,"line_start":1159,"line_end":1159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179094,"byte_end":179097,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179102,"byte_end":179116,"line_start":1161,"line_end":1161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179121,"byte_end":179124,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179129,"byte_end":179136,"line_start":1163,"line_end":1163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179141,"byte_end":179182,"line_start":1164,"line_end":1164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179187,"byte_end":179230,"line_start":1165,"line_end":1165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179235,"byte_end":179238,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179243,"byte_end":179281,"line_start":1167,"line_end":1167,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179286,"byte_end":179325,"line_start":1168,"line_end":1168,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179330,"byte_end":179333,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179338,"byte_end":179372,"line_start":1170,"line_end":1170,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179377,"byte_end":179418,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179423,"byte_end":179451,"line_start":1172,"line_end":1172,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179456,"byte_end":179506,"line_start":1173,"line_end":1173,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179511,"byte_end":179520,"line_start":1174,"line_end":1174,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179525,"byte_end":179532,"line_start":1175,"line_end":1175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179537,"byte_end":179540,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180459,"byte_end":180464,"line_start":1208,"line_end":1208,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179732,"byte_end":179769,"line_start":1185,"line_end":1185,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179774,"byte_end":179777,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179782,"byte_end":179853,"line_start":1187,"line_end":1187,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179858,"byte_end":179934,"line_start":1188,"line_end":1188,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179939,"byte_end":179942,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179947,"byte_end":179954,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":179959,"byte_end":180000,"line_start":1191,"line_end":1191,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180005,"byte_end":180048,"line_start":1192,"line_end":1192,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180053,"byte_end":180056,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180061,"byte_end":180118,"line_start":1194,"line_end":1194,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180123,"byte_end":180179,"line_start":1195,"line_end":1195,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180184,"byte_end":180187,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180192,"byte_end":180232,"line_start":1197,"line_end":1197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180237,"byte_end":180240,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180245,"byte_end":180293,"line_start":1199,"line_end":1199,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180298,"byte_end":180326,"line_start":1200,"line_end":1200,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180331,"byte_end":180346,"line_start":1201,"line_end":1201,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180351,"byte_end":180370,"line_start":1202,"line_end":1202,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180375,"byte_end":180393,"line_start":1203,"line_end":1203,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180398,"byte_end":180413,"line_start":1204,"line_end":1204,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180418,"byte_end":180425,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180430,"byte_end":180439,"line_start":1206,"line_end":1206,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180444,"byte_end":180451,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180802,"byte_end":180810,"line_start":1219,"line_end":1219,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180656,"byte_end":180711,"line_start":1216,"line_end":1216,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180716,"byte_end":180719,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180724,"byte_end":180794,"line_start":1218,"line_end":1218,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181845,"byte_end":181851,"line_start":1245,"line_end":1245,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":180943,"byte_end":181010,"line_start":1226,"line_end":1226,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181015,"byte_end":181018,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181023,"byte_end":181097,"line_start":1228,"line_end":1228,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181102,"byte_end":181174,"line_start":1229,"line_end":1229,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181179,"byte_end":181231,"line_start":1230,"line_end":1230,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181236,"byte_end":181239,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181244,"byte_end":181317,"line_start":1232,"line_end":1232,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181322,"byte_end":181396,"line_start":1233,"line_end":1233,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181401,"byte_end":181476,"line_start":1234,"line_end":1234,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181481,"byte_end":181553,"line_start":1235,"line_end":1235,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181558,"byte_end":181570,"line_start":1236,"line_end":1236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181575,"byte_end":181578,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181583,"byte_end":181658,"line_start":1238,"line_end":1238,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181663,"byte_end":181720,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181725,"byte_end":181728,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181733,"byte_end":181745,"line_start":1241,"line_end":1241,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181750,"byte_end":181753,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181758,"byte_end":181807,"line_start":1243,"line_end":1243,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":181812,"byte_end":181837,"line_start":1244,"line_end":1244,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182960,"byte_end":182972,"line_start":1271,"line_end":1271,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182024,"byte_end":182097,"line_start":1252,"line_end":1252,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182102,"byte_end":182105,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182110,"byte_end":182183,"line_start":1254,"line_end":1254,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182188,"byte_end":182258,"line_start":1255,"line_end":1255,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182263,"byte_end":182338,"line_start":1256,"line_end":1256,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182343,"byte_end":182420,"line_start":1257,"line_end":1257,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182425,"byte_end":182453,"line_start":1258,"line_end":1258,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182458,"byte_end":182461,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182466,"byte_end":182539,"line_start":1260,"line_end":1260,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182544,"byte_end":182619,"line_start":1261,"line_end":1261,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182624,"byte_end":182685,"line_start":1262,"line_end":1262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182690,"byte_end":182693,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182698,"byte_end":182773,"line_start":1264,"line_end":1264,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182778,"byte_end":182835,"line_start":1265,"line_end":1265,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182840,"byte_end":182843,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182848,"byte_end":182860,"line_start":1267,"line_end":1267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182865,"byte_end":182868,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182873,"byte_end":182922,"line_start":1269,"line_end":1269,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":182927,"byte_end":182952,"line_start":1270,"line_end":1270,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185202,"byte_end":185209,"line_start":1324,"line_end":1324,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":184899,"byte_end":184972,"line_start":1319,"line_end":1319,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":184977,"byte_end":184980,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":184985,"byte_end":185054,"line_start":1321,"line_end":1321,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185059,"byte_end":185128,"line_start":1322,"line_end":1322,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185133,"byte_end":185194,"line_start":1323,"line_end":1323,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185665,"byte_end":185676,"line_start":1337,"line_end":1337,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185386,"byte_end":185461,"line_start":1332,"line_end":1332,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185466,"byte_end":185487,"line_start":1333,"line_end":1333,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185492,"byte_end":185495,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185500,"byte_end":185580,"line_start":1335,"line_end":1335,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185585,"byte_end":185657,"line_start":1336,"line_end":1336,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186129,"byte_end":186141,"line_start":1350,"line_end":1350,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185850,"byte_end":185926,"line_start":1345,"line_end":1345,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185931,"byte_end":185952,"line_start":1346,"line_end":1346,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185957,"byte_end":185960,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":185965,"byte_end":186044,"line_start":1348,"line_end":1348,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186049,"byte_end":186121,"line_start":1349,"line_end":1349,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186417,"byte_end":186432,"line_start":1360,"line_end":1360,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186316,"byte_end":186387,"line_start":1358,"line_end":1358,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186392,"byte_end":186409,"line_start":1359,"line_end":1359,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188533,"byte_end":188549,"line_start":1415,"line_end":1415,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186579,"byte_end":186654,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186659,"byte_end":186669,"line_start":1368,"line_end":1368,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186674,"byte_end":186677,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186682,"byte_end":186755,"line_start":1370,"line_end":1370,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186760,"byte_end":186828,"line_start":1371,"line_end":1371,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186833,"byte_end":186881,"line_start":1372,"line_end":1372,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186886,"byte_end":186961,"line_start":1373,"line_end":1373,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":186966,"byte_end":187042,"line_start":1374,"line_end":1374,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187047,"byte_end":187073,"line_start":1375,"line_end":1375,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187078,"byte_end":187081,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187086,"byte_end":187159,"line_start":1377,"line_end":1377,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187164,"byte_end":187234,"line_start":1378,"line_end":1378,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187239,"byte_end":187279,"line_start":1379,"line_end":1379,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187284,"byte_end":187287,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187292,"byte_end":187346,"line_start":1381,"line_end":1381,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187351,"byte_end":187435,"line_start":1382,"line_end":1382,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187440,"byte_end":187443,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187448,"byte_end":187462,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187467,"byte_end":187470,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187475,"byte_end":187482,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187487,"byte_end":187528,"line_start":1387,"line_end":1387,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187533,"byte_end":187567,"line_start":1388,"line_end":1388,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187572,"byte_end":187627,"line_start":1389,"line_end":1389,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187632,"byte_end":187635,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187640,"byte_end":187675,"line_start":1391,"line_end":1391,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187680,"byte_end":187730,"line_start":1392,"line_end":1392,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187735,"byte_end":187757,"line_start":1393,"line_end":1393,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187762,"byte_end":187772,"line_start":1394,"line_end":1394,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187777,"byte_end":187794,"line_start":1395,"line_end":1395,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187799,"byte_end":187825,"line_start":1396,"line_end":1396,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187830,"byte_end":187885,"line_start":1397,"line_end":1397,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187890,"byte_end":187919,"line_start":1398,"line_end":1398,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187924,"byte_end":187987,"line_start":1399,"line_end":1399,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":187992,"byte_end":188038,"line_start":1400,"line_end":1400,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188043,"byte_end":188057,"line_start":1401,"line_end":1401,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188062,"byte_end":188131,"line_start":1402,"line_end":1402,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188136,"byte_end":188161,"line_start":1403,"line_end":1403,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188166,"byte_end":188219,"line_start":1404,"line_end":1404,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188224,"byte_end":188253,"line_start":1405,"line_end":1405,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188258,"byte_end":188271,"line_start":1406,"line_end":1406,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188276,"byte_end":188346,"line_start":1407,"line_end":1407,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188351,"byte_end":188410,"line_start":1408,"line_end":1408,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188415,"byte_end":188445,"line_start":1409,"line_end":1409,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188450,"byte_end":188459,"line_start":1410,"line_end":1410,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188464,"byte_end":188469,"line_start":1411,"line_end":1411,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188474,"byte_end":188499,"line_start":1412,"line_end":1412,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188504,"byte_end":188513,"line_start":1413,"line_end":1413,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":188518,"byte_end":188525,"line_start":1414,"line_end":1414,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8588},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":293998,"byte_end":294005,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8593},{"krate":0,"index":8594},{"krate":0,"index":8592}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":293938,"byte_end":293986,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":293923,"byte_end":293937,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8624},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":293998,"byte_end":294005,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":8629},{"krate":0,"index":8630},{"krate":0,"index":8631}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":293923,"byte_end":293937,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8661},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":258217,"byte_end":258224,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8664}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8686},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":258217,"byte_end":258224,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":8690},{"krate":0,"index":8691}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8738},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":258472,"byte_end":258481,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8741}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8763},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":258472,"byte_end":258481,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":8767},{"krate":0,"index":8768}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8815},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":258782,"byte_end":258792,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":8818}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8840},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":258782,"byte_end":258792,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":8844},{"krate":0,"index":8845}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8889},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":296759,"byte_end":296769,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8891}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":296699,"byte_end":296747,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":296667,"byte_end":296681,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8909},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":296759,"byte_end":296769,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":8912},{"krate":0,"index":8913}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":296667,"byte_end":296681,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8938},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":259218,"byte_end":259223,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8941}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8963},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":259218,"byte_end":259223,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":8967},{"krate":0,"index":8968}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9015},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":259500,"byte_end":259506,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9018}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9040},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":259500,"byte_end":259506,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":9044},{"krate":0,"index":9045}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9089},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298084,"byte_end":298090,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9094},{"krate":0,"index":9095},{"krate":0,"index":9093}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298024,"byte_end":298072,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298009,"byte_end":298023,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9125},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298084,"byte_end":298090,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":9130},{"krate":0,"index":9131},{"krate":0,"index":9132}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298009,"byte_end":298023,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9159},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":300960,"byte_end":300967,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9162}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":300793,"byte_end":300863,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":300881,"byte_end":300948,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9167},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302033,"byte_end":302043,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9172},{"krate":0,"index":9171},{"krate":0,"index":9173}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":301954,"byte_end":302021,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":301939,"byte_end":301953,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9203},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302033,"byte_end":302043,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":301939,"byte_end":301953,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9233},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":303914,"byte_end":303923,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9239},{"krate":0,"index":9237},{"krate":0,"index":9240},{"krate":0,"index":9238}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":303854,"byte_end":303902,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":303839,"byte_end":303853,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9272},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":303914,"byte_end":303923,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":9277},{"krate":0,"index":9278},{"krate":0,"index":9279}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":303839,"byte_end":303853,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9306},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307079,"byte_end":307091,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9311},{"krate":0,"index":9310},{"krate":0,"index":9312}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307019,"byte_end":307067,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307004,"byte_end":307018,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9342},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307079,"byte_end":307091,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9347},{"krate":0,"index":9348},{"krate":0,"index":9349}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307004,"byte_end":307018,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9376},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310071,"byte_end":310081,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9378},{"krate":0,"index":9379}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310011,"byte_end":310059,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":309979,"byte_end":309993,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9399},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310071,"byte_end":310081,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9402},{"krate":0,"index":9403},{"krate":0,"index":9404}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":309979,"byte_end":309993,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9426},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312179,"byte_end":312189,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9430},{"krate":0,"index":9429}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312100,"byte_end":312167,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312068,"byte_end":312082,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9454},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312179,"byte_end":312189,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":9458},{"krate":0,"index":9459}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312068,"byte_end":312082,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9482},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313530,"byte_end":313539,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9485},{"krate":0,"index":9484}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313451,"byte_end":313518,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313419,"byte_end":313433,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9505},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313530,"byte_end":313539,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":9508},{"krate":0,"index":9509}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313419,"byte_end":313433,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9527},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":314926,"byte_end":314933,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9534},{"krate":0,"index":9532},{"krate":0,"index":9533},{"krate":0,"index":9535}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":314847,"byte_end":314914,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":314832,"byte_end":314846,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9571},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":314926,"byte_end":314933,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":9577},{"krate":0,"index":9578},{"krate":0,"index":9579}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":314832,"byte_end":314846,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319376,"byte_end":319386,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317519,"byte_end":317595,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317596,"byte_end":317599,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317600,"byte_end":317676,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317677,"byte_end":317747,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317748,"byte_end":317807,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317808,"byte_end":317811,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317812,"byte_end":317890,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317891,"byte_end":317968,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":317969,"byte_end":318033,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318034,"byte_end":318037,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318038,"byte_end":318110,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318111,"byte_end":318189,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318190,"byte_end":318219,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318220,"byte_end":318223,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318224,"byte_end":318301,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318302,"byte_end":318366,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318367,"byte_end":318419,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318420,"byte_end":318423,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318424,"byte_end":318501,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318502,"byte_end":318574,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318575,"byte_end":318644,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318645,"byte_end":318723,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318724,"byte_end":318727,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318728,"byte_end":318741,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318742,"byte_end":318745,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318746,"byte_end":318753,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318754,"byte_end":318787,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318788,"byte_end":318811,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318812,"byte_end":318853,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318854,"byte_end":318900,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318901,"byte_end":318904,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318905,"byte_end":318964,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318965,"byte_end":318987,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":318988,"byte_end":319022,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319023,"byte_end":319032,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319033,"byte_end":319036,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319037,"byte_end":319060,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319061,"byte_end":319100,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319101,"byte_end":319137,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319138,"byte_end":319181,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319182,"byte_end":319198,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319199,"byte_end":319219,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319220,"byte_end":319229,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319230,"byte_end":319237,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319238,"byte_end":319241,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319242,"byte_end":319307,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319308,"byte_end":319350,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319351,"byte_end":319360,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319361,"byte_end":319368,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9606},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319720,"byte_end":319729,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9610},{"krate":0,"index":9611},{"krate":0,"index":9612}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319660,"byte_end":319708,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319645,"byte_end":319659,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9642},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319720,"byte_end":319729,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9647},{"krate":0,"index":9648}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319645,"byte_end":319659,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9671},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":321631,"byte_end":321643,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9678},{"krate":0,"index":9675},{"krate":0,"index":9679},{"krate":0,"index":9676},{"krate":0,"index":9677}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":321571,"byte_end":321619,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":321556,"byte_end":321570,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9713},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":321631,"byte_end":321643,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9718},{"krate":0,"index":9719},{"krate":0,"index":9720}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":321556,"byte_end":321570,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9747},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325235,"byte_end":325247,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9754},{"krate":0,"index":9751},{"krate":0,"index":9755},{"krate":0,"index":9752},{"krate":0,"index":9753}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325175,"byte_end":325223,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325160,"byte_end":325174,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9789},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325235,"byte_end":325247,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryTakeWhile","qualname":"::stream::try_stream::try_take_while::_::__TryTakeWhile","value":"__TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9794},{"krate":0,"index":9795},{"krate":0,"index":9796}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325160,"byte_end":325174,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11709},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941414,"byte_end":8941432,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11713},{"krate":0,"index":11711},{"krate":0,"index":11712}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941354,"byte_end":8941402,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941322,"byte_end":8941336,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11735},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941414,"byte_end":8941432,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"__TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::_::__TryBufferUnordered","value":"__TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11738},{"krate":0,"index":11739}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941322,"byte_end":8941336,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11661},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8943962,"byte_end":8943973,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":11665},{"krate":0,"index":11663},{"krate":0,"index":11664}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8943902,"byte_end":8943950,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8943870,"byte_end":8943884,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11687},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8943962,"byte_end":8943973,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__TryBuffered","qualname":"::stream::try_stream::try_buffered::_::__TryBuffered","value":"__TryBuffered {  }","parent":null,"children":[{"krate":0,"index":11690},{"krate":0,"index":11691}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8943870,"byte_end":8943884,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11593},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8946465,"byte_end":8946485,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11600},{"krate":0,"index":11597},{"krate":0,"index":11598},{"krate":0,"index":11599}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8946386,"byte_end":8946453,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8946371,"byte_end":8946385,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11632},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8946465,"byte_end":8946485,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"__TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::_::__TryForEachConcurrent","value":"__TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11637},{"krate":0,"index":11638}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8946371,"byte_end":8946385,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9922},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":328929,"byte_end":328942,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":9924},{"krate":0,"index":9925}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":328721,"byte_end":328805,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":328823,"byte_end":328871,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262460,"byte_end":262472,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262398,"byte_end":262449,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263014,"byte_end":263022,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262490,"byte_end":262564,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262569,"byte_end":262595,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262600,"byte_end":262603,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262608,"byte_end":262622,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262627,"byte_end":262630,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262635,"byte_end":262642,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262647,"byte_end":262688,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262693,"byte_end":262739,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262744,"byte_end":262747,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262752,"byte_end":262772,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262777,"byte_end":262822,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262827,"byte_end":262858,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262863,"byte_end":262866,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262871,"byte_end":262925,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262930,"byte_end":262981,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262986,"byte_end":262994,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262999,"byte_end":263006,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263718,"byte_end":263724,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263198,"byte_end":263271,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263276,"byte_end":263307,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263312,"byte_end":263315,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263320,"byte_end":263334,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263339,"byte_end":263342,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263347,"byte_end":263354,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263359,"byte_end":263400,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263405,"byte_end":263451,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263456,"byte_end":263459,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263464,"byte_end":263484,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263489,"byte_end":263530,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263535,"byte_end":263566,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263571,"byte_end":263574,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263579,"byte_end":263632,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263637,"byte_end":263685,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263690,"byte_end":263698,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263703,"byte_end":263710,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264433,"byte_end":264440,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263914,"byte_end":263985,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":263990,"byte_end":264021,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264026,"byte_end":264029,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264034,"byte_end":264048,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264053,"byte_end":264056,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264061,"byte_end":264068,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264073,"byte_end":264114,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264119,"byte_end":264165,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264170,"byte_end":264173,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264178,"byte_end":264198,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264203,"byte_end":264244,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264249,"byte_end":264281,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264286,"byte_end":264289,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264294,"byte_end":264347,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264352,"byte_end":264400,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264405,"byte_end":264413,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264418,"byte_end":264425,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266045,"byte_end":266053,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264632,"byte_end":264708,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264713,"byte_end":264753,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264758,"byte_end":264761,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264766,"byte_end":264842,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264847,"byte_end":264923,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":264928,"byte_end":265001,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265006,"byte_end":265048,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265053,"byte_end":265056,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265061,"byte_end":265134,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265139,"byte_end":265170,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265175,"byte_end":265178,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265183,"byte_end":265257,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265262,"byte_end":265336,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265341,"byte_end":265357,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265362,"byte_end":265365,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265370,"byte_end":265441,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265446,"byte_end":265472,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265477,"byte_end":265480,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265485,"byte_end":265557,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265562,"byte_end":265611,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265616,"byte_end":265619,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265624,"byte_end":265638,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265643,"byte_end":265646,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265651,"byte_end":265658,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265663,"byte_end":265694,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265699,"byte_end":265723,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265728,"byte_end":265766,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265771,"byte_end":265774,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265779,"byte_end":265835,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265840,"byte_end":265843,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265848,"byte_end":265883,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265888,"byte_end":265927,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265932,"byte_end":265956,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265961,"byte_end":265977,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":265982,"byte_end":265998,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266003,"byte_end":266013,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266018,"byte_end":266025,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266030,"byte_end":266037,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267205,"byte_end":267212,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266306,"byte_end":266371,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266376,"byte_end":266425,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266430,"byte_end":266433,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266438,"byte_end":266517,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266522,"byte_end":266596,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266601,"byte_end":266677,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266682,"byte_end":266727,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266732,"byte_end":266735,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266740,"byte_end":266815,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266820,"byte_end":266860,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266865,"byte_end":266868,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266873,"byte_end":266982,"line_start":278,"line_end":278,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":266987,"byte_end":267061,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267066,"byte_end":267082,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267087,"byte_end":267090,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267095,"byte_end":267166,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267171,"byte_end":267197,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267764,"byte_end":267774,"line_start":299,"line_end":299,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267461,"byte_end":267535,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267540,"byte_end":267550,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267555,"byte_end":267558,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267563,"byte_end":267633,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267638,"byte_end":267714,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267719,"byte_end":267756,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268263,"byte_end":268274,"line_start":312,"line_end":312,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":267972,"byte_end":268051,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268056,"byte_end":268059,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268064,"byte_end":268134,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268139,"byte_end":268213,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268218,"byte_end":268255,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269195,"byte_end":269206,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268477,"byte_end":268530,"line_start":320,"line_end":320,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268535,"byte_end":268579,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268584,"byte_end":268587,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268592,"byte_end":268641,"line_start":323,"line_end":323,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268646,"byte_end":268719,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268724,"byte_end":268744,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268749,"byte_end":268752,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268757,"byte_end":268771,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268776,"byte_end":268779,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268784,"byte_end":268791,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268796,"byte_end":268855,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268860,"byte_end":268863,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268868,"byte_end":268887,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268892,"byte_end":268910,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268915,"byte_end":268987,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":268992,"byte_end":269022,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269027,"byte_end":269034,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269039,"byte_end":269113,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269118,"byte_end":269121,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269126,"byte_end":269175,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269180,"byte_end":269187,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270101,"byte_end":270109,"line_start":368,"line_end":368,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269362,"byte_end":269436,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269441,"byte_end":269515,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269520,"byte_end":269532,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269537,"byte_end":269540,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269545,"byte_end":269612,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269617,"byte_end":269689,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269694,"byte_end":269733,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269738,"byte_end":269741,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269746,"byte_end":269760,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269765,"byte_end":269768,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269773,"byte_end":269780,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269785,"byte_end":269826,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269831,"byte_end":269877,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269882,"byte_end":269885,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269890,"byte_end":269947,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269952,"byte_end":269955,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":269960,"byte_end":270014,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270019,"byte_end":270068,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270073,"byte_end":270081,"line_start":366,"line_end":366,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270086,"byte_end":270093,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271461,"byte_end":271473,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270276,"byte_end":270345,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270350,"byte_end":270406,"line_start":376,"line_end":376,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270411,"byte_end":270414,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270419,"byte_end":270494,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270499,"byte_end":270569,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270574,"byte_end":270612,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270617,"byte_end":270620,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270625,"byte_end":270703,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270708,"byte_end":270768,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270773,"byte_end":270830,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270835,"byte_end":270902,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270907,"byte_end":270937,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270942,"byte_end":270945,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270950,"byte_end":270964,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270969,"byte_end":270972,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270977,"byte_end":270984,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":270989,"byte_end":271030,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271035,"byte_end":271059,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271064,"byte_end":271110,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271115,"byte_end":271118,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271123,"byte_end":271144,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271149,"byte_end":271152,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271157,"byte_end":271162,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271167,"byte_end":271228,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271233,"byte_end":271255,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271260,"byte_end":271324,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271329,"byte_end":271340,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271345,"byte_end":271384,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271389,"byte_end":271394,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271399,"byte_end":271402,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271407,"byte_end":271428,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271433,"byte_end":271441,"line_start":406,"line_end":406,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271446,"byte_end":271453,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272486,"byte_end":272500,"line_start":438,"line_end":438,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271737,"byte_end":271811,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271816,"byte_end":271839,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271844,"byte_end":271847,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271852,"byte_end":271883,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271888,"byte_end":271965,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":271970,"byte_end":271999,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272004,"byte_end":272007,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272012,"byte_end":272026,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272031,"byte_end":272034,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272039,"byte_end":272046,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272051,"byte_end":272092,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272097,"byte_end":272121,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272126,"byte_end":272172,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272177,"byte_end":272180,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272185,"byte_end":272254,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272259,"byte_end":272329,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272334,"byte_end":272337,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272342,"byte_end":272409,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272414,"byte_end":272453,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272458,"byte_end":272466,"line_start":436,"line_end":436,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272471,"byte_end":272478,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273533,"byte_end":273547,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272777,"byte_end":272851,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272856,"byte_end":272879,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272884,"byte_end":272887,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272892,"byte_end":272923,"line_start":450,"line_end":450,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":272928,"byte_end":273005,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273010,"byte_end":273039,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273044,"byte_end":273047,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273052,"byte_end":273066,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273071,"byte_end":273074,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273079,"byte_end":273086,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273091,"byte_end":273132,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273137,"byte_end":273161,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273166,"byte_end":273212,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273217,"byte_end":273220,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273225,"byte_end":273301,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273306,"byte_end":273376,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273381,"byte_end":273384,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273389,"byte_end":273456,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273461,"byte_end":273500,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273505,"byte_end":273513,"line_start":466,"line_end":466,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273518,"byte_end":273525,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275455,"byte_end":275478,"line_start":520,"line_end":520,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273773,"byte_end":273855,"line_start":477,"line_end":477,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273860,"byte_end":273934,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273939,"byte_end":273989,"line_start":479,"line_end":479,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":273994,"byte_end":273997,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274002,"byte_end":274024,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274029,"byte_end":274115,"line_start":482,"line_end":482,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274120,"byte_end":274205,"line_start":483,"line_end":483,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274210,"byte_end":274238,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274243,"byte_end":274246,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274251,"byte_end":274326,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274331,"byte_end":274388,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274393,"byte_end":274396,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274401,"byte_end":274415,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274420,"byte_end":274423,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274428,"byte_end":274435,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274440,"byte_end":274481,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274486,"byte_end":274520,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274525,"byte_end":274582,"line_start":494,"line_end":494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274587,"byte_end":274590,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274595,"byte_end":274635,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274640,"byte_end":274680,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274685,"byte_end":274726,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274731,"byte_end":274734,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274739,"byte_end":274790,"line_start":500,"line_end":500,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274795,"byte_end":274848,"line_start":501,"line_end":501,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274853,"byte_end":274875,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274880,"byte_end":274905,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274910,"byte_end":274972,"line_start":504,"line_end":504,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274977,"byte_end":274992,"line_start":505,"line_end":505,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":274997,"byte_end":275006,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275011,"byte_end":275017,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275022,"byte_end":275025,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275030,"byte_end":275056,"line_start":509,"line_end":509,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275061,"byte_end":275128,"line_start":510,"line_end":510,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275133,"byte_end":275147,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275152,"byte_end":275155,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275160,"byte_end":275221,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275226,"byte_end":275254,"line_start":514,"line_end":514,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275259,"byte_end":275309,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275314,"byte_end":275322,"line_start":516,"line_end":516,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275327,"byte_end":275334,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275422,"byte_end":275447,"line_start":519,"line_end":519,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276927,"byte_end":276938,"line_start":567,"line_end":567,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275888,"byte_end":275940,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":275945,"byte_end":276012,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276017,"byte_end":276020,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276025,"byte_end":276099,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276104,"byte_end":276185,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276190,"byte_end":276260,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276265,"byte_end":276268,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276273,"byte_end":276341,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276346,"byte_end":276349,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276354,"byte_end":276368,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276373,"byte_end":276376,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276381,"byte_end":276388,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276393,"byte_end":276434,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276439,"byte_end":276470,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276475,"byte_end":276513,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276518,"byte_end":276538,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276543,"byte_end":276546,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276551,"byte_end":276588,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276593,"byte_end":276596,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276601,"byte_end":276628,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276633,"byte_end":276657,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276662,"byte_end":276708,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276713,"byte_end":276722,"line_start":559,"line_end":559,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276727,"byte_end":276770,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276775,"byte_end":276782,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276787,"byte_end":276790,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276795,"byte_end":276858,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276863,"byte_end":276894,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276899,"byte_end":276907,"line_start":565,"line_end":565,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":276912,"byte_end":276919,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278409,"byte_end":278419,"line_start":604,"line_end":604,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277121,"byte_end":277194,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277199,"byte_end":277233,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277238,"byte_end":277241,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277246,"byte_end":277321,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277326,"byte_end":277401,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277406,"byte_end":277479,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277484,"byte_end":277555,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277560,"byte_end":277610,"line_start":581,"line_end":581,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277615,"byte_end":277618,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277623,"byte_end":277694,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277699,"byte_end":277702,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277707,"byte_end":277783,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277788,"byte_end":277858,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277863,"byte_end":277888,"line_start":587,"line_end":587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277893,"byte_end":277896,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277901,"byte_end":277915,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277920,"byte_end":277927,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277932,"byte_end":277973,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":277978,"byte_end":278002,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278007,"byte_end":278064,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278069,"byte_end":278072,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278077,"byte_end":278157,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278162,"byte_end":278205,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278210,"byte_end":278243,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278248,"byte_end":278255,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278260,"byte_end":278263,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278268,"byte_end":278316,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278321,"byte_end":278376,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278381,"byte_end":278389,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278394,"byte_end":278401,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280046,"byte_end":280060,"line_start":645,"line_end":645,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278670,"byte_end":278732,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278737,"byte_end":278805,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278810,"byte_end":278844,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278849,"byte_end":278852,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278857,"byte_end":278932,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":278937,"byte_end":279012,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279017,"byte_end":279093,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279098,"byte_end":279163,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279168,"byte_end":279171,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279176,"byte_end":279247,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279252,"byte_end":279255,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279260,"byte_end":279336,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279341,"byte_end":279415,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279420,"byte_end":279445,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279450,"byte_end":279453,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279458,"byte_end":279472,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279477,"byte_end":279484,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279489,"byte_end":279530,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279535,"byte_end":279592,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279597,"byte_end":279622,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279627,"byte_end":279630,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279635,"byte_end":279705,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279710,"byte_end":279765,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279770,"byte_end":279832,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279837,"byte_end":279852,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279857,"byte_end":279864,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279869,"byte_end":279872,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279877,"byte_end":279898,"line_start":640,"line_end":640,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279903,"byte_end":279952,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":279957,"byte_end":280013,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280018,"byte_end":280026,"line_start":643,"line_end":643,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280031,"byte_end":280038,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281752,"byte_end":281763,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280337,"byte_end":280402,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280407,"byte_end":280410,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280415,"byte_end":280488,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280493,"byte_end":280566,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280571,"byte_end":280644,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280649,"byte_end":280719,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280724,"byte_end":280727,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280732,"byte_end":280746,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280751,"byte_end":280754,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280759,"byte_end":280766,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280771,"byte_end":280812,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280817,"byte_end":280848,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280853,"byte_end":280904,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280909,"byte_end":280929,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280934,"byte_end":280937,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280942,"byte_end":280981,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":280986,"byte_end":281025,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281030,"byte_end":281069,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281074,"byte_end":281077,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281082,"byte_end":281109,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281114,"byte_end":281157,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281162,"byte_end":281169,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281174,"byte_end":281201,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281206,"byte_end":281249,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281254,"byte_end":281298,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281303,"byte_end":281310,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281315,"byte_end":281342,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281347,"byte_end":281392,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281397,"byte_end":281442,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281447,"byte_end":281491,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281496,"byte_end":281503,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281508,"byte_end":281511,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281516,"byte_end":281555,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281560,"byte_end":281609,"line_start":687,"line_end":687,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281614,"byte_end":281663,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281668,"byte_end":281718,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281723,"byte_end":281732,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":281737,"byte_end":281744,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283355,"byte_end":283363,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282068,"byte_end":282138,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282143,"byte_end":282203,"line_start":704,"line_end":704,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282208,"byte_end":282211,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282216,"byte_end":282286,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282291,"byte_end":282367,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282372,"byte_end":282448,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282453,"byte_end":282523,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282528,"byte_end":282554,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282559,"byte_end":282562,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282567,"byte_end":282647,"line_start":712,"line_end":712,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282652,"byte_end":282721,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282726,"byte_end":282747,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282752,"byte_end":282755,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282760,"byte_end":282774,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282779,"byte_end":282782,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282787,"byte_end":282794,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282799,"byte_end":282840,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282845,"byte_end":282891,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282896,"byte_end":282899,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282904,"byte_end":282973,"line_start":722,"line_end":722,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":282978,"byte_end":283055,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283060,"byte_end":283093,"line_start":724,"line_end":724,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283098,"byte_end":283101,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283106,"byte_end":283192,"line_start":726,"line_end":726,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283197,"byte_end":283283,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283288,"byte_end":283322,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283327,"byte_end":283335,"line_start":729,"line_end":729,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283340,"byte_end":283347,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284889,"byte_end":284899,"line_start":774,"line_end":774,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283643,"byte_end":283705,"line_start":740,"line_end":740,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283710,"byte_end":283785,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283790,"byte_end":283793,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283798,"byte_end":283869,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283874,"byte_end":283950,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283955,"byte_end":283994,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":283999,"byte_end":284002,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284007,"byte_end":284093,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284098,"byte_end":284101,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284106,"byte_end":284190,"line_start":749,"line_end":749,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284195,"byte_end":284251,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284256,"byte_end":284259,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284264,"byte_end":284278,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284283,"byte_end":284286,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284291,"byte_end":284298,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284303,"byte_end":284344,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284349,"byte_end":284380,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284385,"byte_end":284423,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284428,"byte_end":284448,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284453,"byte_end":284456,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284461,"byte_end":284522,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284527,"byte_end":284530,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284535,"byte_end":284562,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284567,"byte_end":284598,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284603,"byte_end":284629,"line_start":764,"line_end":764,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284634,"byte_end":284704,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284709,"byte_end":284718,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284723,"byte_end":284730,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284735,"byte_end":284738,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284743,"byte_end":284782,"line_start":769,"line_end":769,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284787,"byte_end":284790,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284795,"byte_end":284855,"line_start":771,"line_end":771,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284860,"byte_end":284869,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":284874,"byte_end":284881,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287665,"byte_end":287685,"line_start":841,"line_end":841,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285153,"byte_end":285231,"line_start":782,"line_end":782,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285236,"byte_end":285239,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285244,"byte_end":285349,"line_start":784,"line_end":784,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285354,"byte_end":285397,"line_start":785,"line_end":785,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285402,"byte_end":285405,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285410,"byte_end":285478,"line_start":787,"line_end":787,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285483,"byte_end":285556,"line_start":788,"line_end":788,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285561,"byte_end":285617,"line_start":789,"line_end":789,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285622,"byte_end":285625,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285630,"byte_end":285705,"line_start":791,"line_end":791,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285710,"byte_end":285783,"line_start":792,"line_end":792,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285788,"byte_end":285853,"line_start":793,"line_end":793,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285858,"byte_end":285861,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285866,"byte_end":285941,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":285946,"byte_end":286003,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286008,"byte_end":286011,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286016,"byte_end":286030,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286035,"byte_end":286038,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286043,"byte_end":286095,"line_start":800,"line_end":800,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286100,"byte_end":286107,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286112,"byte_end":286153,"line_start":802,"line_end":802,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286158,"byte_end":286192,"line_start":803,"line_end":803,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286197,"byte_end":286254,"line_start":804,"line_end":804,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286259,"byte_end":286262,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286267,"byte_end":286317,"line_start":806,"line_end":806,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286322,"byte_end":286372,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286377,"byte_end":286380,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286385,"byte_end":286460,"line_start":809,"line_end":809,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286465,"byte_end":286468,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286473,"byte_end":286539,"line_start":811,"line_end":811,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286544,"byte_end":286547,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286552,"byte_end":286577,"line_start":813,"line_end":813,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286582,"byte_end":286636,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286641,"byte_end":286644,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286649,"byte_end":286674,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286679,"byte_end":286733,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286738,"byte_end":286741,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286746,"byte_end":286790,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286795,"byte_end":286831,"line_start":820,"line_end":820,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286836,"byte_end":286843,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286848,"byte_end":286851,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286856,"byte_end":286916,"line_start":823,"line_end":823,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286921,"byte_end":286928,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286933,"byte_end":286974,"line_start":825,"line_end":825,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":286979,"byte_end":287010,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287015,"byte_end":287066,"line_start":827,"line_end":827,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287071,"byte_end":287074,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287079,"byte_end":287133,"line_start":829,"line_end":829,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287138,"byte_end":287204,"line_start":830,"line_end":830,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287209,"byte_end":287212,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287217,"byte_end":287266,"line_start":832,"line_end":832,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287271,"byte_end":287325,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287330,"byte_end":287333,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287338,"byte_end":287391,"line_start":835,"line_end":835,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287396,"byte_end":287468,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287473,"byte_end":287532,"line_start":837,"line_end":837,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287537,"byte_end":287544,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287632,"byte_end":287657,"line_start":840,"line_end":840,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290710,"byte_end":290722,"line_start":917,"line_end":917,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":287962,"byte_end":288028,"line_start":851,"line_end":851,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288033,"byte_end":288036,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288041,"byte_end":288146,"line_start":853,"line_end":853,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288151,"byte_end":288194,"line_start":854,"line_end":854,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288199,"byte_end":288202,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288207,"byte_end":288275,"line_start":856,"line_end":856,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288280,"byte_end":288356,"line_start":857,"line_end":857,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288361,"byte_end":288391,"line_start":858,"line_end":858,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288396,"byte_end":288399,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288404,"byte_end":288479,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288484,"byte_end":288557,"line_start":861,"line_end":861,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288562,"byte_end":288627,"line_start":862,"line_end":862,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288632,"byte_end":288635,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288640,"byte_end":288715,"line_start":864,"line_end":864,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288720,"byte_end":288777,"line_start":865,"line_end":865,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288782,"byte_end":288785,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288790,"byte_end":288804,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288809,"byte_end":288812,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288817,"byte_end":288867,"line_start":869,"line_end":869,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288872,"byte_end":288879,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288884,"byte_end":288925,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288930,"byte_end":288964,"line_start":872,"line_end":872,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":288969,"byte_end":288999,"line_start":873,"line_end":873,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289004,"byte_end":289061,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289066,"byte_end":289069,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289074,"byte_end":289124,"line_start":876,"line_end":876,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289129,"byte_end":289179,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289184,"byte_end":289187,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289192,"byte_end":289231,"line_start":879,"line_end":879,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289236,"byte_end":289315,"line_start":880,"line_end":880,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289320,"byte_end":289323,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289328,"byte_end":289390,"line_start":882,"line_end":882,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289395,"byte_end":289398,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289403,"byte_end":289466,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289471,"byte_end":289474,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289479,"byte_end":289508,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289513,"byte_end":289576,"line_start":887,"line_end":887,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289581,"byte_end":289611,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289616,"byte_end":289630,"line_start":889,"line_end":889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289635,"byte_end":289638,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289643,"byte_end":289668,"line_start":891,"line_end":891,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289673,"byte_end":289727,"line_start":892,"line_end":892,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289732,"byte_end":289786,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289791,"byte_end":289794,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289799,"byte_end":289843,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289848,"byte_end":289884,"line_start":896,"line_end":896,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289889,"byte_end":289896,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289901,"byte_end":289904,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289909,"byte_end":289969,"line_start":899,"line_end":899,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289974,"byte_end":289981,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":289986,"byte_end":290027,"line_start":901,"line_end":901,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290032,"byte_end":290063,"line_start":902,"line_end":902,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290068,"byte_end":290119,"line_start":903,"line_end":903,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290124,"byte_end":290127,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290132,"byte_end":290186,"line_start":905,"line_end":905,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290191,"byte_end":290249,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290254,"byte_end":290257,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290262,"byte_end":290311,"line_start":908,"line_end":908,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290316,"byte_end":290370,"line_start":909,"line_end":909,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290375,"byte_end":290378,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290383,"byte_end":290436,"line_start":911,"line_end":911,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290441,"byte_end":290513,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290518,"byte_end":290577,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290582,"byte_end":290589,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290677,"byte_end":290702,"line_start":916,"line_end":916,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":291084,"byte_end":291103,"line_start":929,"line_end":929,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":290976,"byte_end":291054,"line_start":927,"line_end":927,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":291059,"byte_end":291076,"line_start":928,"line_end":928,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293397,"byte_end":293412,"line_start":995,"line_end":995,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292175,"byte_end":292257,"line_start":967,"line_end":967,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292262,"byte_end":292265,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292270,"byte_end":292385,"line_start":969,"line_end":969,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292390,"byte_end":292481,"line_start":970,"line_end":970,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292486,"byte_end":292576,"line_start":971,"line_end":971,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292581,"byte_end":292666,"line_start":972,"line_end":972,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292671,"byte_end":292674,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292679,"byte_end":292743,"line_start":974,"line_end":974,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292748,"byte_end":292805,"line_start":975,"line_end":975,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292810,"byte_end":292813,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292818,"byte_end":292832,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292837,"byte_end":292840,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292845,"byte_end":292852,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292857,"byte_end":292898,"line_start":980,"line_end":980,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292903,"byte_end":292949,"line_start":981,"line_end":981,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292954,"byte_end":292988,"line_start":982,"line_end":982,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":292993,"byte_end":292996,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293001,"byte_end":293062,"line_start":984,"line_end":984,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293067,"byte_end":293113,"line_start":985,"line_end":985,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293118,"byte_end":293147,"line_start":986,"line_end":986,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293152,"byte_end":293155,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293160,"byte_end":293216,"line_start":988,"line_end":988,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293221,"byte_end":293259,"line_start":989,"line_end":989,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293264,"byte_end":293272,"line_start":990,"line_end":990,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293277,"byte_end":293284,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293289,"byte_end":293311,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":293366,"byte_end":293389,"line_start":994,"line_end":994,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9941},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334219,"byte_end":334223,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9943}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334097,"byte_end":334134,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334159,"byte_end":334207,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334741,"byte_end":334745,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334275,"byte_end":334339,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334340,"byte_end":334368,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334369,"byte_end":334372,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334373,"byte_end":334446,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334447,"byte_end":334502,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334503,"byte_end":334506,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334507,"byte_end":334514,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334515,"byte_end":334556,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334557,"byte_end":334600,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334601,"byte_end":334604,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334605,"byte_end":334649,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334650,"byte_end":334715,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334716,"byte_end":334725,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334726,"byte_end":334733,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9950},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335394,"byte_end":335400,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9952}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335270,"byte_end":335309,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335334,"byte_end":335382,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335924,"byte_end":335930,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335422,"byte_end":335482,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335483,"byte_end":335486,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335487,"byte_end":335554,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335555,"byte_end":335627,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335628,"byte_end":335685,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335686,"byte_end":335689,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335690,"byte_end":335697,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335698,"byte_end":335739,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335740,"byte_end":335783,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335784,"byte_end":335787,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335788,"byte_end":335823,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335824,"byte_end":335898,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335899,"byte_end":335908,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":335909,"byte_end":335916,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9959},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336715,"byte_end":336720,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":9961}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336599,"byte_end":336637,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336655,"byte_end":336703,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336888,"byte_end":336893,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336758,"byte_end":336806,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336807,"byte_end":336810,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336811,"byte_end":336880,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337911,"byte_end":337915,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337604,"byte_end":337645,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337646,"byte_end":337649,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337650,"byte_end":337657,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337658,"byte_end":337699,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337700,"byte_end":337743,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337744,"byte_end":337747,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337748,"byte_end":337792,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337793,"byte_end":337848,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337849,"byte_end":337885,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337886,"byte_end":337895,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":337896,"byte_end":337903,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9965},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338128,"byte_end":338132,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9967}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338068,"byte_end":338116,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338036,"byte_end":338050,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9985},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338128,"byte_end":338132,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":9988},{"krate":0,"index":9989}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338036,"byte_end":338050,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10007},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339268,"byte_end":339275,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10009}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339148,"byte_end":339190,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339208,"byte_end":339256,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339451,"byte_end":339458,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339319,"byte_end":339373,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339374,"byte_end":339377,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339378,"byte_end":339443,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340252,"byte_end":340258,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2621}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340151,"byte_end":340191,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340192,"byte_end":340240,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340946,"byte_end":340953,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340458,"byte_end":340531,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340532,"byte_end":340535,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340536,"byte_end":340595,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340596,"byte_end":340599,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340600,"byte_end":340614,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340615,"byte_end":340618,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340619,"byte_end":340626,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340627,"byte_end":340660,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340661,"byte_end":340689,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340690,"byte_end":340693,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340694,"byte_end":340723,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340724,"byte_end":340727,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340728,"byte_end":340792,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340793,"byte_end":340846,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340847,"byte_end":340868,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340869,"byte_end":340922,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340923,"byte_end":340930,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340931,"byte_end":340938,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10013},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341603,"byte_end":341609,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10017},{"krate":0,"index":10018},{"krate":0,"index":10016}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341543,"byte_end":341591,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341511,"byte_end":341525,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10044},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341603,"byte_end":341609,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":10048},{"krate":0,"index":10049},{"krate":0,"index":10050}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341511,"byte_end":341525,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342187,"byte_end":342193,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341711,"byte_end":341779,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341780,"byte_end":341856,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341857,"byte_end":341905,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341906,"byte_end":341909,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341910,"byte_end":341984,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":341985,"byte_end":342054,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342055,"byte_end":342082,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342083,"byte_end":342086,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342087,"byte_end":342158,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342159,"byte_end":342179,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342572,"byte_end":342579,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342464,"byte_end":342538,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342543,"byte_end":342560,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342935,"byte_end":342942,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342673,"byte_end":342741,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342746,"byte_end":342777,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342782,"byte_end":342785,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342790,"byte_end":342863,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342868,"byte_end":342923,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343317,"byte_end":343328,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343048,"byte_end":343123,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343128,"byte_end":343159,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343164,"byte_end":343167,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343172,"byte_end":343245,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343250,"byte_end":343305,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343734,"byte_end":343744,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343498,"byte_end":343561,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343566,"byte_end":343569,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343574,"byte_end":343646,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343651,"byte_end":343722,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346917,"byte_end":346923,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345475,"byte_end":345545,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345546,"byte_end":345549,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345550,"byte_end":345619,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345620,"byte_end":345701,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345702,"byte_end":345733,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345734,"byte_end":345737,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345738,"byte_end":345817,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345818,"byte_end":345897,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345898,"byte_end":345952,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345953,"byte_end":345956,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":345957,"byte_end":346037,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346038,"byte_end":346108,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346109,"byte_end":346131,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346132,"byte_end":346135,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346136,"byte_end":346213,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346214,"byte_end":346286,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346287,"byte_end":346364,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346365,"byte_end":346425,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346426,"byte_end":346429,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346430,"byte_end":346443,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346444,"byte_end":346447,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346448,"byte_end":346455,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346456,"byte_end":346497,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346498,"byte_end":346541,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346542,"byte_end":346545,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346546,"byte_end":346601,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346602,"byte_end":346625,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346626,"byte_end":346665,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346666,"byte_end":346703,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346704,"byte_end":346743,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346744,"byte_end":346760,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346761,"byte_end":346777,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346778,"byte_end":346787,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346788,"byte_end":346795,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346796,"byte_end":346799,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346800,"byte_end":346852,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346853,"byte_end":346891,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346892,"byte_end":346901,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":346902,"byte_end":346909,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10073},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347254,"byte_end":347260,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10077},{"krate":0,"index":10078},{"krate":0,"index":10079}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347194,"byte_end":347242,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347179,"byte_end":347193,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10109},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347254,"byte_end":347260,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":10114},{"krate":0,"index":10115}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347179,"byte_end":347193,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10175},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954996,"byte_end":8955010,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":10177},{"krate":0,"index":10178},{"krate":0,"index":10179},{"krate":0,"index":10180}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952930,"byte_end":8952964,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952965,"byte_end":8952968,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952969,"byte_end":8953048,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953049,"byte_end":8953120,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953121,"byte_end":8953197,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953198,"byte_end":8953246,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953247,"byte_end":8953250,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953251,"byte_end":8953330,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953331,"byte_end":8953406,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953407,"byte_end":8953485,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953486,"byte_end":8953566,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953567,"byte_end":8953596,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953597,"byte_end":8953600,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953601,"byte_end":8953679,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953680,"byte_end":8953754,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953755,"byte_end":8953830,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953831,"byte_end":8953906,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953907,"byte_end":8953982,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8953983,"byte_end":8954041,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954042,"byte_end":8954045,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954046,"byte_end":8954119,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954120,"byte_end":8954198,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954199,"byte_end":8954257,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954258,"byte_end":8954331,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954332,"byte_end":8954400,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954401,"byte_end":8954477,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954478,"byte_end":8954546,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954547,"byte_end":8954600,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954601,"byte_end":8954604,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954605,"byte_end":8954671,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954672,"byte_end":8954751,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954752,"byte_end":8954799,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954800,"byte_end":8954803,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954804,"byte_end":8954877,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954878,"byte_end":8954935,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8954936,"byte_end":8954984,"line_start":92,"line_end":92,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10185},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955518,"byte_end":8955521,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955298,"byte_end":8955342,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955347,"byte_end":8955350,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955355,"byte_end":8955430,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955435,"byte_end":8955506,"line_start":106,"line_end":106,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10186},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956018,"byte_end":8956021,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955745,"byte_end":8955802,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955807,"byte_end":8955810,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955815,"byte_end":8955878,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955883,"byte_end":8955947,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955952,"byte_end":8956006,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10187},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956179,"byte_end":8956187,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956116,"byte_end":8956167,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10188},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956611,"byte_end":8956615,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956292,"byte_end":8956325,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956330,"byte_end":8956333,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956338,"byte_end":8956414,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956419,"byte_end":8956493,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956498,"byte_end":8956571,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956576,"byte_end":8956599,"line_start":135,"line_end":135,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":10213},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":10214},{"krate":0,"index":10215},{"krate":0,"index":10216},{"krate":0,"index":10217},{"krate":0,"index":10218},{"krate":0,"index":10219},{"krate":0,"index":10220},{"krate":0,"index":10221},{"krate":0,"index":10222},{"krate":0,"index":10223},{"krate":0,"index":10224},{"krate":0,"index":10225},{"krate":0,"index":10226},{"krate":0,"index":10227},{"krate":0,"index":10228},{"krate":0,"index":10229},{"krate":0,"index":10230},{"krate":0,"index":10231},{"krate":0,"index":13961},{"krate":0,"index":10232},{"krate":0,"index":10233},{"krate":0,"index":13965},{"krate":0,"index":10234},{"krate":0,"index":10235},{"krate":0,"index":10236},{"krate":0,"index":10237},{"krate":0,"index":10238},{"krate":0,"index":13973},{"krate":0,"index":10239},{"krate":0,"index":13975},{"krate":0,"index":10240},{"krate":0,"index":13977},{"krate":0,"index":10241},{"krate":0,"index":13979},{"krate":0,"index":10242},{"krate":0,"index":13981},{"krate":0,"index":10243},{"krate":0,"index":10244},{"krate":0,"index":10245},{"krate":0,"index":10246},{"krate":0,"index":10247},{"krate":0,"index":10248},{"krate":0,"index":10249},{"krate":0,"index":10255},{"krate":0,"index":10293},{"krate":0,"index":10294},{"krate":0,"index":14001},{"krate":0,"index":10295},{"krate":0,"index":14003},{"krate":0,"index":10296},{"krate":0,"index":10297},{"krate":0,"index":10298},{"krate":0,"index":10338},{"krate":0,"index":10339},{"krate":0,"index":10375},{"krate":0,"index":10376},{"krate":0,"index":10377},{"krate":0,"index":10378},{"krate":0,"index":10379},{"krate":0,"index":10384},{"krate":0,"index":10386},{"krate":0,"index":10388},{"krate":0,"index":10390},{"krate":0,"index":10392},{"krate":0,"index":10394},{"krate":0,"index":10397},{"krate":0,"index":10412},{"krate":0,"index":10425},{"krate":0,"index":10428},{"krate":0,"index":10431},{"krate":0,"index":10436},{"krate":0,"index":10439}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139431,"byte_end":139456,"line_start":92,"line_end":92,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959003,"byte_end":8959035,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959036,"byte_end":8959039,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959040,"byte_end":8959115,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8959116,"byte_end":8959173,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10495},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8985340,"byte_end":8985350,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":10498},{"krate":0,"index":10499},{"krate":0,"index":10500}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8985269,"byte_end":8985328,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10505},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8985586,"byte_end":8985593,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8985515,"byte_end":8985574,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10514},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8985735,"byte_end":8985745,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":10517},{"krate":0,"index":10518},{"krate":0,"index":10519},{"krate":0,"index":10520}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8985662,"byte_end":8985723,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":10525},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8986032,"byte_end":8986036,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8985955,"byte_end":8986020,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10379},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961887,"byte_end":8961903,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":10381},{"krate":0,"index":10382},{"krate":0,"index":10383}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8960792,"byte_end":8960845,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8960846,"byte_end":8960849,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8960850,"byte_end":8960918,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8960919,"byte_end":8960992,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8960993,"byte_end":8961069,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961070,"byte_end":8961114,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961115,"byte_end":8961118,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961119,"byte_end":8961197,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961198,"byte_end":8961256,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961257,"byte_end":8961321,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961322,"byte_end":8961375,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961376,"byte_end":8961455,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961456,"byte_end":8961485,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961486,"byte_end":8961489,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961490,"byte_end":8961560,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961561,"byte_end":8961638,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961639,"byte_end":8961690,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961691,"byte_end":8961694,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961695,"byte_end":8961768,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961769,"byte_end":8961826,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8961827,"byte_end":8961875,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10399},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964544,"byte_end":8964547,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964273,"byte_end":8964322,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964327,"byte_end":8964330,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964335,"byte_end":8964402,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964407,"byte_end":8964481,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964486,"byte_end":8964532,"line_start":135,"line_end":135,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10400},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965542,"byte_end":8965545,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965404,"byte_end":8965459,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965464,"byte_end":8965467,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965472,"byte_end":8965530,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10401},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965709,"byte_end":8965717,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965647,"byte_end":8965697,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10402},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8966300,"byte_end":8966304,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965930,"byte_end":8965961,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965966,"byte_end":8965969,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8965974,"byte_end":8966044,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8966049,"byte_end":8966135,"line_start":179,"line_end":179,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8966140,"byte_end":8966216,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8966221,"byte_end":8966288,"line_start":181,"line_end":181,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10403},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8967579,"byte_end":8967583,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8967497,"byte_end":8967567,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10405},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8968127,"byte_end":8968135,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8968046,"byte_end":8968115,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10406},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8968325,"byte_end":8968337,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8968244,"byte_end":8968313,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":10460},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997316,"byte_end":8997325,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10462}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996692,"byte_end":8996723,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996724,"byte_end":8996727,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996728,"byte_end":8996799,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996800,"byte_end":8996837,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996838,"byte_end":8996841,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996842,"byte_end":8996908,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996909,"byte_end":8996980,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8996981,"byte_end":8997061,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997062,"byte_end":8997065,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997066,"byte_end":8997127,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997128,"byte_end":8997202,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997203,"byte_end":8997255,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997256,"byte_end":8997304,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10468},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997782,"byte_end":8997785,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997582,"byte_end":8997621,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997626,"byte_end":8997629,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997634,"byte_end":8997704,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997709,"byte_end":8997770,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10469},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997995,"byte_end":8997998,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997857,"byte_end":8997912,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997917,"byte_end":8997920,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997925,"byte_end":8997983,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10470},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998114,"byte_end":8998122,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998053,"byte_end":8998102,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10471},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998484,"byte_end":8998488,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998181,"byte_end":8998212,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998217,"byte_end":8998220,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998225,"byte_end":8998297,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998302,"byte_end":8998376,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998381,"byte_end":8998449,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998454,"byte_end":8998472,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":10482},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000250,"byte_end":9000260,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999629,"byte_end":8999703,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999704,"byte_end":8999707,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999708,"byte_end":8999787,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999788,"byte_end":8999839,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999840,"byte_end":8999914,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999915,"byte_end":8999974,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999975,"byte_end":8999978,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999979,"byte_end":9000051,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000052,"byte_end":9000102,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000103,"byte_end":9000106,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000107,"byte_end":9000184,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000185,"byte_end":9000242,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":10534},{"krate":0,"index":10535},{"krate":0,"index":10536},{"krate":0,"index":10537},{"krate":0,"index":10538},{"krate":0,"index":10539},{"krate":0,"index":2719},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"/ Task notification","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/mod.rs","byte_start":348680,"byte_end":348701,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349891,"byte_end":349899,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":2734}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349848,"byte_end":349880,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350896,"byte_end":350901,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349913,"byte_end":349978,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349983,"byte_end":349998,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350003,"byte_end":350006,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350011,"byte_end":350081,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350086,"byte_end":350105,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350110,"byte_end":350113,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350118,"byte_end":350187,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350192,"byte_end":350265,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350270,"byte_end":350309,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350314,"byte_end":350317,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350322,"byte_end":350388,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350393,"byte_end":350459,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350464,"byte_end":350535,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350540,"byte_end":350596,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350601,"byte_end":350604,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350609,"byte_end":350616,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350621,"byte_end":350659,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350664,"byte_end":350696,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350701,"byte_end":350704,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350709,"byte_end":350755,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350760,"byte_end":350763,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350768,"byte_end":350805,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350810,"byte_end":350846,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350851,"byte_end":350858,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":350863,"byte_end":350888,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352655,"byte_end":352668,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":2737}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352607,"byte_end":352644,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353711,"byte_end":353722,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":2736},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352687,"byte_end":352752,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352757,"byte_end":352772,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352777,"byte_end":352780,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352785,"byte_end":352855,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352860,"byte_end":352879,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352884,"byte_end":352887,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352892,"byte_end":352961,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352966,"byte_end":353039,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353044,"byte_end":353083,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353088,"byte_end":353091,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353096,"byte_end":353162,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353167,"byte_end":353233,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353238,"byte_end":353309,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353314,"byte_end":353370,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353375,"byte_end":353378,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353383,"byte_end":353390,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353395,"byte_end":353432,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353437,"byte_end":353474,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353479,"byte_end":353482,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353487,"byte_end":353523,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353528,"byte_end":353565,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353570,"byte_end":353573,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353578,"byte_end":353615,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353620,"byte_end":353661,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353666,"byte_end":353673,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":353678,"byte_end":353703,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","parent":null,"children":[{"krate":0,"index":2758}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"/ Definition of the `Never` type,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355127,"byte_end":355162,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/ a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355163,"byte_end":355219,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2758},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355856,"byte_end":355861,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355221,"byte_end":355256,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355257,"byte_end":355260,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355261,"byte_end":355336,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355337,"byte_end":355374,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355375,"byte_end":355378,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355379,"byte_end":355443,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355444,"byte_end":355447,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355448,"byte_end":355519,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355520,"byte_end":355571,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355572,"byte_end":355664,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355665,"byte_end":355668,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355669,"byte_end":355740,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/never.rs","byte_start":355741,"byte_end":355846,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":14625},{"krate":0,"index":3438},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3560},{"krate":0,"index":3562},{"krate":0,"index":3571},{"krate":0,"index":3573},{"krate":0,"index":3575},{"krate":0,"index":3577},{"krate":0,"index":3585}],"decl_id":null,"docs":" IO","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12265,"byte_end":12287,"line_start":330,"line_end":330,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12334,"byte_end":12357,"line_start":332,"line_end":332,"column_start":1,"column_end":24}},{"value":"/ IO","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":355892,"byte_end":355898,"line_start":1,"line_end":1,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":355899,"byte_end":355902,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":355903,"byte_end":355966,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/ `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` types, including","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":355967,"byte_end":356046,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ the `AsyncReadExt`, `AsyncWriteExt`, `AsyncSeekExt`, and `AsyncBufReadExt`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356047,"byte_end":356125,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ traits which add methods to the `AsyncRead`, `AsyncWrite`, `AsyncSeek`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356126,"byte_end":356201,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ and `AsyncBufRead` types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356202,"byte_end":356231,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356232,"byte_end":356235,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `io` and `std` features of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356236,"byte_end":356310,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":356311,"byte_end":356368,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10540},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382175,"byte_end":382185,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381526,"byte_end":381591,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381592,"byte_end":381641,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381642,"byte_end":381713,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381714,"byte_end":381717,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381718,"byte_end":381794,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381795,"byte_end":381866,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381867,"byte_end":381935,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":381936,"byte_end":382004,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382005,"byte_end":382080,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382081,"byte_end":382095,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382749,"byte_end":382752,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382679,"byte_end":382737,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382861,"byte_end":382868,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382798,"byte_end":382849,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382982,"byte_end":382989,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382911,"byte_end":382970,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":383110,"byte_end":383120,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":383044,"byte_end":383098,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":10577},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388038,"byte_end":388047,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10582},{"krate":0,"index":10579},{"krate":0,"index":10580},{"krate":0,"index":10581}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388012,"byte_end":388026,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10606},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388038,"byte_end":388047,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufReader","qualname":"::io::buf_reader::_::__BufReader","value":"__BufReader {  }","parent":null,"children":[{"krate":0,"index":10609},{"krate":0,"index":10610}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388012,"byte_end":388026,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388316,"byte_end":388319,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388174,"byte_end":388266,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388271,"byte_end":388304,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388481,"byte_end":388494,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388404,"byte_end":388469,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":389077,"byte_end":389083,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388917,"byte_end":388973,"line_start":63,"line_end":63,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388978,"byte_end":388981,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388986,"byte_end":389065,"line_start":65,"line_end":65,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10633},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":395997,"byte_end":396006,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10637},{"krate":0,"index":10635},{"krate":0,"index":10636}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":395971,"byte_end":395985,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10659},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":395997,"byte_end":396006,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufWriter","qualname":"::io::buf_writer::_::__BufWriter","value":"__BufWriter {  }","parent":null,"children":[{"krate":0,"index":10662},{"krate":0,"index":10663}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":395971,"byte_end":395985,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":396259,"byte_end":396262,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":396117,"byte_end":396209,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":396214,"byte_end":396247,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":396424,"byte_end":396437,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":396347,"byte_end":396412,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":397594,"byte_end":397600,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":397526,"byte_end":397582,"line_start":84,"line_end":84,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10686},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400438,"byte_end":400443,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10690},{"krate":0,"index":10691},{"krate":0,"index":10689}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400378,"byte_end":400426,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400363,"byte_end":400377,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10717},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400438,"byte_end":400443,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::io::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":10721},{"krate":0,"index":10722},{"krate":0,"index":10723}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400363,"byte_end":400377,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400828,"byte_end":400835,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400754,"byte_end":400816,"line_start":34,"line_end":34,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401167,"byte_end":401174,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400904,"byte_end":400974,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400979,"byte_end":400982,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400987,"byte_end":401060,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401065,"byte_end":401138,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401143,"byte_end":401155,"line_start":43,"line_end":43,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401533,"byte_end":401544,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401263,"byte_end":401340,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401345,"byte_end":401348,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401353,"byte_end":401426,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401431,"byte_end":401504,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401509,"byte_end":401521,"line_start":52,"line_end":52,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401747,"byte_end":401757,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401679,"byte_end":401735,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10742},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404571,"byte_end":404576,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":10745}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404409,"byte_end":404474,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404492,"byte_end":404559,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406124,"byte_end":406128,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405275,"byte_end":405350,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405351,"byte_end":405354,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405355,"byte_end":405438,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405439,"byte_end":405519,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405520,"byte_end":405592,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405593,"byte_end":405606,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405607,"byte_end":405610,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405611,"byte_end":405658,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405659,"byte_end":405662,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405663,"byte_end":405677,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405678,"byte_end":405681,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405682,"byte_end":405689,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405690,"byte_end":405731,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405732,"byte_end":405783,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405784,"byte_end":405787,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405788,"byte_end":405831,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405832,"byte_end":405879,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405880,"byte_end":405883,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405884,"byte_end":405937,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405938,"byte_end":405964,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405965,"byte_end":405968,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405969,"byte_end":405994,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":405995,"byte_end":406048,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406049,"byte_end":406108,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406109,"byte_end":406116,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10750},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406470,"byte_end":406474,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":10754}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406391,"byte_end":406458,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406359,"byte_end":406373,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10780},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406470,"byte_end":406474,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"__Copy","qualname":"::io::copy::_::__Copy","value":"__Copy {  }","parent":null,"children":[{"krate":0,"index":10785},{"krate":0,"index":10786},{"krate":0,"index":10787}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406359,"byte_end":406373,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407830,"byte_end":407838,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":406974,"byte_end":407049,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407050,"byte_end":407053,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407054,"byte_end":407140,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407141,"byte_end":407221,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407222,"byte_end":407294,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407295,"byte_end":407308,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407309,"byte_end":407312,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407313,"byte_end":407360,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407361,"byte_end":407364,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407365,"byte_end":407379,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407380,"byte_end":407383,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407384,"byte_end":407391,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407392,"byte_end":407433,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407434,"byte_end":407485,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407486,"byte_end":407489,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407490,"byte_end":407533,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407534,"byte_end":407581,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407582,"byte_end":407585,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407586,"byte_end":407643,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407644,"byte_end":407670,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407671,"byte_end":407674,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407675,"byte_end":407700,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407701,"byte_end":407754,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407755,"byte_end":407814,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":407815,"byte_end":407822,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10815},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":408184,"byte_end":408191,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10821},{"krate":0,"index":10819},{"krate":0,"index":10820}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":408105,"byte_end":408172,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":408073,"byte_end":408087,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10851},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":408184,"byte_end":408191,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"__CopyBuf","qualname":"::io::copy_buf::_::__CopyBuf","value":"__CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10856},{"krate":0,"index":10857},{"krate":0,"index":10858}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":408073,"byte_end":408087,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10886},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410104,"byte_end":410110,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":10888}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409329,"byte_end":409392,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409393,"byte_end":409426,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409427,"byte_end":409430,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409431,"byte_end":409499,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409500,"byte_end":409582,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409583,"byte_end":409662,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409663,"byte_end":409688,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409689,"byte_end":409692,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409693,"byte_end":409767,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409768,"byte_end":409835,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409836,"byte_end":409869,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409870,"byte_end":409873,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409874,"byte_end":409913,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409914,"byte_end":409953,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409954,"byte_end":409995,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":409996,"byte_end":410059,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410690,"byte_end":410693,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410169,"byte_end":410244,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410249,"byte_end":410252,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410257,"byte_end":410331,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410336,"byte_end":410404,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410409,"byte_end":410447,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410452,"byte_end":410455,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410460,"byte_end":410474,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410479,"byte_end":410482,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410487,"byte_end":410494,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410499,"byte_end":410527,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410532,"byte_end":410535,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410540,"byte_end":410579,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410584,"byte_end":410632,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410637,"byte_end":410666,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410671,"byte_end":410678,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411138,"byte_end":411148,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410793,"byte_end":410850,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410855,"byte_end":410858,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410863,"byte_end":410877,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410882,"byte_end":410885,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410890,"byte_end":410897,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410902,"byte_end":410930,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410935,"byte_end":410938,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410943,"byte_end":410982,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410987,"byte_end":411035,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411040,"byte_end":411069,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411074,"byte_end":411077,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411082,"byte_end":411114,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411119,"byte_end":411126,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411556,"byte_end":411563,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411205,"byte_end":411265,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411270,"byte_end":411273,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411278,"byte_end":411292,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411297,"byte_end":411300,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411305,"byte_end":411312,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411317,"byte_end":411345,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411350,"byte_end":411353,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411358,"byte_end":411397,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411402,"byte_end":411450,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411455,"byte_end":411484,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411489,"byte_end":411492,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411497,"byte_end":411532,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411537,"byte_end":411544,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412135,"byte_end":412142,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411619,"byte_end":411687,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411692,"byte_end":411695,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411700,"byte_end":411773,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411778,"byte_end":411840,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411845,"byte_end":411848,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411853,"byte_end":411867,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411872,"byte_end":411875,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411880,"byte_end":411887,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411892,"byte_end":411920,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411925,"byte_end":411928,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411933,"byte_end":411976,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":411981,"byte_end":412029,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412034,"byte_end":412063,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412068,"byte_end":412071,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412076,"byte_end":412111,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412116,"byte_end":412123,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412800,"byte_end":412808,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412206,"byte_end":412254,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412259,"byte_end":412262,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412267,"byte_end":412281,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412286,"byte_end":412289,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412294,"byte_end":412301,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412306,"byte_end":412347,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412352,"byte_end":412406,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412411,"byte_end":412414,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412419,"byte_end":412471,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412476,"byte_end":412479,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412484,"byte_end":412519,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412524,"byte_end":412527,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412532,"byte_end":412575,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412580,"byte_end":412615,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412620,"byte_end":412623,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412628,"byte_end":412672,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412677,"byte_end":412712,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412717,"byte_end":412776,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412781,"byte_end":412788,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413276,"byte_end":413288,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412866,"byte_end":412903,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412908,"byte_end":412911,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412916,"byte_end":412930,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412935,"byte_end":412938,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412943,"byte_end":412950,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412955,"byte_end":412983,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412988,"byte_end":412991,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":412996,"byte_end":413048,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413053,"byte_end":413056,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413061,"byte_end":413096,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413101,"byte_end":413104,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413109,"byte_end":413134,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413139,"byte_end":413174,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413179,"byte_end":413182,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413187,"byte_end":413212,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413217,"byte_end":413252,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413257,"byte_end":413264,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416069,"byte_end":416074,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3080}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":415968,"byte_end":416008,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416009,"byte_end":416057,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416634,"byte_end":416639,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416095,"byte_end":416142,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416143,"byte_end":416146,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416147,"byte_end":416219,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416220,"byte_end":416223,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416224,"byte_end":416238,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416239,"byte_end":416242,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416243,"byte_end":416308,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416309,"byte_end":416312,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416313,"byte_end":416320,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416321,"byte_end":416362,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416363,"byte_end":416405,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416406,"byte_end":416409,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416410,"byte_end":416445,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416446,"byte_end":416479,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416480,"byte_end":416526,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416527,"byte_end":416558,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416559,"byte_end":416618,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416619,"byte_end":416626,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10914},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417707,"byte_end":417714,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":10917}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417537,"byte_end":417610,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417628,"byte_end":417695,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10922},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419486,"byte_end":419491,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10925}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419324,"byte_end":419389,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419407,"byte_end":419474,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10930},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420366,"byte_end":420371,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10935},{"krate":0,"index":10932},{"krate":0,"index":10933},{"krate":0,"index":10934}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420306,"byte_end":420354,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420274,"byte_end":420288,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10959},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420366,"byte_end":420371,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"__Lines","qualname":"::io::lines::_::__Lines","value":"__Lines {  }","parent":null,"children":[{"krate":0,"index":10962},{"krate":0,"index":10963}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420274,"byte_end":420288,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10981},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421601,"byte_end":421605,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10984},{"krate":0,"index":10985}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421442,"byte_end":421504,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421522,"byte_end":421589,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10990},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422497,"byte_end":422509,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":10993},{"krate":0,"index":10994}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422320,"byte_end":422400,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422418,"byte_end":422485,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10999},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423450,"byte_end":423459,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":11002},{"krate":0,"index":11003}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423279,"byte_end":423353,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423371,"byte_end":423438,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11008},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":424773,"byte_end":424781,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":11011},{"krate":0,"index":11012},{"krate":0,"index":11013},{"krate":0,"index":11014}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":424601,"byte_end":424676,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":424694,"byte_end":424761,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11019},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":426621,"byte_end":426630,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":11022},{"krate":0,"index":11023},{"krate":0,"index":11024}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":426448,"byte_end":426524,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":426542,"byte_end":426609,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11029},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":429362,"byte_end":429374,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":11032},{"krate":0,"index":11033},{"krate":0,"index":11034},{"krate":0,"index":11035}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":429183,"byte_end":429265,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":429283,"byte_end":429350,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11040},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":431291,"byte_end":431300,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":11043},{"krate":0,"index":11044},{"krate":0,"index":11045},{"krate":0,"index":11046}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":431117,"byte_end":431194,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":431212,"byte_end":431279,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3322},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433054,"byte_end":433060,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3323}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":432952,"byte_end":432993,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":432994,"byte_end":433042,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3324},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433617,"byte_end":433623,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433080,"byte_end":433149,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433150,"byte_end":433153,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433154,"byte_end":433234,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433235,"byte_end":433254,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433255,"byte_end":433258,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433259,"byte_end":433273,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433274,"byte_end":433277,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433278,"byte_end":433285,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433286,"byte_end":433327,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433328,"byte_end":433370,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433371,"byte_end":433374,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433375,"byte_end":433403,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433404,"byte_end":433443,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433444,"byte_end":433494,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433495,"byte_end":433541,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433542,"byte_end":433601,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433602,"byte_end":433609,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11051},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":434895,"byte_end":434899,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":11054},{"krate":0,"index":11055}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":434732,"byte_end":434798,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":434816,"byte_end":434883,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3364},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435669,"byte_end":435673,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3365}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435569,"byte_end":435608,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435609,"byte_end":435657,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3366},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436281,"byte_end":436285,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435694,"byte_end":435771,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435772,"byte_end":435775,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435776,"byte_end":435871,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435872,"byte_end":435929,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435930,"byte_end":435933,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435934,"byte_end":435948,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435949,"byte_end":435952,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435953,"byte_end":435964,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":435965,"byte_end":436006,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436007,"byte_end":436050,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436051,"byte_end":436054,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436055,"byte_end":436092,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436093,"byte_end":436125,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436126,"byte_end":436175,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436176,"byte_end":436205,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436206,"byte_end":436265,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436266,"byte_end":436273,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11060},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":437447,"byte_end":437455,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":11062}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":437350,"byte_end":437418,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":11066},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":437584,"byte_end":437593,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":11068}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":437487,"byte_end":437555,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438339,"byte_end":438346,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438093,"byte_end":438170,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438175,"byte_end":438246,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438251,"byte_end":438327,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438846,"byte_end":438853,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438600,"byte_end":438677,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438682,"byte_end":438753,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438758,"byte_end":438834,"line_start":50,"line_end":50,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3421},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440365,"byte_end":440377,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440209,"byte_end":440284,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440285,"byte_end":440353,"line_start":93,"line_end":93,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3424},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440381,"byte_end":440396,"line_start":94,"line_end":94,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":3421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440398,"byte_end":440414,"line_start":94,"line_end":94,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":3421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11072},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441303,"byte_end":441307,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11075},{"krate":0,"index":11074}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441224,"byte_end":441291,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441192,"byte_end":441206,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11095},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441303,"byte_end":441307,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::io::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":11098},{"krate":0,"index":11099}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441192,"byte_end":441206,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3453},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442298,"byte_end":442303,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441545,"byte_end":441598,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441603,"byte_end":441649,"line_start":26,"line_end":26,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441654,"byte_end":441657,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441662,"byte_end":441672,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441677,"byte_end":441680,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441685,"byte_end":441762,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441767,"byte_end":441836,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441841,"byte_end":441844,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441849,"byte_end":441863,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441868,"byte_end":441871,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441876,"byte_end":441883,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441888,"byte_end":441929,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441934,"byte_end":441978,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441983,"byte_end":441986,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441991,"byte_end":442038,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442043,"byte_end":442071,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442076,"byte_end":442079,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442084,"byte_end":442118,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442123,"byte_end":442165,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442170,"byte_end":442173,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442178,"byte_end":442210,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442215,"byte_end":442274,"line_start":46,"line_end":46,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442279,"byte_end":442286,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443215,"byte_end":443224,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442351,"byte_end":442422,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442427,"byte_end":442501,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442506,"byte_end":442581,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442586,"byte_end":442610,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442615,"byte_end":442618,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442623,"byte_end":442637,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442642,"byte_end":442645,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442650,"byte_end":442657,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442662,"byte_end":442703,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442708,"byte_end":442752,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442757,"byte_end":442760,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442765,"byte_end":442812,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442817,"byte_end":442845,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442850,"byte_end":442853,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442858,"byte_end":442892,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442897,"byte_end":442939,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442944,"byte_end":442947,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442952,"byte_end":442973,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":442978,"byte_end":443010,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443015,"byte_end":443018,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443023,"byte_end":443046,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443051,"byte_end":443093,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443098,"byte_end":443119,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443124,"byte_end":443127,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443132,"byte_end":443191,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443196,"byte_end":443203,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11121},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445787,"byte_end":445793,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":11123},{"krate":0,"index":11124}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":444832,"byte_end":444879,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":444880,"byte_end":444883,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":444884,"byte_end":444960,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":444961,"byte_end":445039,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445040,"byte_end":445116,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445117,"byte_end":445192,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445193,"byte_end":445266,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445267,"byte_end":445298,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445299,"byte_end":445302,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445303,"byte_end":445374,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445375,"byte_end":445454,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445455,"byte_end":445482,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445483,"byte_end":445486,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445487,"byte_end":445561,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445562,"byte_end":445636,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445637,"byte_end":445716,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445717,"byte_end":445758,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446102,"byte_end":446105,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445878,"byte_end":445949,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445954,"byte_end":445964,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445969,"byte_end":445972,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445977,"byte_end":446051,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446056,"byte_end":446090,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446317,"byte_end":446324,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446220,"byte_end":446287,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446292,"byte_end":446305,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446469,"byte_end":446476,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446371,"byte_end":446439,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446444,"byte_end":446457,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446607,"byte_end":446617,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446535,"byte_end":446595,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446758,"byte_end":446763,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446661,"byte_end":446733,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446738,"byte_end":446746,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446910,"byte_end":446913,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446818,"byte_end":446885,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446890,"byte_end":446898,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447359,"byte_end":447362,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":446966,"byte_end":447026,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447031,"byte_end":447034,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447039,"byte_end":447051,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447056,"byte_end":447059,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447064,"byte_end":447137,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447142,"byte_end":447219,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447224,"byte_end":447227,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447232,"byte_end":447289,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447294,"byte_end":447347,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11128},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448549,"byte_end":448554,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":11131},{"krate":0,"index":11132}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448387,"byte_end":448452,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448470,"byte_end":448537,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11137},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449445,"byte_end":449458,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":11140},{"krate":0,"index":11141}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449265,"byte_end":449348,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449366,"byte_end":449433,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11146},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450392,"byte_end":450400,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":11149},{"krate":0,"index":11150}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450222,"byte_end":450295,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450313,"byte_end":450380,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3545},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359152,"byte_end":359164,"line_start":140,"line_end":140,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3558},{"krate":0,"index":3559}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359070,"byte_end":359141,"line_start":139,"line_end":139,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360017,"byte_end":360022,"line_start":164,"line_end":164,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359182,"byte_end":359247,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359252,"byte_end":359255,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359260,"byte_end":359340,"line_start":143,"line_end":143,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359345,"byte_end":359417,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359422,"byte_end":359443,"line_start":145,"line_end":145,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359448,"byte_end":359451,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359456,"byte_end":359470,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359475,"byte_end":359478,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359483,"byte_end":359490,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359495,"byte_end":359536,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359541,"byte_end":359585,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359590,"byte_end":359593,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359598,"byte_end":359642,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359647,"byte_end":359691,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359696,"byte_end":359699,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359704,"byte_end":359748,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359753,"byte_end":359785,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359790,"byte_end":359793,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359798,"byte_end":359831,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359836,"byte_end":359879,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359884,"byte_end":359933,"line_start":161,"line_end":161,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359938,"byte_end":359997,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360002,"byte_end":360009,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361062,"byte_end":361066,"line_start":196,"line_end":196,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360160,"byte_end":360234,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360239,"byte_end":360275,"line_start":173,"line_end":173,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360280,"byte_end":360283,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360288,"byte_end":360366,"line_start":175,"line_end":175,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360371,"byte_end":360398,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360403,"byte_end":360406,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360411,"byte_end":360425,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360430,"byte_end":360433,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360438,"byte_end":360445,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360450,"byte_end":360491,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360496,"byte_end":360540,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360545,"byte_end":360548,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360553,"byte_end":360600,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360605,"byte_end":360635,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360640,"byte_end":360643,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360648,"byte_end":360700,"line_start":187,"line_end":187,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360705,"byte_end":360708,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360713,"byte_end":360784,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360789,"byte_end":360853,"line_start":190,"line_end":190,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360858,"byte_end":360903,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360908,"byte_end":360933,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360938,"byte_end":360978,"line_start":193,"line_end":193,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":360983,"byte_end":361042,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361047,"byte_end":361054,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361433,"byte_end":361446,"line_start":207,"line_end":207,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361195,"byte_end":361279,"line_start":202,"line_end":202,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361284,"byte_end":361302,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361307,"byte_end":361310,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361315,"byte_end":361393,"line_start":205,"line_end":205,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361398,"byte_end":361425,"line_start":206,"line_end":206,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362818,"byte_end":362828,"line_start":250,"line_end":250,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361605,"byte_end":361677,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361682,"byte_end":361740,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361745,"byte_end":361748,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361753,"byte_end":361827,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361832,"byte_end":361835,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361840,"byte_end":361917,"line_start":218,"line_end":218,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361922,"byte_end":361944,"line_start":219,"line_end":219,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361949,"byte_end":361952,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361957,"byte_end":361971,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361976,"byte_end":361979,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361984,"byte_end":361991,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":361996,"byte_end":362037,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362042,"byte_end":362086,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362091,"byte_end":362094,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362099,"byte_end":362146,"line_start":227,"line_end":227,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362151,"byte_end":362181,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362186,"byte_end":362189,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362194,"byte_end":362236,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362241,"byte_end":362244,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362249,"byte_end":362286,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362291,"byte_end":362350,"line_start":233,"line_end":233,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362355,"byte_end":362362,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362367,"byte_end":362370,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362375,"byte_end":362415,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362420,"byte_end":362423,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362428,"byte_end":362435,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362440,"byte_end":362481,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362486,"byte_end":362536,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362541,"byte_end":362544,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362549,"byte_end":362596,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362601,"byte_end":362631,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362636,"byte_end":362639,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362644,"byte_end":362698,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362703,"byte_end":362706,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362711,"byte_end":362784,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362789,"byte_end":362798,"line_start":248,"line_end":248,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362803,"byte_end":362810,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363620,"byte_end":363631,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":362990,"byte_end":363063,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363068,"byte_end":363071,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363076,"byte_end":363134,"line_start":261,"line_end":261,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363139,"byte_end":363142,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363147,"byte_end":363161,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363166,"byte_end":363169,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363174,"byte_end":363181,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363186,"byte_end":363227,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363232,"byte_end":363276,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363281,"byte_end":363284,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363289,"byte_end":363336,"line_start":269,"line_end":269,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363341,"byte_end":363384,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363389,"byte_end":363392,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363397,"byte_end":363452,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363457,"byte_end":363460,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363465,"byte_end":363490,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363495,"byte_end":363536,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363541,"byte_end":363600,"line_start":276,"line_end":276,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363605,"byte_end":363612,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364436,"byte_end":364450,"line_start":306,"line_end":306,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363796,"byte_end":363869,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363874,"byte_end":363877,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363882,"byte_end":363940,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363945,"byte_end":363948,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363953,"byte_end":363967,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363972,"byte_end":363975,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363980,"byte_end":363987,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":363992,"byte_end":364033,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364038,"byte_end":364082,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364087,"byte_end":364090,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364095,"byte_end":364142,"line_start":297,"line_end":297,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364147,"byte_end":364193,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364198,"byte_end":364201,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364206,"byte_end":364264,"line_start":300,"line_end":300,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364269,"byte_end":364272,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364277,"byte_end":364302,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364307,"byte_end":364352,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364357,"byte_end":364416,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364421,"byte_end":364428,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365777,"byte_end":365782,"line_start":344,"line_end":344,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364620,"byte_end":364691,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364696,"byte_end":364699,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364704,"byte_end":364774,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364779,"byte_end":364804,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364809,"byte_end":364812,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364817,"byte_end":364831,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364836,"byte_end":364839,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364844,"byte_end":364851,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364856,"byte_end":364897,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364902,"byte_end":364952,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364957,"byte_end":364960,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":364965,"byte_end":365035,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365040,"byte_end":365110,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365115,"byte_end":365166,"line_start":328,"line_end":328,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365171,"byte_end":365174,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365179,"byte_end":365222,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365227,"byte_end":365290,"line_start":331,"line_end":331,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365295,"byte_end":365342,"line_start":332,"line_end":332,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365347,"byte_end":365350,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365355,"byte_end":365360,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365365,"byte_end":365436,"line_start":335,"line_end":335,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365441,"byte_end":365493,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365498,"byte_end":365550,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365555,"byte_end":365560,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365565,"byte_end":365568,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365573,"byte_end":365635,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365640,"byte_end":365693,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365698,"byte_end":365757,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365762,"byte_end":365769,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366503,"byte_end":366507,"line_start":369,"line_end":369,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365910,"byte_end":365980,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":365985,"byte_end":366016,"line_start":351,"line_end":351,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366021,"byte_end":366024,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366029,"byte_end":366043,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366048,"byte_end":366051,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366056,"byte_end":366063,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366068,"byte_end":366109,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366114,"byte_end":366158,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366163,"byte_end":366166,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366171,"byte_end":366218,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366223,"byte_end":366251,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366256,"byte_end":366259,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366264,"byte_end":366298,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366303,"byte_end":366345,"line_start":363,"line_end":363,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366350,"byte_end":366353,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366358,"byte_end":366379,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366384,"byte_end":366419,"line_start":366,"line_end":366,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366424,"byte_end":366483,"line_start":367,"line_end":367,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":366488,"byte_end":366495,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3562},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367294,"byte_end":367307,"line_start":393,"line_end":393,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3569}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367211,"byte_end":367283,"line_start":392,"line_end":392,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3563},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368048,"byte_end":368053,"line_start":416,"line_end":416,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367326,"byte_end":367391,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367396,"byte_end":367399,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367404,"byte_end":367418,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367423,"byte_end":367426,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367431,"byte_end":367438,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367443,"byte_end":367484,"line_start":399,"line_end":399,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367489,"byte_end":367538,"line_start":400,"line_end":400,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367543,"byte_end":367580,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367585,"byte_end":367588,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367593,"byte_end":367627,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367632,"byte_end":367635,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367640,"byte_end":367645,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367650,"byte_end":367696,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367701,"byte_end":367768,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367773,"byte_end":367816,"line_start":408,"line_end":408,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367821,"byte_end":367864,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367869,"byte_end":367901,"line_start":410,"line_end":410,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367906,"byte_end":367911,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367916,"byte_end":367919,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367924,"byte_end":367964,"line_start":413,"line_end":413,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367969,"byte_end":368028,"line_start":414,"line_end":414,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368033,"byte_end":368040,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368226,"byte_end":368231,"line_start":423,"line_end":423,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368153,"byte_end":368218,"line_start":422,"line_end":422,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368537,"byte_end":368542,"line_start":433,"line_end":433,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368331,"byte_end":368402,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368407,"byte_end":368410,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368415,"byte_end":368497,"line_start":431,"line_end":431,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368502,"byte_end":368529,"line_start":432,"line_end":432,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368913,"byte_end":368927,"line_start":444,"line_end":444,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368669,"byte_end":368755,"line_start":439,"line_end":439,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368760,"byte_end":368778,"line_start":440,"line_end":440,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368783,"byte_end":368786,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368791,"byte_end":368873,"line_start":442,"line_end":442,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":368878,"byte_end":368905,"line_start":443,"line_end":443,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369734,"byte_end":369743,"line_start":470,"line_end":470,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369081,"byte_end":369113,"line_start":450,"line_end":450,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369118,"byte_end":369121,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369126,"byte_end":369207,"line_start":452,"line_end":452,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369212,"byte_end":369234,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369239,"byte_end":369242,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369247,"byte_end":369325,"line_start":455,"line_end":455,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369330,"byte_end":369333,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369338,"byte_end":369352,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369357,"byte_end":369360,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369365,"byte_end":369372,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369377,"byte_end":369418,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369423,"byte_end":369468,"line_start":461,"line_end":461,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369473,"byte_end":369476,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369481,"byte_end":369528,"line_start":463,"line_end":463,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369533,"byte_end":369536,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369541,"byte_end":369584,"line_start":465,"line_end":465,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369589,"byte_end":369592,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369597,"byte_end":369650,"line_start":467,"line_end":467,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369655,"byte_end":369714,"line_start":468,"line_end":468,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":369719,"byte_end":369726,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373479,"byte_end":373491,"line_start":580,"line_end":580,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3574}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373397,"byte_end":373468,"line_start":579,"line_end":579,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373761,"byte_end":373765,"line_start":586,"line_end":586,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373509,"byte_end":373578,"line_start":581,"line_end":581,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373583,"byte_end":373636,"line_start":582,"line_end":582,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373641,"byte_end":373644,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373649,"byte_end":373726,"line_start":584,"line_end":584,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373731,"byte_end":373753,"line_start":585,"line_end":585,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374017,"byte_end":374032,"line_start":596,"line_end":596,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373932,"byte_end":374006,"line_start":595,"line_end":595,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374986,"byte_end":374994,"line_start":620,"line_end":620,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374053,"byte_end":374142,"line_start":597,"line_end":597,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374147,"byte_end":374179,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374184,"byte_end":374187,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374192,"byte_end":374285,"line_start":600,"line_end":600,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374290,"byte_end":374293,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374298,"byte_end":374309,"line_start":602,"line_end":602,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374314,"byte_end":374355,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374360,"byte_end":374439,"line_start":604,"line_end":604,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374444,"byte_end":374447,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374452,"byte_end":374540,"line_start":606,"line_end":606,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374545,"byte_end":374548,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374553,"byte_end":374609,"line_start":608,"line_end":608,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374614,"byte_end":374642,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374647,"byte_end":374650,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374655,"byte_end":374705,"line_start":611,"line_end":611,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374710,"byte_end":374738,"line_start":612,"line_end":612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374743,"byte_end":374746,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374751,"byte_end":374807,"line_start":614,"line_end":614,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374812,"byte_end":374840,"line_start":615,"line_end":615,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374845,"byte_end":374848,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374853,"byte_end":374902,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374907,"byte_end":374966,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374971,"byte_end":374978,"line_start":619,"line_end":619,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375756,"byte_end":375769,"line_start":643,"line_end":643,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375098,"byte_end":375176,"line_start":626,"line_end":626,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375181,"byte_end":375184,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375189,"byte_end":375200,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375205,"byte_end":375246,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375251,"byte_end":375330,"line_start":630,"line_end":630,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375335,"byte_end":375338,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375343,"byte_end":375412,"line_start":632,"line_end":632,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375417,"byte_end":375420,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375425,"byte_end":375481,"line_start":634,"line_end":634,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375486,"byte_end":375514,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375519,"byte_end":375522,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375527,"byte_end":375577,"line_start":637,"line_end":637,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375582,"byte_end":375610,"line_start":638,"line_end":638,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375615,"byte_end":375618,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375623,"byte_end":375672,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375677,"byte_end":375736,"line_start":641,"line_end":641,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375741,"byte_end":375748,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377456,"byte_end":377466,"line_start":690,"line_end":690,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375873,"byte_end":375948,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":375953,"byte_end":376020,"line_start":650,"line_end":650,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376025,"byte_end":376122,"line_start":651,"line_end":651,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376127,"byte_end":376130,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376135,"byte_end":376205,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376210,"byte_end":376284,"line_start":654,"line_end":654,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376289,"byte_end":376344,"line_start":655,"line_end":655,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376349,"byte_end":376352,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376357,"byte_end":376435,"line_start":657,"line_end":657,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376440,"byte_end":376467,"line_start":658,"line_end":658,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376472,"byte_end":376475,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376480,"byte_end":376557,"line_start":660,"line_end":660,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376562,"byte_end":376584,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376589,"byte_end":376592,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376597,"byte_end":376611,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376616,"byte_end":376619,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376624,"byte_end":376631,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376636,"byte_end":376677,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376682,"byte_end":376729,"line_start":667,"line_end":667,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376734,"byte_end":376737,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376742,"byte_end":376791,"line_start":669,"line_end":669,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376796,"byte_end":376821,"line_start":670,"line_end":670,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376826,"byte_end":376829,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376834,"byte_end":376857,"line_start":672,"line_end":672,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376862,"byte_end":376923,"line_start":673,"line_end":673,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376928,"byte_end":376957,"line_start":674,"line_end":674,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376962,"byte_end":376993,"line_start":675,"line_end":675,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":376998,"byte_end":377014,"line_start":676,"line_end":676,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377019,"byte_end":377022,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377027,"byte_end":377050,"line_start":678,"line_end":678,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377055,"byte_end":377116,"line_start":679,"line_end":679,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377121,"byte_end":377150,"line_start":680,"line_end":680,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377155,"byte_end":377185,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377190,"byte_end":377206,"line_start":682,"line_end":682,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377211,"byte_end":377214,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377219,"byte_end":377242,"line_start":684,"line_end":684,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377247,"byte_end":377308,"line_start":685,"line_end":685,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377313,"byte_end":377342,"line_start":686,"line_end":686,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377347,"byte_end":377372,"line_start":687,"line_end":687,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377377,"byte_end":377436,"line_start":688,"line_end":688,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377441,"byte_end":377448,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379637,"byte_end":379646,"line_start":751,"line_end":751,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377655,"byte_end":377730,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377735,"byte_end":377806,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377811,"byte_end":377906,"line_start":702,"line_end":702,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377911,"byte_end":377914,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377919,"byte_end":377989,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":377994,"byte_end":378069,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378074,"byte_end":378144,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378149,"byte_end":378159,"line_start":707,"line_end":707,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378164,"byte_end":378167,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378172,"byte_end":378250,"line_start":709,"line_end":709,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378255,"byte_end":378282,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378287,"byte_end":378290,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378295,"byte_end":378372,"line_start":712,"line_end":712,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378377,"byte_end":378399,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378404,"byte_end":378407,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378412,"byte_end":378424,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378429,"byte_end":378432,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378437,"byte_end":378510,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378515,"byte_end":378588,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378593,"byte_end":378667,"line_start":719,"line_end":719,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378672,"byte_end":378728,"line_start":720,"line_end":720,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378733,"byte_end":378736,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378741,"byte_end":378788,"line_start":722,"line_end":722,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378793,"byte_end":378796,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378801,"byte_end":378815,"line_start":724,"line_end":724,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378820,"byte_end":378823,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378828,"byte_end":378835,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378840,"byte_end":378881,"line_start":727,"line_end":727,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378886,"byte_end":378933,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378938,"byte_end":378941,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378946,"byte_end":378992,"line_start":730,"line_end":730,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":378997,"byte_end":379029,"line_start":731,"line_end":731,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379034,"byte_end":379037,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379042,"byte_end":379065,"line_start":733,"line_end":733,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379070,"byte_end":379124,"line_start":734,"line_end":734,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379129,"byte_end":379158,"line_start":735,"line_end":735,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379163,"byte_end":379192,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379197,"byte_end":379213,"line_start":737,"line_end":737,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379218,"byte_end":379221,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379226,"byte_end":379249,"line_start":739,"line_end":739,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379254,"byte_end":379308,"line_start":740,"line_end":740,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379313,"byte_end":379342,"line_start":741,"line_end":741,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379347,"byte_end":379374,"line_start":742,"line_end":742,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379379,"byte_end":379395,"line_start":743,"line_end":743,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379400,"byte_end":379403,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379408,"byte_end":379431,"line_start":745,"line_end":745,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379436,"byte_end":379490,"line_start":746,"line_end":746,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379495,"byte_end":379524,"line_start":747,"line_end":747,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379529,"byte_end":379553,"line_start":748,"line_end":748,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379558,"byte_end":379617,"line_start":749,"line_end":749,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379622,"byte_end":379629,"line_start":750,"line_end":750,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":381131,"byte_end":381136,"line_start":789,"line_end":789,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379785,"byte_end":379836,"line_start":757,"line_end":757,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379841,"byte_end":379928,"line_start":758,"line_end":758,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379933,"byte_end":379936,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":379941,"byte_end":380007,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380012,"byte_end":380094,"line_start":761,"line_end":761,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380099,"byte_end":380159,"line_start":762,"line_end":762,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380164,"byte_end":380167,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380172,"byte_end":380207,"line_start":764,"line_end":764,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380212,"byte_end":380234,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380239,"byte_end":380242,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380247,"byte_end":380259,"line_start":767,"line_end":767,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380264,"byte_end":380267,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380272,"byte_end":380363,"line_start":769,"line_end":769,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380368,"byte_end":380371,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380376,"byte_end":380438,"line_start":771,"line_end":771,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380443,"byte_end":380446,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380451,"byte_end":380465,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380470,"byte_end":380473,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380478,"byte_end":380485,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380490,"byte_end":380531,"line_start":776,"line_end":776,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380536,"byte_end":380583,"line_start":777,"line_end":777,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380588,"byte_end":380623,"line_start":778,"line_end":778,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380628,"byte_end":380631,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380636,"byte_end":380691,"line_start":780,"line_end":780,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380696,"byte_end":380699,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380704,"byte_end":380766,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380771,"byte_end":380842,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380847,"byte_end":380918,"line_start":784,"line_end":784,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380923,"byte_end":380994,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":380999,"byte_end":381047,"line_start":786,"line_end":786,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":381052,"byte_end":381111,"line_start":787,"line_end":787,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":381116,"byte_end":381123,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451388,"byte_end":451395,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3600}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451410,"byte_end":451416,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451425,"byte_end":451434,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451626,"byte_end":451632,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3609}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451657,"byte_end":451665,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":452969,"byte_end":452973,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11173},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453329,"byte_end":453336,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11194},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454070,"byte_end":454083,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11210},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454425,"byte_end":454434,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11225},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455383,"byte_end":455390,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11240},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456101,"byte_end":456109,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11255},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456829,"byte_end":456840,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11267},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457658,"byte_end":457670,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11279},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":458751,"byte_end":458765,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459524,"byte_end":459530,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11312},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":11313},{"krate":0,"index":11463},{"krate":0,"index":11464},{"krate":0,"index":11465},{"krate":0,"index":11466},{"krate":0,"index":11467},{"krate":0,"index":11468},{"krate":0,"index":11526}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12554,"byte_end":12579,"line_start":342,"line_end":342,"column_start":5,"column_end":30}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007622,"byte_end":9007669,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007670,"byte_end":9007673,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007674,"byte_end":9007749,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mod.rs","byte_start":9007750,"byte_end":9007807,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11335},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009055,"byte_end":9009060,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":11337},{"krate":0,"index":11338},{"krate":0,"index":11339}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9008728,"byte_end":9008754,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9008755,"byte_end":9008758,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9008759,"byte_end":9008773,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9008774,"byte_end":9008777,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9008778,"byte_end":9008857,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9008858,"byte_end":9008940,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9008941,"byte_end":9009025,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009026,"byte_end":9009043,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":11362},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010374,"byte_end":9010377,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010324,"byte_end":9010362,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":11363},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010804,"byte_end":9010814,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010558,"byte_end":9010613,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010618,"byte_end":9010621,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010626,"byte_end":9010640,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010645,"byte_end":9010648,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010653,"byte_end":9010660,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010665,"byte_end":9010694,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010699,"byte_end":9010702,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010707,"byte_end":9010737,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010742,"byte_end":9010780,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010785,"byte_end":9010792,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11366},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011028,"byte_end":9011036,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010900,"byte_end":9010944,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010949,"byte_end":9010952,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010957,"byte_end":9011016,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":11367},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011457,"byte_end":9011461,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011292,"byte_end":9011328,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011333,"byte_end":9011336,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011341,"byte_end":9011414,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011419,"byte_end":9011445,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":11368},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9012122,"byte_end":9012129,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011612,"byte_end":9011667,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011672,"byte_end":9011675,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011680,"byte_end":9011755,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011760,"byte_end":9011834,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011839,"byte_end":9011842,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011847,"byte_end":9011861,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011866,"byte_end":9011869,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011874,"byte_end":9011881,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011886,"byte_end":9011927,"line_start":130,"line_end":130,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011932,"byte_end":9011961,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011966,"byte_end":9011969,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9011974,"byte_end":9012008,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9012013,"byte_end":9012039,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9012044,"byte_end":9012084,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9012089,"byte_end":9012098,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9012103,"byte_end":9012110,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11372},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9013852,"byte_end":9013867,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":11375},{"krate":0,"index":11376}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9013759,"byte_end":9013840,"line_start":182,"line_end":182,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":11391},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016481,"byte_end":9016491,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":11394}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016317,"byte_end":9016381,"line_start":259,"line_end":259,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016382,"byte_end":9016455,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016456,"byte_end":9016469,"line_start":261,"line_end":261,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11398},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017060,"byte_end":9017063,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016581,"byte_end":9016641,"line_start":267,"line_end":267,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016646,"byte_end":9016649,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016654,"byte_end":9016667,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016672,"byte_end":9016675,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016680,"byte_end":9016687,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016692,"byte_end":9016733,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016738,"byte_end":9016781,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016786,"byte_end":9016789,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016794,"byte_end":9016847,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016852,"byte_end":9016857,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016862,"byte_end":9016951,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016956,"byte_end":9016998,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017003,"byte_end":9017008,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017013,"byte_end":9017022,"line_start":280,"line_end":280,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017027,"byte_end":9017034,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017039,"byte_end":9017048,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11414},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018394,"byte_end":9018410,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":11418},{"krate":0,"index":11419},{"krate":0,"index":11420}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018210,"byte_end":9018298,"line_start":324,"line_end":324,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018299,"byte_end":9018382,"line_start":325,"line_end":325,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":11425},"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019176,"byte_end":9019179,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018587,"byte_end":9018647,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018652,"byte_end":9018655,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018660,"byte_end":9018673,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018678,"byte_end":9018681,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018686,"byte_end":9018693,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018698,"byte_end":9018739,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018744,"byte_end":9018805,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018810,"byte_end":9018813,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018818,"byte_end":9018871,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018876,"byte_end":9018881,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018886,"byte_end":9018975,"line_start":343,"line_end":343,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018980,"byte_end":9019070,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019075,"byte_end":9019114,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019119,"byte_end":9019124,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019129,"byte_end":9019138,"line_start":347,"line_end":347,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019143,"byte_end":9019150,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019155,"byte_end":9019164,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35903,"byte_end":35910,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":36034,"byte_end":36041,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":36272,"byte_end":36279,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":37052,"byte_end":37059,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":37290,"byte_end":37297,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40255,"byte_end":40259,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40356,"byte_end":40360,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":42079,"byte_end":42083,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":42192,"byte_end":42196,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":43075,"byte_end":43078,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":43247,"byte_end":43250,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":43516,"byte_end":43519,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44638,"byte_end":44649,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44784,"byte_end":44795,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46114,"byte_end":46120,"line_start":34,"line_end":34,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46163,"byte_end":46169,"line_start":36,"line_end":36,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46427,"byte_end":46432,"line_start":45,"line_end":45,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46586,"byte_end":46596,"line_start":51,"line_end":51,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46828,"byte_end":46833,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46930,"byte_end":46935,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47179,"byte_end":47185,"line_start":83,"line_end":83,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47642,"byte_end":47648,"line_start":100,"line_end":100,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":48674,"byte_end":48679,"line_start":131,"line_end":131,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":50375,"byte_end":50381,"line_start":180,"line_end":180,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":50533,"byte_end":50539,"line_start":190,"line_end":190,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":52077,"byte_end":52082,"line_start":236,"line_end":236,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":53869,"byte_end":53875,"line_start":295,"line_end":295,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54067,"byte_end":54073,"line_start":307,"line_end":307,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54501,"byte_end":54509,"line_start":324,"line_end":324,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54868,"byte_end":54878,"line_start":337,"line_end":337,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19203,"byte_end":19204,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77161,"byte_end":77171,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77319,"byte_end":77329,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77435,"byte_end":77445,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78098,"byte_end":78108,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78232,"byte_end":78242,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78489,"byte_end":78499,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":79512,"byte_end":79522,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":79769,"byte_end":79779,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83173,"byte_end":83186,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83310,"byte_end":83323,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83570,"byte_end":83583,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59883,"byte_end":59886,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":84925,"byte_end":84929,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85502,"byte_end":85506,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85638,"byte_end":85642,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86219,"byte_end":86226,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86777,"byte_end":86784,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86929,"byte_end":86936,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86963,"byte_end":86970,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88291,"byte_end":88300,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":89295,"byte_end":89304,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":89505,"byte_end":89514,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90930,"byte_end":90942,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91952,"byte_end":91964,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":92168,"byte_end":92180,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":93688,"byte_end":93700,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":94033,"byte_end":94045,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":94228,"byte_end":94240,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94642,"byte_end":94648,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95318,"byte_end":95324,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95466,"byte_end":95472,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":95949,"byte_end":95954,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96133,"byte_end":96138,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96170,"byte_end":96175,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96272,"byte_end":96277,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103556,"byte_end":103563,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":105326,"byte_end":105333,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":106030,"byte_end":106037,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106507,"byte_end":106513,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108755,"byte_end":108761,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":109464,"byte_end":109470,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110007,"byte_end":110016,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110996,"byte_end":111005,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":111711,"byte_end":111720,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":119918,"byte_end":119928,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121690,"byte_end":121700,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":122873,"byte_end":122883,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123365,"byte_end":123374,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":125080,"byte_end":125089,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126442,"byte_end":126450,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":127420,"byte_end":127428,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":128872,"byte_end":128880,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129538,"byte_end":129544,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129929,"byte_end":129935,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130316,"byte_end":130322,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130563,"byte_end":130569,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130916,"byte_end":130922,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":131198,"byte_end":131204,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":131564,"byte_end":131570,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":133348,"byte_end":133354,"line_start":160,"line_end":160,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":134425,"byte_end":134431,"line_start":196,"line_end":196,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":135770,"byte_end":135776,"line_start":238,"line_end":238,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":136214,"byte_end":136220,"line_start":255,"line_end":255,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901011,"byte_end":8901020,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6703}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902317,"byte_end":8902328,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6705}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904197,"byte_end":8904204,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6709}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904387,"byte_end":8904394,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904420,"byte_end":8904429,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6713},{"krate":0,"index":6714}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905403,"byte_end":8905414,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":189153,"byte_end":189158,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":189415,"byte_end":189420,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":189625,"byte_end":189630,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191179,"byte_end":191186,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191484,"byte_end":191491,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191667,"byte_end":191674,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192566,"byte_end":192572,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192839,"byte_end":192845,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":193620,"byte_end":193626,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194239,"byte_end":194244,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194433,"byte_end":194438,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":195187,"byte_end":195192,"line_start":57,"line_end":57,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":195876,"byte_end":195885,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":6999},{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7002}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":196104,"byte_end":196113,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":196231,"byte_end":196240,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":197624,"byte_end":197630,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":198103,"byte_end":198109,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":7072},{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":198487,"byte_end":198493,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":198842,"byte_end":198848,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":200997,"byte_end":201006,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":201303,"byte_end":201312,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":7142},{"krate":0,"index":7143},{"krate":0,"index":7144},{"krate":0,"index":7145}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":201591,"byte_end":201600,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":201877,"byte_end":201886,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":203963,"byte_end":203970,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":7203},{"krate":0,"index":7204},{"krate":0,"index":7205},{"krate":0,"index":7206}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":204139,"byte_end":204146,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":204338,"byte_end":204345,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":205787,"byte_end":205791,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":206147,"byte_end":206151,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":206469,"byte_end":206473,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":206720,"byte_end":206724,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208257,"byte_end":208264,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208557,"byte_end":208564,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208840,"byte_end":208847,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":209098,"byte_end":209105,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210154,"byte_end":210158,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":7458},{"krate":0,"index":7459},{"krate":0,"index":7460},{"krate":0,"index":7461}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210655,"byte_end":210659,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210757,"byte_end":210761,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":211961,"byte_end":211973,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214463,"byte_end":214475,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214595,"byte_end":214607,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215455,"byte_end":215458,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215673,"byte_end":215676,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":7597},{"krate":0,"index":7598},{"krate":0,"index":7599},{"krate":0,"index":7600}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215845,"byte_end":215848,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":216022,"byte_end":216025,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217172,"byte_end":217176,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217227,"byte_end":217231,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217382,"byte_end":217386,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217525,"byte_end":217529,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218178,"byte_end":218192,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218343,"byte_end":218357,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218501,"byte_end":218515,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219690,"byte_end":219698,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":7755},{"krate":0,"index":7756},{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":1452},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220875,"byte_end":220883,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":221025,"byte_end":221033,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222191,"byte_end":222195,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222466,"byte_end":222470,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222581,"byte_end":222585,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223431,"byte_end":223435,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":7853},{"krate":0,"index":7854},{"krate":0,"index":7855},{"krate":0,"index":7856}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223659,"byte_end":223663,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223781,"byte_end":223785,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225412,"byte_end":225421,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225873,"byte_end":225882,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":7929},{"krate":0,"index":7930},{"krate":0,"index":7931},{"krate":0,"index":7932}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":226289,"byte_end":226298,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":226558,"byte_end":226567,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":228850,"byte_end":228854,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":7978},{"krate":0,"index":7979},{"krate":0,"index":7980},{"krate":0,"index":7981}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":229060,"byte_end":229064,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":230058,"byte_end":230062,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":231009,"byte_end":231018,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":231466,"byte_end":231475,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":8054},{"krate":0,"index":8055},{"krate":0,"index":8056},{"krate":0,"index":8057}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":231875,"byte_end":231884,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":233438,"byte_end":233447,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":234759,"byte_end":234768,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235095,"byte_end":235104,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":8117},{"krate":0,"index":8118},{"krate":0,"index":8119},{"krate":0,"index":8120},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":237278,"byte_end":237287,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":238319,"byte_end":238328,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239202,"byte_end":239206,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239496,"byte_end":239500,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":8187},{"krate":0,"index":8188},{"krate":0,"index":8189},{"krate":0,"index":8190}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239797,"byte_end":239801,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":240039,"byte_end":240043,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":241909,"byte_end":241912,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243555,"byte_end":243558,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243749,"byte_end":243752,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246396,"byte_end":246402,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":8302},{"krate":0,"index":8303},{"krate":0,"index":8304},{"krate":0,"index":8305}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246905,"byte_end":246911,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":248549,"byte_end":248555,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249484,"byte_end":249495,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":8354},{"krate":0,"index":8355},{"krate":0,"index":8356},{"krate":0,"index":8357}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249842,"byte_end":249853,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":251961,"byte_end":251972,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":252902,"byte_end":252906,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":253392,"byte_end":253396,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":253560,"byte_end":253564,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":8434},{"krate":0,"index":8435},{"krate":0,"index":8436},{"krate":0,"index":8437}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":254016,"byte_end":254020,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":255247,"byte_end":255251,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8920994,"byte_end":8921009,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8455}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8921341,"byte_end":8921356,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8458},{"krate":0,"index":8531},{"krate":0,"index":8532},{"krate":0,"index":8533},{"krate":0,"index":8534}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8921743,"byte_end":8921758,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8923235,"byte_end":8923250,"line_start":106,"line_end":106,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8466}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924280,"byte_end":8924288,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8483}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924635,"byte_end":8924643,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8486},{"krate":0,"index":8535},{"krate":0,"index":8536},{"krate":0,"index":8537},{"krate":0,"index":8538}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924968,"byte_end":8924976,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8489},{"krate":0,"index":8490},{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927288,"byte_end":8927305,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8512}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927651,"byte_end":8927668,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8517}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8928101,"byte_end":8928118,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8522}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8928360,"byte_end":8928377,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8527},{"krate":0,"index":8528}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256233,"byte_end":256244,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8586},{"krate":0,"index":8587}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256436,"byte_end":256447,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":257355,"byte_end":257366,"line_start":61,"line_end":61,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146188,"byte_end":146189,"line_start":202,"line_end":202,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":294128,"byte_end":294135,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":294428,"byte_end":294435,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":8654},{"krate":0,"index":8655},{"krate":0,"index":8656},{"krate":0,"index":8657}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":294728,"byte_end":294735,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":295913,"byte_end":295920,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":296815,"byte_end":296825,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":8931},{"krate":0,"index":8932},{"krate":0,"index":8933},{"krate":0,"index":8934}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":297018,"byte_end":297028,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":297149,"byte_end":297159,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298213,"byte_end":298219,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2027}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298511,"byte_end":298517,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9157},{"krate":0,"index":9158}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298807,"byte_end":298813,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":300126,"byte_end":300132,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301048,"byte_end":301055,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301109,"byte_end":301116,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301279,"byte_end":301286,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301428,"byte_end":301435,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302166,"byte_end":302176,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302472,"byte_end":302482,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302772,"byte_end":302782,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":304109,"byte_end":304118,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":304514,"byte_end":304523,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":9302},{"krate":0,"index":9303},{"krate":0,"index":9304},{"krate":0,"index":9305}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":304822,"byte_end":304831,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":305100,"byte_end":305109,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307215,"byte_end":307227,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307527,"byte_end":307539,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":9372},{"krate":0,"index":9373},{"krate":0,"index":9374},{"krate":0,"index":9375}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307736,"byte_end":307748,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":308038,"byte_end":308050,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310189,"byte_end":310199,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2185},{"krate":0,"index":9422},{"krate":0,"index":9423},{"krate":0,"index":9424},{"krate":0,"index":9425}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310464,"byte_end":310474,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310720,"byte_end":310730,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312275,"byte_end":312285,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312458,"byte_end":312468,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312656,"byte_end":312666,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313623,"byte_end":313632,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313884,"byte_end":313893,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":315084,"byte_end":315091,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":315450,"byte_end":315457,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":315794,"byte_end":315801,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":316067,"byte_end":316074,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319842,"byte_end":319851,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":320152,"byte_end":320161,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":321850,"byte_end":321862,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":322318,"byte_end":322330,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":9743},{"krate":0,"index":9744},{"krate":0,"index":9745},{"krate":0,"index":9746}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":322751,"byte_end":322763,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":324297,"byte_end":324309,"line_start":105,"line_end":105,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325457,"byte_end":325469,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325921,"byte_end":325933,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":9819},{"krate":0,"index":9820},{"krate":0,"index":9821},{"krate":0,"index":9822}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":326340,"byte_end":326352,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":327959,"byte_end":327971,"line_start":113,"line_end":113,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941597,"byte_end":8941615,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9843},{"krate":0,"index":9914},{"krate":0,"index":9915},{"krate":0,"index":9916},{"krate":0,"index":9917}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941960,"byte_end":8941978,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9846},{"krate":0,"index":9847}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8944160,"byte_end":8944171,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9869},{"krate":0,"index":9918},{"krate":0,"index":9919},{"krate":0,"index":9920},{"krate":0,"index":9921}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8944508,"byte_end":8944519,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9872},{"krate":0,"index":9873}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8946649,"byte_end":8946669,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9895}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8947034,"byte_end":8947054,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9900}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8947305,"byte_end":8947325,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9905}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8947773,"byte_end":8947793,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9910},{"krate":0,"index":9911}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":329090,"byte_end":329103,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":329319,"byte_end":329332,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":329577,"byte_end":329590,"line_start":49,"line_end":49,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":331458,"byte_end":331471,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":332133,"byte_end":332146,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262392,"byte_end":262393,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334263,"byte_end":334267,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334873,"byte_end":334877,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":336018,"byte_end":336024,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":336051,"byte_end":336057,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":336364,"byte_end":336370,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336982,"byte_end":336987,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":337019,"byte_end":337024,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":337109,"byte_end":337114,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":337363,"byte_end":337368,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338188,"byte_end":338192,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338321,"byte_end":338325,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338930,"byte_end":338934,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339544,"byte_end":339551,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339583,"byte_end":339590,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339675,"byte_end":339682,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339927,"byte_end":339934,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340295,"byte_end":340301,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340332,"byte_end":340338,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":341080,"byte_end":341086,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342441,"byte_end":342447,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343870,"byte_end":343876,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":344094,"byte_end":344100,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347373,"byte_end":347379,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347682,"byte_end":347688,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347914,"byte_end":347920,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952115,"byte_end":8952127,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10161}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952232,"byte_end":8952244,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952275,"byte_end":8952287,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10166}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952410,"byte_end":8952422,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10169}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952603,"byte_end":8952615,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10172},{"krate":0,"index":10173}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955232,"byte_end":8955246,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955272,"byte_end":8955286,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10185},{"krate":0,"index":10186},{"krate":0,"index":10187},{"krate":0,"index":10188}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956885,"byte_end":8956899,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10191}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956992,"byte_end":8957006,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10194},{"krate":0,"index":10195},{"krate":0,"index":10196}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958190,"byte_end":8958204,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10199}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958370,"byte_end":8958384,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10202}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958632,"byte_end":8958646,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10207}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958816,"byte_end":8958830,"line_start":212,"line_end":212,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10210}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/abort.rs","byte_start":8984932,"byte_end":8984943,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10254}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8986115,"byte_end":8986125,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10264},{"krate":0,"index":10265},{"krate":0,"index":10266}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8986982,"byte_end":8986992,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8987040,"byte_end":8987047,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10272},{"krate":0,"index":10273},{"krate":0,"index":10274}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8987311,"byte_end":8987318,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8987359,"byte_end":8987369,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10280},{"krate":0,"index":10281},{"krate":0,"index":10282}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8988286,"byte_end":8988296,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8988344,"byte_end":8988348,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10288},{"krate":0,"index":10289},{"krate":0,"index":10290}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8988604,"byte_end":8988608,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8990097,"byte_end":8990101,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8990136,"byte_end":8990140,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8990172,"byte_end":8990176,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10330}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8991253,"byte_end":8991257,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10333},{"krate":0,"index":10334}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8992257,"byte_end":8992261,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10337}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8993711,"byte_end":8993726,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10369},{"krate":0,"index":10370},{"krate":0,"index":10371}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8995576,"byte_end":8995591,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10374}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962064,"byte_end":8962080,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962121,"byte_end":8962137,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962166,"byte_end":8962182,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962207,"byte_end":8962223,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10391}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962420,"byte_end":8962436,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10393}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964155,"byte_end":8964171,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10396}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964245,"byte_end":8964261,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10399},{"krate":0,"index":10400},{"krate":0,"index":10401},{"krate":0,"index":10402},{"krate":0,"index":10403},{"krate":0,"index":10404},{"krate":0,"index":10405},{"krate":0,"index":10406},{"krate":0,"index":10407},{"krate":0,"index":10408},{"krate":0,"index":10409},{"krate":0,"index":10410},{"krate":0,"index":10411}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8975892,"byte_end":8975908,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10414},{"krate":0,"index":10415},{"krate":0,"index":10424}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8980305,"byte_end":8980309,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10423}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8982647,"byte_end":8982663,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10427}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8982810,"byte_end":8982826,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10430}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8984266,"byte_end":8984282,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10433}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8984526,"byte_end":8984542,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10438}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8984664,"byte_end":8984680,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10441}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997408,"byte_end":8997417,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10465}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997562,"byte_end":8997571,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10468},{"krate":0,"index":10469},{"krate":0,"index":10470},{"krate":0,"index":10471}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998607,"byte_end":8998616,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10474}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998715,"byte_end":8998724,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10477},{"krate":0,"index":10478}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999531,"byte_end":8999540,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10481}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000516,"byte_end":9000525,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10486}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000670,"byte_end":9000679,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10490}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349763,"byte_end":349765,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349820,"byte_end":349822,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382212,"byte_end":382222,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382659,"byte_end":382669,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":383180,"byte_end":383190,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":383730,"byte_end":383740,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":384489,"byte_end":384499,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":385219,"byte_end":385229,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":385817,"byte_end":385827,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":385966,"byte_end":385976,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":386214,"byte_end":386224,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2834},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":386435,"byte_end":386445,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388155,"byte_end":388164,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":10625},{"krate":0,"index":10626},{"krate":0,"index":10627},{"krate":0,"index":10628},{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":389386,"byte_end":389395,"line_start":79,"line_end":79,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":391007,"byte_end":391016,"line_start":123,"line_end":123,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":391869,"byte_end":391878,"line_start":147,"line_end":147,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10629},{"krate":0,"index":10630},{"krate":0,"index":10631},{"krate":0,"index":10632}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":391956,"byte_end":391965,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":392281,"byte_end":392290,"line_start":160,"line_end":160,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":396098,"byte_end":396107,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":10678},{"krate":0,"index":10679},{"krate":0,"index":10680},{"krate":0,"index":10681},{"krate":0,"index":2908}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":397681,"byte_end":397690,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399113,"byte_end":399122,"line_start":133,"line_end":133,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10682},{"krate":0,"index":10683}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399203,"byte_end":399212,"line_start":137,"line_end":137,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10684},{"krate":0,"index":10685}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399293,"byte_end":399302,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2922}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399661,"byte_end":399670,"line_start":151,"line_end":151,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400539,"byte_end":400544,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401845,"byte_end":401850,"line_start":64,"line_end":64,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":402180,"byte_end":402185,"line_start":78,"line_end":78,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":403538,"byte_end":403543,"line_start":128,"line_end":128,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404654,"byte_end":404659,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404712,"byte_end":404717,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2976}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404859,"byte_end":404864,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2979},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406612,"byte_end":406616,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3003},{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":408300,"byte_end":408307,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3025},{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410153,"byte_end":410159,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413380,"byte_end":413386,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413673,"byte_end":413679,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3057},{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":414311,"byte_end":414317,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415466,"byte_end":415472,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10898},{"krate":0,"index":10899},{"krate":0,"index":10900},{"krate":0,"index":10901}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415547,"byte_end":415553,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10902},{"krate":0,"index":10903},{"krate":0,"index":10904},{"krate":0,"index":10905}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415631,"byte_end":415637,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10906},{"krate":0,"index":10907},{"krate":0,"index":10908},{"krate":0,"index":10909}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415710,"byte_end":415716,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10910},{"krate":0,"index":10911},{"krate":0,"index":10912},{"krate":0,"index":10913}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416699,"byte_end":416704,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":417052,"byte_end":417057,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3085},{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":417289,"byte_end":417294,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417792,"byte_end":417799,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417854,"byte_end":417861,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417992,"byte_end":417999,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419569,"byte_end":419574,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419627,"byte_end":419632,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419745,"byte_end":419750,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420482,"byte_end":420487,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420707,"byte_end":420712,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3147},{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421706,"byte_end":421710,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421762,"byte_end":421766,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421931,"byte_end":421935,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422623,"byte_end":422635,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422687,"byte_end":422699,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422878,"byte_end":422890,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3187},{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423560,"byte_end":423569,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423621,"byte_end":423630,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423795,"byte_end":423804,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":424921,"byte_end":424929,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":424984,"byte_end":424992,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":426018,"byte_end":426026,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":426756,"byte_end":426765,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":426817,"byte_end":426826,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":427107,"byte_end":427112,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":428662,"byte_end":428671,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":429519,"byte_end":429531,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":429583,"byte_end":429595,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":430628,"byte_end":430640,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3287},{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":431435,"byte_end":431444,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":431499,"byte_end":431508,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":432480,"byte_end":432489,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433688,"byte_end":433694,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":434474,"byte_end":434480,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":434994,"byte_end":434998,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":435050,"byte_end":435054,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":435211,"byte_end":435215,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436344,"byte_end":436348,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":437066,"byte_end":437070,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438075,"byte_end":438083,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438581,"byte_end":438590,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438982,"byte_end":438990,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3407},{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":439455,"byte_end":439464,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3413},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440441,"byte_end":440453,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440643,"byte_end":440655,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3431}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440889,"byte_end":440901,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441432,"byte_end":441436,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":11117},{"krate":0,"index":11118},{"krate":0,"index":11119},{"krate":0,"index":11120}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443363,"byte_end":443367,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":444011,"byte_end":444015,"line_start":109,"line_end":109,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3460},{"krate":0,"index":3461}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445862,"byte_end":445868,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447971,"byte_end":447977,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":448124,"byte_end":448130,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3483}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448651,"byte_end":448656,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448709,"byte_end":448714,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448876,"byte_end":448881,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449565,"byte_end":449578,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449631,"byte_end":449644,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449817,"byte_end":449830,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3522},{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450497,"byte_end":450505,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450558,"byte_end":450566,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450728,"byte_end":450736,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367205,"byte_end":367206,"line_start":390,"line_end":390,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373391,"byte_end":373392,"line_start":577,"line_end":577,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373926,"byte_end":373927,"line_start":593,"line_end":593,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":381276,"byte_end":381277,"line_start":796,"line_end":796,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451498,"byte_end":451499,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451733,"byte_end":451734,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3614}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":452003,"byte_end":452004,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453019,"byte_end":453023,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453117,"byte_end":453121,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453380,"byte_end":453387,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3640},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453610,"byte_end":453617,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453808,"byte_end":453815,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454120,"byte_end":454133,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3657},{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454550,"byte_end":454559,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3663},{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454841,"byte_end":454850,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3669}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455110,"byte_end":455119,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3674}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455439,"byte_end":455446,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3681},{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455665,"byte_end":455672,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455850,"byte_end":455857,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3694}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456158,"byte_end":456166,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":3703}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456389,"byte_end":456397,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456579,"byte_end":456587,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456897,"byte_end":456908,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":3725}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457145,"byte_end":457156,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3731}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457371,"byte_end":457382,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457727,"byte_end":457739,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3745},{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457977,"byte_end":457989,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":458205,"byte_end":458217,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":458814,"byte_end":458828,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3771},{"krate":0,"index":3772}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459049,"byte_end":459063,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3778}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459262,"byte_end":459276,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459580,"byte_end":459586,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3794}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459679,"byte_end":459685,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3798},{"krate":0,"index":3799}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009195,"byte_end":9009200,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11342}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009533,"byte_end":9009538,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11345}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009631,"byte_end":9009636,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11348}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009769,"byte_end":9009775,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11356},{"krate":0,"index":11357}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010309,"byte_end":9010314,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11362},{"krate":0,"index":11363}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010885,"byte_end":9010890,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367},{"krate":0,"index":11368},{"krate":0,"index":11369},{"krate":0,"index":11370}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9014039,"byte_end":9014054,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11379}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9014564,"byte_end":9014579,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11382}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9014696,"byte_end":9014711,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11386},{"krate":0,"index":11387}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9015940,"byte_end":9015955,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11390}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016557,"byte_end":9016567,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11398}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017579,"byte_end":9017589,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11403}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017834,"byte_end":9017844,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11406}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017942,"byte_end":9017952,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11409},{"krate":0,"index":11410}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018093,"byte_end":9018103,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11413}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018554,"byte_end":9018570,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11425}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019700,"byte_end":9019716,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":11431}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019981,"byte_end":9019997,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":11435}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020109,"byte_end":9020125,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":11439},{"krate":0,"index":11440}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020268,"byte_end":9020284,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":11444}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020561,"byte_end":9020566,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020612,"byte_end":9020617,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020784,"byte_end":9020799,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020903,"byte_end":9020918,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021122,"byte_end":9021132,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021182,"byte_end":9021192,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021260,"byte_end":9021276,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021347,"byte_end":9021363,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9023367,"byte_end":9023372,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9023409,"byte_end":9023414,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9023430,"byte_end":9023436,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11489},{"krate":0,"index":11490},{"krate":0,"index":11492},{"krate":0,"index":11493}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029107,"byte_end":9029112,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11496}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029234,"byte_end":9029239,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11499}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029567,"byte_end":9029579,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11507}],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029769,"byte_end":9029781,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11510}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030002,"byte_end":9030014,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030396,"byte_end":9030407,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11515},{"krate":0,"index":11516}],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030570,"byte_end":9030581,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11519}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Inherent","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030719,"byte_end":9030730,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":11522}],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Direct","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9031082,"byte_end":9031093,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11525}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":11826,"byte_end":11832,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":11908,"byte_end":11914,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":995}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/mod.rs","byte_start":139469,"byte_end":139486,"line_start":93,"line_end":93,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":10213}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12148,"byte_end":12152,"line_start":322,"line_end":322,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2718}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12163,"byte_end":12168,"line_start":324,"line_end":324,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2757}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12366,"byte_end":12368,"line_start":333,"line_end":333,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":2759}},{"kind":"Mod","span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lib.rs","byte_start":12592,"byte_end":12596,"line_start":343,"line_end":343,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":11312}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":35903,"byte_end":35910,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":36034,"byte_end":36041,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3800},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":36272,"byte_end":36279,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":37052,"byte_end":37059,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3800},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/flatten.rs","byte_start":37290,"byte_end":37297,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3800},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40255,"byte_end":40259,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":40356,"byte_end":40360,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":42079,"byte_end":42083,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3858},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/fuse.rs","byte_start":42192,"byte_end":42196,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3858},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":43075,"byte_end":43078,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":43247,"byte_end":43250,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3903},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/map.rs","byte_start":43516,"byte_end":43519,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3903},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44638,"byte_end":44649,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/catch_unwind.rs","byte_start":44784,"byte_end":44795,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4526},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46114,"byte_end":46120,"line_start":34,"line_end":34,"column_start":29,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46163,"byte_end":46169,"line_start":36,"line_end":36,"column_start":34,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46427,"byte_end":46432,"line_start":45,"line_end":45,"column_start":34,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46586,"byte_end":46596,"line_start":51,"line_end":51,"column_start":34,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46828,"byte_end":46833,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":46930,"byte_end":46935,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47179,"byte_end":47185,"line_start":83,"line_end":83,"column_start":19,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":47642,"byte_end":47648,"line_start":100,"line_end":100,"column_start":11,"column_end":17},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":48674,"byte_end":48679,"line_start":131,"line_end":131,"column_start":11,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":50375,"byte_end":50381,"line_start":180,"line_end":180,"column_start":27,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":174},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":50533,"byte_end":50539,"line_start":190,"line_end":190,"column_start":22,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":52077,"byte_end":52082,"line_start":236,"line_end":236,"column_start":23,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":236},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":53869,"byte_end":53875,"line_start":295,"line_end":295,"column_start":21,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54067,"byte_end":54073,"line_start":307,"line_end":307,"column_start":20,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54501,"byte_end":54509,"line_start":324,"line_end":324,"column_start":18,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":182},"to":{"krate":18,"index":260}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/shared.rs","byte_start":54868,"byte_end":54878,"line_start":337,"line_end":337,"column_start":19,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19203,"byte_end":19204,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":258},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/future/mod.rs","byte_start":19335,"byte_end":19341,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":9132},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77161,"byte_end":77171,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77319,"byte_end":77329,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4571},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/into_future.rs","byte_start":77435,"byte_end":77445,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4571},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78098,"byte_end":78108,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78232,"byte_end":78242,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4616},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":78489,"byte_end":78499,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4616},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":79512,"byte_end":79522,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4616},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten.rs","byte_start":79769,"byte_end":79779,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4616},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83173,"byte_end":83186,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83310,"byte_end":83323,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4674},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/try_flatten_err.rs","byte_start":83570,"byte_end":83583,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4674},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59883,"byte_end":59886,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":407},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_future/mod.rs","byte_start":59969,"byte_end":59978,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":16,"index":32},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":84925,"byte_end":84929,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85502,"byte_end":85506,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5660},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/lazy.rs","byte_start":85638,"byte_end":85642,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86219,"byte_end":86226,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5666},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86777,"byte_end":86784,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86929,"byte_end":86936,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/pending.rs","byte_start":86963,"byte_end":86970,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":88291,"byte_end":88300,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":89295,"byte_end":89304,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5672},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/maybe_done.rs","byte_start":89505,"byte_end":89514,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5672},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":90930,"byte_end":90942,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":91952,"byte_end":91964,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5731},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_maybe_done.rs","byte_start":92168,"byte_end":92180,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5731},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":93688,"byte_end":93700,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5790},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":94033,"byte_end":94045,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5790},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/option.rs","byte_start":94228,"byte_end":94240,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5790},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":94642,"byte_end":94648,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95318,"byte_end":95324,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/poll_fn.rs","byte_start":95466,"byte_end":95472,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":95949,"byte_end":95954,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96133,"byte_end":96138,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5838},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96170,"byte_end":96175,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5838},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/ready.rs","byte_start":96272,"byte_end":96277,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5838},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":103556,"byte_end":103563,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":105326,"byte_end":105333,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/join_all.rs","byte_start":106030,"byte_end":106037,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":106507,"byte_end":106513,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6236},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":108755,"byte_end":108761,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6236},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select.rs","byte_start":109464,"byte_end":109470,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6236},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110007,"byte_end":110016,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":110996,"byte_end":111005,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_all.rs","byte_start":111711,"byte_end":111720,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":119918,"byte_end":119928,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":121690,"byte_end":121700,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_join_all.rs","byte_start":122873,"byte_end":122883,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":123365,"byte_end":123374,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6616},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/try_select.rs","byte_start":125080,"byte_end":125089,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6616},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":126442,"byte_end":126450,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6624},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":127420,"byte_end":127428,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6624},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/select_ok.rs","byte_start":128872,"byte_end":128880,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6624},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129538,"byte_end":129544,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":129929,"byte_end":129935,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130316,"byte_end":130322,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130563,"byte_end":130569,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6630},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":130916,"byte_end":130922,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6630},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":131198,"byte_end":131204,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6630},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":131564,"byte_end":131570,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6630},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":133348,"byte_end":133354,"line_start":160,"line_end":160,"column_start":30,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6630},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":134425,"byte_end":134431,"line_start":196,"line_end":196,"column_start":31,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6630},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":135770,"byte_end":135776,"line_start":238,"line_end":238,"column_start":30,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6630},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/either.rs","byte_start":136214,"byte_end":136220,"line_start":255,"line_end":255,"column_start":33,"column_end":39},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6630},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8901011,"byte_end":8901020,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":11915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8902317,"byte_end":8902328,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904197,"byte_end":8904204,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6738},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904387,"byte_end":8904394,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6738},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8904420,"byte_end":8904429,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":11915},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/future/abortable.rs","byte_start":8905403,"byte_end":8905414,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":189153,"byte_end":189158,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":189415,"byte_end":189420,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6751},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chain.rs","byte_start":189625,"byte_end":189630,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6751},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191179,"byte_end":191186,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191484,"byte_end":191491,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6808},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/collect.rs","byte_start":191667,"byte_end":191674,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6808},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192566,"byte_end":192572,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":192839,"byte_end":192845,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6864},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/concat.rs","byte_start":193620,"byte_end":193626,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6864},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194239,"byte_end":194244,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":194433,"byte_end":194438,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6909},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/cycle.rs","byte_start":195187,"byte_end":195192,"line_start":57,"line_end":57,"column_start":26,"column_end":31},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6909},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":195876,"byte_end":195885,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":196104,"byte_end":196113,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6954},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/enumerate.rs","byte_start":196231,"byte_end":196240,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6954},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":197624,"byte_end":197630,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7003},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":198103,"byte_end":198109,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":198487,"byte_end":198493,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7003},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter.rs","byte_start":198842,"byte_end":198848,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7003},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":200997,"byte_end":201006,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7076},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":201303,"byte_end":201312,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":201591,"byte_end":201600,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":7076},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/filter_map.rs","byte_start":201877,"byte_end":201886,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":7076},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":203963,"byte_end":203970,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":7146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":204139,"byte_end":204146,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7146},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/flatten.rs","byte_start":204338,"byte_end":204345,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7146},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":205787,"byte_end":205791,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":7268},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":206147,"byte_end":206151,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":7268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":206469,"byte_end":206473,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":7268},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fold.rs","byte_start":206720,"byte_end":206724,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":7268},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208257,"byte_end":208264,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":7347},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208557,"byte_end":208564,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":7347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":208840,"byte_end":208847,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":7347},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each.rs","byte_start":209098,"byte_end":209105,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":7347},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210154,"byte_end":210158,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":7413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210655,"byte_end":210659,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":7413},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/fuse.rs","byte_start":210757,"byte_end":210761,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":7413},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":211961,"byte_end":211973,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":7462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214463,"byte_end":214475,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":7462},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/into_future.rs","byte_start":214595,"byte_end":214607,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":7462},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215455,"byte_end":215458,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":7545},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215673,"byte_end":215676,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":7545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":215845,"byte_end":215848,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":7545},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/map.rs","byte_start":216022,"byte_end":216025,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":7545},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217172,"byte_end":217176,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":7694},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217227,"byte_end":217231,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":7694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217382,"byte_end":217386,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7694},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/next.rs","byte_start":217525,"byte_end":217529,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":7694},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218178,"byte_end":218192,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":7702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218343,"byte_end":218357,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":7702},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/select_next_some.rs","byte_start":218501,"byte_end":218515,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":7702},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":219690,"byte_end":219698,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":7710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":220875,"byte_end":220883,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":7710},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":221025,"byte_end":221033,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":7710},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222191,"byte_end":222195,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222466,"byte_end":222470,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":7759},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/peek.rs","byte_start":222581,"byte_end":222585,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223431,"byte_end":223435,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223659,"byte_end":223663,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7808},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip.rs","byte_start":223781,"byte_end":223785,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7808},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225412,"byte_end":225421,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":7857},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":225873,"byte_end":225882,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":7857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":226289,"byte_end":226298,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":7857},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/skip_while.rs","byte_start":226558,"byte_end":226567,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":7857},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":228850,"byte_end":228854,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":7933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":229060,"byte_end":229064,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":7933},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take.rs","byte_start":230058,"byte_end":230062,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":7933},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":231009,"byte_end":231018,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":7982},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":231466,"byte_end":231475,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":7982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":231875,"byte_end":231884,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":7982},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_while.rs","byte_start":233438,"byte_end":233447,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":7982},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":234759,"byte_end":234768,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":8058},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":235095,"byte_end":235104,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":8058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":237278,"byte_end":237287,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":8058},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/take_until.rs","byte_start":238319,"byte_end":238328,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":8058},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239202,"byte_end":239206,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":8121},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239496,"byte_end":239500,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":8121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":239797,"byte_end":239801,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":8121},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/then.rs","byte_start":240039,"byte_end":240043,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":8121},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":241909,"byte_end":241912,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":8191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243555,"byte_end":243558,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":8191},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/zip.rs","byte_start":243749,"byte_end":243752,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":8191},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246396,"byte_end":246402,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":246905,"byte_end":246911,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8254},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/chunks.rs","byte_start":248549,"byte_end":248555,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8254},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249484,"byte_end":249495,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":8306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":249842,"byte_end":249853,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":8306},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/ready_chunks.rs","byte_start":251961,"byte_end":251972,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":8306},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":252902,"byte_end":252906,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":8358},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":253392,"byte_end":253396,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":8358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":253560,"byte_end":253564,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":8358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":254016,"byte_end":254020,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8358},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/scan.rs","byte_start":255247,"byte_end":255251,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":8358},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8920994,"byte_end":8921009,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":11870},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8921341,"byte_end":8921356,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":11870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8921743,"byte_end":8921758,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":11870},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffer_unordered.rs","byte_start":8923235,"byte_end":8923250,"line_start":106,"line_end":106,"column_start":26,"column_end":41},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":11870},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924280,"byte_end":8924288,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":11825},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924635,"byte_end":8924643,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":11825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/buffered.rs","byte_start":8924968,"byte_end":8924976,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":11825},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927288,"byte_end":8927305,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":11757},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8927651,"byte_end":8927668,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":11757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8928101,"byte_end":8928118,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":11757},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/for_each_concurrent.rs","byte_start":8928360,"byte_end":8928377,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":11757},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256233,"byte_end":256244,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":8539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":256436,"byte_end":256447,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":8539},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/catch_unwind.rs","byte_start":257355,"byte_end":257366,"line_start":61,"line_end":61,"column_start":52,"column_end":63},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":8539},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146188,"byte_end":146189,"line_start":202,"line_end":202,"column_start":31,"column_end":32},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":1818},"to":{"krate":0,"index":1819}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/stream/mod.rs","byte_start":146332,"byte_end":146338,"line_start":206,"line_end":206,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":16,"index":68},"to":{"krate":0,"index":1819}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":294128,"byte_end":294135,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":8588},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":294428,"byte_end":294435,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":294728,"byte_end":294735,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":8588},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/and_then.rs","byte_start":295913,"byte_end":295920,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":8588},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":296815,"byte_end":296825,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":8889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":297018,"byte_end":297028,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":8889},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_stream.rs","byte_start":297149,"byte_end":297159,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":8889},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298213,"byte_end":298219,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":9089},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298511,"byte_end":298517,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":9089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":298807,"byte_end":298813,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":9089},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/or_else.rs","byte_start":300126,"byte_end":300132,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":9089},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301048,"byte_end":301055,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":9159},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301109,"byte_end":301116,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":9159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301279,"byte_end":301286,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":9159},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_next.rs","byte_start":301428,"byte_end":301435,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":9159},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302166,"byte_end":302176,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":9167},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302472,"byte_end":302482,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":9167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each.rs","byte_start":302772,"byte_end":302782,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":9167},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":304109,"byte_end":304118,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":9233},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":304514,"byte_end":304523,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":9233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":304822,"byte_end":304831,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":9233},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter.rs","byte_start":305100,"byte_end":305109,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":9233},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307215,"byte_end":307227,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":9306},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307527,"byte_end":307539,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":9306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":307736,"byte_end":307748,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":9306},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_filter_map.rs","byte_start":308038,"byte_end":308050,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":9306},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310189,"byte_end":310199,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":9376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310464,"byte_end":310474,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":9376},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_flatten.rs","byte_start":310720,"byte_end":310730,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":9376},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312275,"byte_end":312285,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":9426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312458,"byte_end":312468,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":9426},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_collect.rs","byte_start":312656,"byte_end":312666,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":9426},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313623,"byte_end":313632,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":9482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_concat.rs","byte_start":313884,"byte_end":313893,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":9482},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":315084,"byte_end":315091,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":315450,"byte_end":315457,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":9527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":315794,"byte_end":315801,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":9527},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_fold.rs","byte_start":316067,"byte_end":316074,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":319842,"byte_end":319851,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":9606},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_unfold.rs","byte_start":320152,"byte_end":320161,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":9606},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":321850,"byte_end":321862,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":9671},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":322318,"byte_end":322330,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":9671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":322751,"byte_end":322763,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9671},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_skip_while.rs","byte_start":324297,"byte_end":324309,"line_start":105,"line_end":105,"column_start":34,"column_end":46},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9671},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325457,"byte_end":325469,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":9747},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":325921,"byte_end":325933,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":9747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":326340,"byte_end":326352,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":9747},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_take_while.rs","byte_start":327959,"byte_end":327971,"line_start":113,"line_end":113,"column_start":34,"column_end":46},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":9747},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941597,"byte_end":8941615,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":11709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8941960,"byte_end":8941978,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":11709},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8944160,"byte_end":8944171,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":11661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_buffered.rs","byte_start":8944508,"byte_end":8944519,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":11661},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8946649,"byte_end":8946669,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":11593},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8947034,"byte_end":8947054,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":11593},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8947305,"byte_end":8947325,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":11593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8947773,"byte_end":8947793,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":11593},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":329090,"byte_end":329103,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":9922},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":329319,"byte_end":329332,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":9922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":329577,"byte_end":329590,"line_start":49,"line_end":49,"column_start":24,"column_end":37},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":9922},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":331458,"byte_end":331471,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":9922},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/into_async_read.rs","byte_start":332133,"byte_end":332146,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":9922},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262392,"byte_end":262393,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":2410},"to":{"krate":0,"index":2411}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/try_stream/mod.rs","byte_start":262474,"byte_end":262483,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":16,"index":97},"to":{"krate":0,"index":2411}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334263,"byte_end":334267,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":9941},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/iter.rs","byte_start":334873,"byte_end":334877,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":9941},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":336018,"byte_end":336024,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":9950},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":336051,"byte_end":336057,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":9950},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/repeat.rs","byte_start":336364,"byte_end":336370,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":9950},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":336982,"byte_end":336987,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":9959},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":337019,"byte_end":337024,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":9959},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":337109,"byte_end":337114,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":9959},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/empty.rs","byte_start":337363,"byte_end":337368,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":9959},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338188,"byte_end":338192,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":9965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338321,"byte_end":338325,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":9965},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/once.rs","byte_start":338930,"byte_end":338934,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":9965},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339544,"byte_end":339551,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339583,"byte_end":339590,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":10007},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339675,"byte_end":339682,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":10007},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/pending.rs","byte_start":339927,"byte_end":339934,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340295,"byte_end":340301,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":2619},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":340332,"byte_end":340338,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":2619},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/poll_fn.rs","byte_start":341080,"byte_end":341086,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":2619},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":342441,"byte_end":342447,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":10013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":343870,"byte_end":343876,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":10013},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select.rs","byte_start":344094,"byte_end":344100,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":10013},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347373,"byte_end":347379,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":10073},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347682,"byte_end":347688,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":10073},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/unfold.rs","byte_start":347914,"byte_end":347920,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":10073},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952115,"byte_end":8952127,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":11548},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952232,"byte_end":8952244,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":11548},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952275,"byte_end":8952287,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":11548},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952410,"byte_end":8952422,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":11548},"to":{"krate":2,"index":1796}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8952603,"byte_end":8952615,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":11548},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955232,"byte_end":8955246,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8955272,"byte_end":8955286,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":10175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956885,"byte_end":8956899,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8956992,"byte_end":8957006,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":10175},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958190,"byte_end":8958204,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958370,"byte_end":8958384,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958632,"byte_end":8958646,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":10175},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_ordered.rs","byte_start":8958816,"byte_end":8958830,"line_start":212,"line_end":212,"column_start":35,"column_end":49},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/abort.rs","byte_start":8984932,"byte_end":8984943,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":10251},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8986115,"byte_end":8986125,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":10495},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8986982,"byte_end":8986992,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":10495},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8987040,"byte_end":8987047,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":10505},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8987311,"byte_end":8987318,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":10505},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8987359,"byte_end":8987369,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":10514},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8988286,"byte_end":8988296,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":10514},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8988344,"byte_end":8988348,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/iter.rs","byte_start":8988604,"byte_end":8988608,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8990097,"byte_end":8990101,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":10315},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8990136,"byte_end":8990140,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":10315},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8990172,"byte_end":8990176,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":10315},"to":{"krate":18,"index":260}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8991253,"byte_end":8991257,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":10315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/task.rs","byte_start":8992257,"byte_end":8992261,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":10315},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8993711,"byte_end":8993726,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":10361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8995576,"byte_end":8995591,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":10361},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962064,"byte_end":8962080,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962121,"byte_end":8962137,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962166,"byte_end":8962182,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962207,"byte_end":8962223,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":10379},"to":{"krate":18,"index":10}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8962420,"byte_end":8962436,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":10379},"to":{"krate":18,"index":13}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964155,"byte_end":8964171,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8964245,"byte_end":8964261,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":10379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8975892,"byte_end":8975908,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":10379},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8980305,"byte_end":8980309,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":10416},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8982647,"byte_end":8982663,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8982810,"byte_end":8982826,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8984266,"byte_end":8984282,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8984526,"byte_end":8984542,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":10379},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/futures_unordered/mod.rs","byte_start":8984664,"byte_end":8984680,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997408,"byte_end":8997417,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":10460},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8997562,"byte_end":8997571,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":10460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998607,"byte_end":8998616,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":10460},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8998715,"byte_end":8998724,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":10460},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":8999531,"byte_end":8999540,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":10460},"to":{"krate":16,"index":82}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000516,"byte_end":9000525,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":10460},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/stream/select_all.rs","byte_start":9000670,"byte_end":9000679,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":10460},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349763,"byte_end":349765,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":2730},"to":{"krate":0,"index":2733}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349820,"byte_end":349822,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":2732},"to":{"krate":0,"index":2736}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":349901,"byte_end":349906,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":18,"index":10},"to":{"krate":0,"index":2733}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/task/spawn.rs","byte_start":352670,"byte_end":352680,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":13},"to":{"krate":0,"index":2736}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382212,"byte_end":382222,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":10540},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":382659,"byte_end":382669,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":10540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":383180,"byte_end":383190,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":10540},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":383730,"byte_end":383740,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":10540},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":384489,"byte_end":384499,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":10540},"to":{"krate":1,"index":3117}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":385219,"byte_end":385229,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":10540},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":385817,"byte_end":385827,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":10540},"to":{"krate":1,"index":3194}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":385966,"byte_end":385976,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":10540},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":386214,"byte_end":386224,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":10540},"to":{"krate":1,"index":3200}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/allow_std.rs","byte_start":386435,"byte_end":386445,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":10540},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":388155,"byte_end":388164,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":10577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":389386,"byte_end":389395,"line_start":79,"line_end":79,"column_start":34,"column_end":43},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":10577},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":391007,"byte_end":391016,"line_start":123,"line_end":123,"column_start":37,"column_end":46},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":10577},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":391869,"byte_end":391878,"line_start":147,"line_end":147,"column_start":36,"column_end":45},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":10577},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":391956,"byte_end":391965,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":10577},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_reader.rs","byte_start":392281,"byte_end":392290,"line_start":160,"line_end":160,"column_start":46,"column_end":55},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":10577},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":396098,"byte_end":396107,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":10633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":397681,"byte_end":397690,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":10633},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399113,"byte_end":399122,"line_start":133,"line_end":133,"column_start":34,"column_end":43},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":10633},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399203,"byte_end":399212,"line_start":137,"line_end":137,"column_start":40,"column_end":49},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":10633},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399293,"byte_end":399302,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":10633},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/buf_writer.rs","byte_start":399661,"byte_end":399670,"line_start":151,"line_end":151,"column_start":47,"column_end":56},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":10633},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":400539,"byte_end":400544,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":10686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":401845,"byte_end":401850,"line_start":64,"line_end":64,"column_start":27,"column_end":32},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":10686},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":402180,"byte_end":402185,"line_start":78,"line_end":78,"column_start":26,"column_end":31},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":10686},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/chain.rs","byte_start":403538,"byte_end":403543,"line_start":128,"line_end":128,"column_start":29,"column_end":34},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":10686},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404654,"byte_end":404659,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":10742},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404712,"byte_end":404717,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":10742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/close.rs","byte_start":404859,"byte_end":404864,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":10742},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy.rs","byte_start":406612,"byte_end":406616,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":10750},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/copy_buf.rs","byte_start":408300,"byte_end":408307,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":10815},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":410153,"byte_end":410159,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":10886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413380,"byte_end":413386,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":10886},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":413673,"byte_end":413679,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":10886},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":414311,"byte_end":414317,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":10886},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415466,"byte_end":415472,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":10886},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415547,"byte_end":415553,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":10886},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415631,"byte_end":415637,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":10886},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/cursor.rs","byte_start":415710,"byte_end":415716,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":10886},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":416699,"byte_end":416704,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":3079},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":417052,"byte_end":417057,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":3079},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/empty.rs","byte_start":417289,"byte_end":417294,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417792,"byte_end":417799,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":10914},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417854,"byte_end":417861,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":10914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/fill_buf.rs","byte_start":417992,"byte_end":417999,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":10914},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419569,"byte_end":419574,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":10922},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419627,"byte_end":419632,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":10922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/flush.rs","byte_start":419745,"byte_end":419750,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":10922},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420482,"byte_end":420487,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":10930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/lines.rs","byte_start":420707,"byte_end":420712,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":10930},"to":{"krate":16,"index":68}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421706,"byte_end":421710,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421762,"byte_end":421766,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":10981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read.rs","byte_start":421931,"byte_end":421935,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422623,"byte_end":422635,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":10990},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422687,"byte_end":422699,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":10990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_vectored.rs","byte_start":422878,"byte_end":422890,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":10990},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423560,"byte_end":423569,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":10999},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423621,"byte_end":423630,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":10999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_exact.rs","byte_start":423795,"byte_end":423804,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":10999},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":424921,"byte_end":424929,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":11008},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":424984,"byte_end":424992,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":11008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_line.rs","byte_start":426018,"byte_end":426026,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":11008},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":426756,"byte_end":426765,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":11019},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":426817,"byte_end":426826,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":11019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":427107,"byte_end":427112,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":3250},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_end.rs","byte_start":428662,"byte_end":428671,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":11019},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":429519,"byte_end":429531,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":11029},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":429583,"byte_end":429595,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":11029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_to_string.rs","byte_start":430628,"byte_end":430640,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":11029},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":431435,"byte_end":431444,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":11040},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":431499,"byte_end":431508,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":11040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/read_until.rs","byte_start":432480,"byte_end":432489,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":11040},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":433688,"byte_end":433694,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":3322},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/repeat.rs","byte_start":434474,"byte_end":434480,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":3322},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":434994,"byte_end":434998,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":11051},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":435050,"byte_end":435054,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":11051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/seek.rs","byte_start":435211,"byte_end":435215,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":11051},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":436344,"byte_end":436348,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":3364},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/sink.rs","byte_start":437066,"byte_end":437070,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":3364},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438075,"byte_end":438083,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":11060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438581,"byte_end":438590,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":11066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":438982,"byte_end":438990,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":11060},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":439455,"byte_end":439464,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":11066},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440441,"byte_end":440453,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":3421},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440643,"byte_end":440655,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":3421},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/split.rs","byte_start":440889,"byte_end":440901,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":3421},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":441432,"byte_end":441436,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":11072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":443363,"byte_end":443367,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":11072},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/take.rs","byte_start":444011,"byte_end":444015,"line_start":109,"line_end":109,"column_start":40,"column_end":44},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":11072},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":445862,"byte_end":445868,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":11121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":447971,"byte_end":447977,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":11121},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/window.rs","byte_start":448124,"byte_end":448130,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":11121},"to":{"krate":2,"index":1957}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448651,"byte_end":448656,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":11128},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448709,"byte_end":448714,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":11128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write.rs","byte_start":448876,"byte_end":448881,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":11128},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449565,"byte_end":449578,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":11137},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449631,"byte_end":449644,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":11137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_vectored.rs","byte_start":449817,"byte_end":449830,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":11137},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450497,"byte_end":450505,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":11146},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450558,"byte_end":450566,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":11146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/write_all.rs","byte_start":450728,"byte_end":450736,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":11146},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":359166,"byte_end":359175,"line_start":140,"line_end":140,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":23,"index":17},"to":{"krate":0,"index":3545}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367205,"byte_end":367206,"line_start":390,"line_end":390,"column_start":46,"column_end":47},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":3561},"to":{"krate":0,"index":3545}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":367309,"byte_end":367319,"line_start":393,"line_end":393,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":23,"index":20},"to":{"krate":0,"index":3562}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373391,"byte_end":373392,"line_start":577,"line_end":577,"column_start":48,"column_end":49},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":3572},"to":{"krate":0,"index":3562}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373493,"byte_end":373502,"line_start":580,"line_end":580,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":23,"index":25},"to":{"krate":0,"index":3573}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":373926,"byte_end":373927,"line_start":593,"line_end":593,"column_start":46,"column_end":47},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":3576},"to":{"krate":0,"index":3573}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":374034,"byte_end":374046,"line_start":596,"line_end":596,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":23,"index":27},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/io/mod.rs","byte_start":381276,"byte_end":381277,"line_start":796,"line_end":796,"column_start":52,"column_end":53},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":3586},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451498,"byte_end":451499,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":3602},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451637,"byte_end":451644,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":3597},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451733,"byte_end":451734,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":3611},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":451919,"byte_end":451925,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3607},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":452003,"byte_end":452004,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":3619},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453019,"byte_end":453023,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":3624},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453117,"byte_end":453121,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":3624},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453380,"byte_end":453387,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":11173},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453610,"byte_end":453617,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":11173},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":453808,"byte_end":453815,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":11173},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454120,"byte_end":454133,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":11194},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454550,"byte_end":454559,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":11210},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":454841,"byte_end":454850,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":11210},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455110,"byte_end":455119,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":11210},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455439,"byte_end":455446,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":11225},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455665,"byte_end":455672,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":11225},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":455850,"byte_end":455857,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":11225},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456158,"byte_end":456166,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":11240},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456389,"byte_end":456397,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":11240},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456579,"byte_end":456587,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":11240},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":456897,"byte_end":456908,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":11255},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457145,"byte_end":457156,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":11255},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457371,"byte_end":457382,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":11255},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457727,"byte_end":457739,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":11267},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":457977,"byte_end":457989,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":11267},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":458205,"byte_end":458217,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":11267},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":458814,"byte_end":458828,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":11279},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459049,"byte_end":459063,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":11279},"to":{"krate":0,"index":3607}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459262,"byte_end":459276,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":11279},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459580,"byte_end":459586,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":3788},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/fns.rs","byte_start":459679,"byte_end":459685,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":3597}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009195,"byte_end":9009200,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":11335},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009533,"byte_end":9009538,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":11335},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009631,"byte_end":9009636,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":11335},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9009769,"byte_end":9009775,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":11349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010309,"byte_end":9010314,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":11335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9010885,"byte_end":9010890,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":11335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9014039,"byte_end":9014054,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":11372},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9014564,"byte_end":9014579,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":11372},"to":{"krate":16,"index":17}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9014696,"byte_end":9014711,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":11372},"to":{"krate":2,"index":9132}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9015940,"byte_end":9015955,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":11372},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9016557,"byte_end":9016567,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":11391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017579,"byte_end":9017589,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":11391},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017834,"byte_end":9017844,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":11391},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9017942,"byte_end":9017952,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":11391},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018093,"byte_end":9018103,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":11391},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9018554,"byte_end":9018570,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":11414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019700,"byte_end":9019716,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":11414},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9019981,"byte_end":9019997,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":11414},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020109,"byte_end":9020125,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":11414},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020268,"byte_end":9020284,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":11414},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020561,"byte_end":9020566,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":11335},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020612,"byte_end":9020617,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":11335},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020784,"byte_end":9020799,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":11372},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9020903,"byte_end":9020918,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":11372},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021122,"byte_end":9021132,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":11391},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021182,"byte_end":9021192,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":11391},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021260,"byte_end":9021276,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":11414},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/mutex.rs","byte_start":9021347,"byte_end":9021363,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":11414},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9023367,"byte_end":9023372,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":11533},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9023409,"byte_end":9023414,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":11533},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9023430,"byte_end":9023436,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":11527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029107,"byte_end":9029112,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":11533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029234,"byte_end":9029239,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":11533},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029567,"byte_end":9029579,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":11500},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9029769,"byte_end":9029781,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":11500},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030002,"byte_end":9030014,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":11500},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030396,"byte_end":9030407,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":11540},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030570,"byte_end":9030581,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":11540},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9030719,"byte_end":9030730,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":11540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hiroko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.8/src/lock/bilock.rs","byte_start":9031082,"byte_end":9031093,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":11540},"to":{"krate":2,"index":2266}}]}